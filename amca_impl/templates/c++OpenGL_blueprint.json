{
  "c++OpenGL": {
    "type": "directory",
    "content": {
      ".clang-format": {
        "type": "text_file",
        "content": "#### modified LLVM dump\n---\nLanguage:        Cpp\nAccessModifierOffset: -2\nAlignAfterOpenBracket: Align\nAlignArrayOfStructures: None\nAlignConsecutiveAssignments:\n  Enabled:         false\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCompound:   false\n  AlignFunctionPointers: false\n  PadOperators:    true\nAlignConsecutiveBitFields:\n  Enabled:         false\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCompound:   false\n  AlignFunctionPointers: false\n  PadOperators:    false\nAlignConsecutiveDeclarations:\n  Enabled:         false\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCompound:   false\n  AlignFunctionPointers: false\n  PadOperators:    false\nAlignConsecutiveMacros:\n  Enabled:         false\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCompound:   false\n  PadOperators:    false\nAlignConsecutiveShortCaseStatements:\n  Enabled:         false\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCaseArrows: false\n  AlignCaseColons: false\nAlignConsecutiveTableGenBreakingDAGArgColons:\n  Enabled:         false\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCompound:   false\n  AlignFunctionPointers: false\n  PadOperators:    false\nAlignConsecutiveTableGenCondOperatorColons:\n  Enabled:         false\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCompound:   false\n  AlignFunctionPointers: false\n  PadOperators:    false\nAlignConsecutiveTableGenDefinitionColons:\n  Enabled:         false\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCompound:   false\n  AlignFunctionPointers: false\n  PadOperators:    false\nAlignEscapedNewlines: Right\nAlignOperands:   Align\nAlignTrailingComments:\n  Kind:            Always\n  OverEmptyLines:  0\nAllowAllArgumentsOnNextLine: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowBreakBeforeNoexceptSpecifier: Never\nAllowShortBlocksOnASingleLine: Always\nAllowShortCaseExpressionOnASingleLine: true\nAllowShortCaseLabelsOnASingleLine: true\nAllowShortCompoundRequirementOnASingleLine: true\nAllowShortEnumsOnASingleLine: true\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: AllIfsAndElse\nAllowShortLambdasOnASingleLine: All\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAttributeMacros:\n  - __capability\nBinPackArguments: true\nBinPackParameters: true\nBitFieldColonSpacing: Both\nBraceWrapping:\n  AfterCaseLabel:  false\n  AfterClass:      false\n  AfterControlStatement: Never\n  AfterEnum:       false\n  AfterExternBlock: false\n  AfterFunction:   false\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  BeforeCatch:     false\n  BeforeElse:      false\n  BeforeLambdaBody: false\n  BeforeWhile:     false\n  IndentBraces:    false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakAdjacentStringLiterals: true\nBreakAfterAttributes: Leave\nBreakAfterJavaFieldAnnotations: false\nBreakAfterReturnType: None\nBreakArrays:     true\nBreakBeforeBinaryOperators: None\nBreakBeforeConceptDeclarations: Always\nBreakBeforeBraces: Attach\nBreakBeforeInlineASMColon: OnlyMultiline\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializers: AfterColon\nBreakFunctionDefinitionParameters: false\nBreakInheritanceList: BeforeColon\nBreakStringLiterals: true\nBreakTemplateDeclarations: Yes\nColumnLimit:     120\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat:   false\nEmptyLineAfterAccessModifier: Never\nEmptyLineBeforeAccessModifier: LogicalBlock\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nForEachMacros:\n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\nIfMacros:\n  - KJ_IF_MAYBE\nIncludeBlocks:   Preserve\nIncludeCategories:\n  - Regex:           '^\"(llvm|llvm-c|clang|clang-c)/'\n    Priority:        2\n    SortPriority:    0\n    CaseSensitive:   false\n  - Regex:           '^(<|\"(gtest|gmock|isl|json)/)'\n    Priority:        3\n    SortPriority:    0\n    CaseSensitive:   false\n  - Regex:           '.*'\n    Priority:        1\n    SortPriority:    0\n    CaseSensitive:   false\nIncludeIsMainRegex: '(Test)?$'\nIncludeIsMainSourceRegex: ''\nIndentAccessModifiers: false\nIndentCaseBlocks: false\nIndentCaseLabels: false\nIndentExternBlock: AfterExternBlock\nIndentGotoLabels: true\nIndentPPDirectives: None\nIndentRequiresClause: true\nIndentWidth:     2\nIndentWrappedFunctionNames: false\nInsertBraces:    false\nInsertNewlineAtEOF: false\nInsertTrailingCommas: None\nIntegerLiteralSeparator:\n  Binary:          0\n  BinaryMinDigits: 0\n  Decimal:         0\n  DecimalMinDigits: 0\n  Hex:             0\n  HexMinDigits:    0\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLines:\n  AtEndOfFile:     false\n  AtStartOfBlock:  true\n  AtStartOfFile:   true\nLambdaBodyIndentation: Signature\nLineEnding:      DeriveLF\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMainIncludeChar: Quote\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBinPackProtocolList: Auto\nObjCBlockIndentWidth: 2\nObjCBreakBeforeNestedBlockParam: true\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPackConstructorInitializers: BinPack\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakOpenParenthesis: 0\nPenaltyBreakScopeResolution: 500\nPenaltyBreakString: 1000\nPenaltyBreakTemplateDeclaration: 10\nPenaltyExcessCharacter: 1000000\nPenaltyIndentedWhitespace: 0\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Right\nPPIndentWidth:   -1\nQualifierAlignment: Leave\nReferenceAlignment: Pointer\nReflowComments:  true\nRemoveBracesLLVM: false\nRemoveParentheses: Leave\nRemoveSemicolon: false\nRequiresClausePosition: OwnLine\nRequiresExpressionIndentation: OuterScope\nSeparateDefinitionBlocks: Leave\nShortNamespaceLines: 1\nSkipMacroDefinitionBody: false\nSortIncludes: Never \nSortJavaStaticImport: Before\nSortUsingDeclarations: LexicographicNumeric\nSpaceAfterCStyleCast: false\nSpaceAfterLogicalNot: false\nSpaceAfterTemplateKeyword: true\nSpaceAroundPointerQualifiers: Default\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCaseColon: false\nSpaceBeforeCpp11BracedList: false\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeJsonColon: false\nSpaceBeforeParens: ControlStatements\nSpaceBeforeParensOptions:\n  AfterControlStatements: true\n  AfterForeachMacros: true\n  AfterFunctionDefinitionName: false\n  AfterFunctionDeclarationName: false\n  AfterIfMacros:   true\n  AfterOverloadedOperator: false\n  AfterPlacementOperator: true\n  AfterRequiresInClause: false\n  AfterRequiresInExpression: false\n  BeforeNonEmptyParentheses: false\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceBeforeSquareBrackets: false\nSpaceInEmptyBlock: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  Never\nSpacesInContainerLiterals: true\nSpacesInLineCommentPrefix:\n  Minimum:         1\n  Maximum:         -1\nSpacesInParens:  Never\nSpacesInParensOptions:\n  ExceptDoubleParentheses: false\n  InCStyleCasts:   false\n  InConditionalStatements: false\n  InEmptyParentheses: false\n  Other:           false\nSpacesInSquareBrackets: false\nStandard:        Latest\nStatementAttributeLikeMacros:\n  - Q_EMIT\nStatementMacros:\n  - Q_UNUSED\n  - QT_REQUIRE_VERSION\nTableGenBreakInsideDAGArg: DontBreak\nTabWidth:        8\nUseTab:          Never\nVerilogBreakBetweenInstancePorts: true\nWhitespaceSensitiveMacros:\n  - BOOST_PP_STRINGIZE\n  - CF_SWIFT_NAME\n  - NS_SWIFT_NAME\n  - PP_STRINGIZE\n  - STRINGIZE\n...\n\n"
      },
      ".clangd": {
        "type": "text_file",
        "content": "# Fragment common to C and C++ source files\nCompileFlags:\n  CompilationDatabase: \"./MesonBuildStuff/build/\"\n\n---\n# Fragment specific to C++ source files\nIf:\n    PathExclude: [.*\\.c, .*\\.h]\nCompileFlags:\n    Add:\n        - \"-std=c++23\"\n"
      },
      ".vscode": {
        "type": "directory",
        "content": {
          "launch.json": {
            "type": "text_file",
            "content": "{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug Compile\",\n            \"type\": \"cppdbg\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceFolder}/MesonBuildStuff/build/../../compiled/a\",\n            \"args\": [],\n            \"stopAtEntry\": false,\n            \"cwd\": \"${workspaceFolder}\",\n            \"externalConsole\": false,\n            \"MIMode\": \"gdb\",\n            \"setupCommands\": [\n                {\n                    \"description\": \"Enable pretty-printing for gdb\",\n                    \"text\": \"-enable-pretty-printing\",\n                    \"ignoreFailures\": true\n                }\n            ],\n            \"preLaunchTask\": \"AMCA SoftDebug\"\n        },\n        {\n            \"name\": \"Debug ReBuild & Compile\",\n            \"type\": \"cppdbg\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceFolder}/MesonBuildStuff/build/../../compiled/a\",\n            \"args\": [],\n            \"stopAtEntry\": false,\n            \"cwd\": \"${workspaceFolder}\",\n            \"externalConsole\": false,\n            \"MIMode\": \"gdb\",\n            \"setupCommands\": [\n                {\n                    \"description\": \"Enable pretty-printing for gdb\",\n                    \"text\": \"-enable-pretty-printing\",\n                    \"ignoreFailures\": true\n                }\n            ],\n            \"preLaunchTask\": \"AMCA HardDebug\"\n        }\n    ]\n}"
          },
          "settings.json": {
            "type": "text_file",
            "content": "{\n    \"mesonbuild.configureOnOpen\": false\n}"
          },
          "tasks.json": {
            "type": "text_file",
            "content": "{\n    \"version\": \"2.0.0\",\n    \"tasks\": [\n        {\n            \"label\": \"AMCA SoftDebug\",\n            \"type\": \"shell\",\n            \"command\": \"python MesonBuildStuff/amca.py -d -ne\",\n            \"problemMatcher\": []\n        },\n        {\n            \"label\": \"AMCA HardDebug\",\n            \"type\": \"shell\",\n            \"command\": \"python MesonBuildStuff/amca.py -s -d -ne\",\n            \"problemMatcher\": []\n        },\n        {\n            \"label\": \"AMCA Clear Build\",\n            \"type\": \"shell\",\n            \"command\": \"python MesonBuildStuff/amca.py -clear\",\n            \"problemMatcher\": []\n        },\n        {\n            \"label\": \"AMCA SoftCompile release\",\n            \"type\": \"shell\",\n            \"command\": \"python MesonBuildStuff/amca.py -r -ne\",\n            \"problemMatcher\": []\n        },\n        {\n            \"label\": \"AMCA HardCompile release\",\n            \"type\": \"shell\",\n            \"command\": \"python MesonBuildStuff/amca.py -s -r -ne\",\n            \"problemMatcher\": []\n        },\n    ]\n}"
          }
        }
      },
      "meson.build": {
        "type": "text_file",
        "content": "project('compiler2', ['cpp', 'c'],\n  version : '0.1',\n  default_options : ['warning_level=3', 'cpp_std=c++23', 'buildtype=debug', 'optimization=2', 'debug=true'])\n# To build in release mode, run: meson setup build --buildtype=release\n\n# DO NOT change variable names; AMCA relies on these.\nmain_file = 'src/main.cpp'\noutput_name = 'a'\noutput_dir = '../../compiled'  # Relative to meson.build location\nbuild_dir_where = 'MesonBuildStuff/build'  # Relative to meson.build location\n\n# Compiler arguments\ncpp_compiler_args = [   \n  '-Og',\n  '-g',\n  '-Wall', \n  '-Wextra',\n  '-pedantic',\n  '-O2',\n  '-lstdc++exp',\n  '-lopengl32', \n  '-lm',\n  '-static-libgcc', \n  '-static-libstdc++',\n]\nc_compiler_args = [\n  '-static-libgcc', \n  '-static-libstdc++',\n  ]\n\n# Normalize paths\nmain_file = main_file.replace('/', '\\\\')\noutput_dir = output_dir.replace('/', '\\\\')\nif not output_dir.startswith('\\\\')\n  output_dir = '\\\\' + output_dir\nendif\nif not output_dir.endswith('\\\\') and output_dir != ''\n  output_dir = ''.join([output_dir, '\\\\'])\nendif\noutput_dir = meson.project_build_root() + output_dir\n\n# Import subprojects/options\ncmake = import('cmake')\nfs = import('fs')\nopt_var_mimalloc = cmake.subproject_options()\nopt_var_mimalloc.add_cmake_defines({'MI_SECURE': false})\nopt_var_mimalloc.add_cmake_defines({'MI_BUILD_TESTS': false})\nopt_var_mimalloc.add_cmake_defines({'MI_BUILD_SHARED': false})\n\n# Dependencies (if any)\ndependencies = []\ndependencies_str = []\nforeach item : dependencies_str\n  dependencies += dependency(item)\nendforeach\n\n# Use a custom Python globber to list all source files.\nsource_files = run_command('python', 'MesonBuildStuff/globber.py', './', '*.cpp', '*.cxx', '*.cc', '*.c', check : true).stdout().strip().split('\\n')\n\n# Exclude the main file (to avoid duplicate inclusion)\nsource_files_no_main_file = []\nforeach item : source_files\n  if item != main_file\n    source_files_no_main_file += item\n  endif\nendforeach\n\n# Include directories\nif fs.is_dir('./include/')\n  headers = include_directories('./include/') \nelif fs.is_dir('./src/include/')\n  headers = include_directories('./src/include/') \nelse\n  headers = []\nendif\n\nexecutable(output_name,\n  [main_file, source_files_no_main_file],\n  dependencies : dependencies,\n  include_directories : headers,\n  cpp_args : cpp_compiler_args,\n  c_args : c_compiler_args,\n  link_args : ['-static', '-static-libgcc', '-static-libstdc++'],\n  install : true,\n  install_dir : output_dir)\n\n# Print build context\nmessage('\\033[2K\\r\\nsource files: \\n   ', '   '.join(source_files), '\\noutputs to:\\n   ', output_dir + output_name, '\\n')\n"
      },
      "MesonBuildStuff": {
        "type": "directory",
        "content": {
          ".amca_deps_checked": {
            "type": "text_file",
            "content": "dependencies installed"
          },
          "amca.py": {
            "type": "text_file",
            "content": "import os, re, sys, subprocess\n\n################### Automatic Meson Compiler Application (AMCA) ###########################\n# This version includes automatic detection of new source files.\n# If new files are detected, a minimal reconfiguration (meson setup --reconfigure <builddir>)\n# is triggered so that the new files are added without a full rebuild.\n\nFollowArgs = {\n    \"-ms\": '5',  # max Searches, 5 by default\n}\n\nTriggerArgs = {\n    \"-s\": False,   # force running setup.py (full reconfiguration)\n    \"-r\": False,   # compile in release mode\n    \"-d\": False,   # compile in debug mode (should be default in meson.build)\n    \"-ne\": False,  # just compile, don't execute\n    \"-nc\": False,  # don't compile, just run\n    \"-nb\": False,  # disable separation between build/compile and execution\n    \"-c\": False,   # clear terminal before execution\n    \"-m\": False,   # move terminal to output path\n    \"-Ab\": [False, len(sys.argv)],  # additional args for meson build\n    \"-Ac\": [False, len(sys.argv)],  # additional args for meson compile\n    \"-Ae\": [False, len(sys.argv)],  # additional args for the executable\n    \"-clear\": False,  # removes build folder, executable and source cache\n    \"--help\": False,\n}\n\n# --- Source Cache Functions ---\ndef get_cache_path():\n    # Place .sources_cache in the same folder as this script (MesonBuildStuff/)\n    return os.path.join(os.path.dirname(__file__), \".sources_cache\")\n\ndef get_current_sources():\n    try:\n        output = subprocess.check_output(\n            [sys.executable, 'MesonBuildStuff/globber.py', './', '*.cpp', '*.cxx', '*.cc', '*.c'],\n            universal_newlines=True\n        )\n        return set(filter(None, output.strip().split('\\n')))\n    except subprocess.CalledProcessError as e:\n        print(\"Error running globber.py:\", e)\n        return set()\n\ndef read_cached_sources():\n    cache_file = get_cache_path()\n    if os.path.exists(cache_file):\n        with open(cache_file, 'r', encoding='utf-8') as f:\n            return set(filter(None, f.read().strip().split('\\n')))\n    return set()\n\ndef write_cached_sources(sources):\n    cache_file = get_cache_path()\n    with open(cache_file, 'w', encoding='utf-8') as f:\n        f.write('\\n'.join(sorted(sources)))\n\ndef check_for_new_sources():\n    current_sources = get_current_sources()\n    cached_sources = read_cached_sources()\n    if current_sources != cached_sources:\n        write_cached_sources(current_sources)\n        return True\n    return False\n\n# --- End Source Cache Functions ---\n\ndef main():\n    target_file = \"meson.build\"\n    basedir = os.path.realpath(os.path.join(__file__, \"..\\\\..\"))\n    meson_file_path = os.path.join(basedir, target_file)\n\n    setupPy_path = os.path.join(basedir, \"MesonBuildStuff\", \"amcaSetup.py\")\n    buildpathdir = getNameMesonVarDecl(meson_file_path, \"build_dir_where\").split(\"'\")[1].replace('/', '\\\\').removeprefix('\\\\')  # relative to basedir\n    totBpath = os.path.realpath(os.path.join(basedir, buildpathdir))\n\n    output_dir = getNameMesonVarDecl(meson_file_path, \"output_dir\").split(\"'\")[1].replace('/', '\\\\').removeprefix('\\\\')\n    output_name = getNameMesonVarDecl(meson_file_path, \"output_name\").split(\"'\")[1].replace('/', '\\\\').removeprefix('\\\\')\n    output_TOTAL_dir = os.path.realpath(os.path.join(basedir, buildpathdir, output_dir))\n    output_TOTAL = os.path.join(output_TOTAL_dir, output_name)\n    output_TOTAL_win = output_TOTAL + '.exe'\n\n    if TriggerArgs['-clear']:\n        # Remove build artifacts...\n        success = (\n            tryrem(output_TOTAL)\n            & tryrem(output_TOTAL_win)\n            & tryremD(output_TOTAL_dir)\n            & tryremF(totBpath)\n        )\n        # Also remove the source cache file stored in MesonBuildStuff\n        cache_file = get_cache_path()\n        if os.path.exists(cache_file):\n            success = tryrem(cache_file) and success\n        if success:\n            print(\"All items successfully removed\")\n        else:\n            print(\"Not all items were successfully removed\")\n        os._exit(int(not success))  # 0 indicates success\n\n    os.chdir(basedir)\n    didntbuild = True\n    if TriggerArgs[\"-s\"] or not os.path.exists(totBpath):\n        mode = '--buildtype=release --debug=false' if TriggerArgs[\"-r\"] else \"\"\n        mode = '--buildtype=debug' if TriggerArgs[\"-d\"] else mode\n        args = ' '.join(GetArgs(\"-Ab\"))\n        didntbuild = os.system(' '.join([f'\"{sys.executable}\"', setupPy_path, mode, args]))\n        if didntbuild:\n            os._exit(1)\n    \n    # Automatically check for new source files and perform minimal reconfiguration\n    if not TriggerArgs[\"-s\"]:\n        if check_for_new_sources():\n            print(\"New source files detected. Running minimal reconfiguration...\")\n            reconfig_ret = os.system(f'meson setup --reconfigure {buildpathdir}')\n            if reconfig_ret:\n                print(\"Reconfiguration failed!\")\n                sys.exit(reconfig_ret)\n\n    if not TriggerArgs[\"-nc\"]:  # compilation\n        args = ' '.join(GetArgs(\"-Ac\"))\n        didntcompile = os.system(' '.join(['ninja -C', buildpathdir, args]))\n        if not didntcompile:\n            didntcompile = os.system(f\"meson install -C {buildpathdir}\")\n        if didntcompile:\n            os._exit(2)\n\n    if not TriggerArgs[\"-ne\"] or TriggerArgs[\"-m\"]:  # execution\n        if (not TriggerArgs[\"-nc\"] or not didntbuild) and not TriggerArgs[\"-c\"]:\n            os.system('echo[')\n            os.system('echo ---------------------------------------------------------------------------------------------')\n            os.system('echo[')\n        if TriggerArgs['-c']:\n            os.system('cls')\n        outcommand = output_TOTAL + ' ' + ' '.join(GetArgs(\"-Ae\"))\n        if TriggerArgs[\"-m\"]:  # switch terminal path\n            if not TriggerArgs[\"-ne\"]:\n                os.system(f'(echo cd {output_TOTAL_dir} && echo {outcommand}) | clip')\n                print(\"Everything has been copied to your clipboard. Just press Ctrl+V to print and execute.\")\n            else:\n                os.system(f'echo cd {output_TOTAL_dir} | clip')\n                print(\"Everything has been copied to your clipboard. Just press Ctrl+V to change the directory.\")\n            print(\"\\nIt's sadly not possible to change the terminal directory with Python, so this is the solution.\")\n            os._exit(0)\n        else:\n            os._exit(os.system(outcommand))\n\ndef getNameMesonVarDecl(filepath, variablename):\n    regex = re.compile(rf'^{variablename}\\s*=')\n    out = 'NOT_FOUND'\n    try:\n        with open(filepath, 'r', encoding='utf-8') as file:\n            for line in file:\n                if regex.match(line):\n                    out = line\n                    break\n            else:\n                print(f\"No {variablename} found in {filepath}.\")\n    except FileNotFoundError:\n        print(f\"{filepath} not found.\")\n    except Exception as e:\n        print(f\"An error occurred looking for {variablename}: {e}\")\n    return out\n\ndef GetArgOption(arg_dict):\n    toggle = True\n    for x in range(len(sys.argv) - 1):  # -1 to avoid out-of-bounds error on last argument\n        if sys.argv[x] in ['-Ab', '-Ac', '-Ae']:\n            toggle = False\n        elif sys.argv[x] in arg_dict and toggle:\n            arg_dict[sys.argv[x]] = sys.argv[x + 1]\n    return arg_dict\n\ndef GetArgPresent(arg_dict):\n    toggle = True\n    for x in range(len(sys.argv)):\n        if sys.argv[x] in ['-Ab', '-Ac', '-Ae']:\n            arg_dict[sys.argv[x]] = [True, x]\n            toggle = False\n        elif sys.argv[x] in arg_dict and toggle:\n            arg_dict[sys.argv[x]] = True\n    return arg_dict\n\ndef GetArgs(Option):\n    out = []\n    optargs = [\"-Ab\", \"-Ac\", \"-Ae\"]\n    optargs.remove(Option)\n    toggle = False\n    for x in sys.argv:\n        if x in optargs:\n            toggle = False\n        elif x == Option:\n            toggle = True\n        elif toggle:\n            out.append(x)\n    return out\n\ndef delete_directory(filepath):\n    if not os.path.exists(filepath):\n        print(f\"Error: The directory '{filepath}' does not exist.\")\n        return False\n    for root, dirs, files in os.walk(filepath, topdown=False):\n        for name in files:\n            file_path = os.path.join(root, name)\n            try:\n                os.remove(file_path)\n            except Exception as e:\n                print(f\"Error deleting file {file_path}: {e}\")\n                return False\n        for name in dirs:\n            dir_path = os.path.join(root, name)\n            try:\n                os.rmdir(dir_path)\n            except Exception as e:\n                print(f\"Error deleting directory {dir_path}: {e}\")\n                return False\n    try:\n        os.rmdir(filepath)\n    except Exception as e:\n        print(f\"Error deleting directory {filepath}: {e}\")\n        return False\n    return True\n\ndef tryrem(filepath):\n    if os.path.exists(filepath):\n        try:\n            os.remove(filepath)\n            if os.path.exists(filepath):\n                return False\n        except:\n            return False\n    return True\n\ndef tryremF(filepath):\n    if os.path.exists(filepath):\n        try:\n            return delete_directory(filepath)\n        except:\n            return False\n    return True\n\ndef tryremD(filepath):\n    if os.path.exists(filepath):\n        try:\n            os.removedirs(filepath)\n            if os.path.exists(filepath):\n                return False\n        except:\n            return False\n    return True\n\ndef ensure_installed(packages):\n    \"\"\"\n    Checks if the given packages are installed.\n    This version uses a marker file located in the MesonBuildStuff folder to perform the check only once.\n    \"\"\"\n    marker = os.path.join(os.path.dirname(__file__), \".amca_deps_checked\")\n    if os.path.exists(marker):\n        return\n    for package in packages:\n        try:\n            __import__(package)\n        except ImportError:\n            print(f\"Installing {package}...\")\n            subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    # Create the marker file so subsequent runs skip dependency checking\n    try:\n        with open(marker, \"w\") as f:\n            f.write(\"dependencies installed\")\n    except Exception as e:\n        print(f\"Failed to create marker file: {e}\")\n\ndef PrintHelp():\n    print(\"Automatic Meson Compiler Application\")\n    print(\"Designed to work with blues & Delici0us setup\")\n    print(\"Arguments:\")\n    print(\"    -ms amount     Max search depth for meson.build. 5 by default, will be replaced by amount\")\n    print(\"    --help         Display help message\")\n    print(\"    -s             Run setup.py (full reconfiguration)\")\n    print(\"    -r             Compile in release mode\")\n    print(\"    -d             Compile in debug mode\")\n    print(\"    -ne            Just compile, don't execute\")\n    print(\"    -nc            Don't compile, just run\")\n    print(\"                   If both -ne and -nc are present, nothing will compile or run\")\n    print(\"    -nb            Disable separation between building/compilation and execution\")\n    print(\"    -c             Clear terminal before execution\")\n    print(\"    -m             Move terminal to output path\")\n    print(\"    -Ab            Toggle all following args for the meson build\")\n    print(\"    -Ac            Toggle all following args for the meson compile\")\n    print(\"    -Ae            Toggle all following args for the executable\")\n    print(\"                   -Ab, -Ac and -Ae will interrupt each other\")\n    print(\"    -clear         Remove build folder, executable and source cache (in MesonBuildStuff)\")\n    print(f\"    Amca.py found at {__file__}\")\n    print(\"                   If this is not the correct amca, try reducing your search radius with -ms\")\n\nif __name__ == \"__main__\":\n    ensure_installed([\"pip\", \"meson\", \"ninja\"])\n    GetArgPresent(TriggerArgs)\n    if TriggerArgs[\"--help\"]:\n        PrintHelp()\n        exit()\n    GetArgOption(FollowArgs)\n    try:\n        MAXSEARCHLVL = int(FollowArgs['-ms'])\n        assert MAXSEARCHLVL >= 0\n    except:\n        print(\"Please input a valid integer as maxSearches\")\n        exit()\n    main()\n"
          },
          "amcaSetup.py": {
            "type": "text_file",
            "content": "import os, sys, re, json\n\n\n################ Bloat ######################\ndef getNameMesonVarDecl(filepath, variablename):\n    regex = re.compile(rf'^{variablename}\\s*=')\n    out = 'NOT_FOUND'\n\n    try:\n        with open(filepath, 'r', encoding='utf-8') as file:\n            for line in file:\n                if regex.match(line):\n                    out = line\n                    break\n            else:\n                print(f\"No {variablename} found in {filepath}.\")\n    except FileNotFoundError:\n        print(f\"{filepath} not found.\")\n    except Exception as e:\n        print(f\"An error occurred Looking for {variablename}: {e}\")\n    return out\n\ndef update_launch_json(output_full):\n    vscode_folder = os.path.join(os.getcwd(), \".vscode\")\n    launch_json_path = os.path.join(vscode_folder, \"launch.json\")\n\n    if not os.path.exists(launch_json_path):\n        print(\"launch.json not found. Skipping modification.\")\n        return\n\n    try:\n        with open(launch_json_path, \"r\", encoding=\"utf-8\") as file:\n            data = json.load(file)\n\n        for config in data.get(\"configurations\", []):\n            config[\"program\"] = \"${workspaceFolder}/\" + output_full.replace(\"\\\\\", \"/\")\n\n        with open(launch_json_path, \"w\", encoding=\"utf-8\") as file:\n            json.dump(data, file, indent=4)\n        print(\"Updated launch.json successfully.\")\n    except Exception as e:\n        print(f\"Failed to update launch.json: {e}\")\n\ntarget_file = \"meson.build\"\nbasedir = os.path.realpath(os.path.join(__file__, \"..\\\\..\"))\nmeson_file_path = os.path.join(basedir, target_file)\n\noutput_dir = getNameMesonVarDecl(meson_file_path, \"output_dir\").split(\"'\")[1].replace('/', '\\\\').removeprefix('\\\\')\noutput_name = getNameMesonVarDecl(meson_file_path, \"output_name\").split(\"'\")[1].replace('/', '\\\\').removeprefix('\\\\')\nbuild_dir_name = getNameMesonVarDecl(meson_file_path, \"build_dir_where\").split(\"'\")[1].replace('/', '\\\\').removeprefix('\\\\')\noutput_full = os.path.join(build_dir_name, output_dir, output_name)\n################# end bloat ##################\n\nupdate_launch_json(output_full)\n\nargs = ' '.join([sys.argv[x] for x in range(1, len(sys.argv))])\n\nos.chdir(os.path.realpath(os.path.join(__file__, '../..')))\nprint(''.join([\"meson setup \", build_dir_name,  \" --wipe \", args]))\nsys.exit(os.system(''.join([\"meson setup \", build_dir_name,  \" --wipe \", args])))"
          },
          "globber.py": {
            "type": "text_file",
            "content": "import os\nimport sys\nfrom pathlib import Path\n\ndef parse_directory(directory: str, filetype: str) -> list:\n  filelist: list = list()\n  \n  for file in Path(directory).rglob(filetype):\n    file_directory: str = file.__str__()\n    if \"subprojects\" in file_directory:\n      continue\n    if \"build\" in file_directory:\n      continue\n    filelist.append(file)\n  \n  return filelist\n\ndef glob(args: list) -> None:\n  directory: str = sys.argv[1]\n  filetypes: list = [i for i in sys.argv[2:] if i != \"\"]\n  files: list = list()\n\n  for filetype in filetypes:\n    files.extend(parse_directory(directory, filetype))\n\n  for file in files:\n    print(file)\n\ndef main():\n  args: int = len(sys.argv)\n  if args < 3:\n    print(\"not enough arguments supplied!\")\n    print(f\"usage: python {os.path.basename(__file__)} path_to_glob file_types\")\n    return 1;\n  \n  glob(args)\n  \n  return 0\n\nif __name__ == \"__main__\":\n  main()"
          }
        }
      },
      "src": {
        "type": "directory",
        "content": {
          "include": {
            "type": "directory",
            "content": {
              "glad.c": {
                "type": "text_file",
                "content": "/*\n\n    OpenGL loader generated by glad 0.1.36 on Thu Feb 13 16:25:20 2025.\n\n    Language/Generator: C/C++\n    Specification: gl\n    APIs: gl=4.6\n    Profile: core\n    Extensions:\n        all\n    Loader: True\n    Local files: False\n    Omit khrplatform: False\n    Reproducible: False\n\n    Commandline:\n        --profile=\"core\" --api=\"gl=4.6\" --generator=\"c\" --spec=\"gl\"\n   --extensions=\"all\" Online:\n        https://glad.dav1d.de/#profile=core&language=c&specification=gl&loader=on&api=gl%3D4.6&extensions=all\n*/\n#pragma GCC diagnostic ignored \"-Wpedantic\"\n\n#include <glad/glad.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nstatic void *get_proc(const char *namez);\n\n#if defined(_WIN32) || defined(__CYGWIN__)\n#ifndef _WINDOWS_\n#undef APIENTRY\n#endif\n#include <windows.h>\nstatic HMODULE libGL;\n\ntypedef void *(APIENTRYP PFNWGLGETPROCADDRESSPROC_PRIVATE)(const char *);\nstatic PFNWGLGETPROCADDRESSPROC_PRIVATE gladGetProcAddressPtr;\n\n#ifdef _MSC_VER\n#ifdef __has_include\n#if __has_include(<winapifamily.h>)\n#define HAVE_WINAPIFAMILY 1\n#endif\n#elif _MSC_VER >= 1700 && !_USING_V110_SDK71_\n#define HAVE_WINAPIFAMILY 1\n#endif\n#endif\n\n#ifdef HAVE_WINAPIFAMILY\n#include <winapifamily.h>\n#if !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) &&                      \\\n    WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)\n#define IS_UWP 1\n#endif\n#endif\n\nstatic int open_gl(void) {\n#ifndef IS_UWP\n  libGL = LoadLibraryW(L\"opengl32.dll\");\n  if (libGL != NULL) {\n    void (*tmp)(void);\n    tmp = (void (*)(void))GetProcAddress(libGL, \"wglGetProcAddress\");\n    gladGetProcAddressPtr = (PFNWGLGETPROCADDRESSPROC_PRIVATE)tmp;\n    return gladGetProcAddressPtr != NULL;\n  }\n#endif\n\n  return 0;\n}\n\nstatic void close_gl(void) {\n  if (libGL != NULL) {\n    FreeLibrary((HMODULE)libGL);\n    libGL = NULL;\n  }\n}\n#else\n#include <dlfcn.h>\nstatic void *libGL;\n\n#if !defined(__APPLE__) && !defined(__HAIKU__)\ntypedef void *(APIENTRYP PFNGLXGETPROCADDRESSPROC_PRIVATE)(const char *);\nstatic PFNGLXGETPROCADDRESSPROC_PRIVATE gladGetProcAddressPtr;\n#endif\n\nstatic int open_gl(void) {\n#ifdef __APPLE__\n  static const char *NAMES[] = {\n      \"../Frameworks/OpenGL.framework/OpenGL\",\n      \"/Library/Frameworks/OpenGL.framework/OpenGL\",\n      \"/System/Library/Frameworks/OpenGL.framework/OpenGL\",\n      \"/System/Library/Frameworks/OpenGL.framework/Versions/Current/OpenGL\"};\n#else\n  static const char *NAMES[] = {\"libGL.so.1\", \"libGL.so\"};\n#endif\n\n  unsigned int index = 0;\n  for (index = 0; index < (sizeof(NAMES) / sizeof(NAMES[0])); index++) {\n    libGL = dlopen(NAMES[index], RTLD_NOW | RTLD_GLOBAL);\n\n    if (libGL != NULL) {\n#if defined(__APPLE__) || defined(__HAIKU__)\n      return 1;\n#else\n      gladGetProcAddressPtr = (PFNGLXGETPROCADDRESSPROC_PRIVATE)dlsym(\n          libGL, \"glXGetProcAddressARB\");\n      return gladGetProcAddressPtr != NULL;\n#endif\n    }\n  }\n\n  return 0;\n}\n\nstatic void close_gl(void) {\n  if (libGL != NULL) {\n    dlclose(libGL);\n    libGL = NULL;\n  }\n}\n#endif\n\nstatic void *get_proc(const char *namez) {\n  void *result = NULL;\n  if (libGL == NULL)\n    return NULL;\n\n#if !defined(__APPLE__) && !defined(__HAIKU__)\n  if (gladGetProcAddressPtr != NULL) {\n    result = gladGetProcAddressPtr(namez);\n  }\n#endif\n  if (result == NULL) {\n#if defined(_WIN32) || defined(__CYGWIN__)\n    result = (void *)GetProcAddress((HMODULE)libGL, namez);\n#else\n    result = dlsym(libGL, namez);\n#endif\n  }\n\n  return result;\n}\n\nint gladLoadGL(void) {\n  int status = 0;\n\n  if (open_gl()) {\n    status = gladLoadGLLoader(&get_proc);\n    close_gl();\n  }\n\n  return status;\n}\n\nstruct gladGLversionStruct GLVersion = {0, 0};\n\n#if defined(GL_ES_VERSION_3_0) || defined(GL_VERSION_3_0)\n#define _GLAD_IS_SOME_NEW_VERSION 1\n#endif\n\nstatic int max_loaded_major;\nstatic int max_loaded_minor;\n\nstatic const char *exts = NULL;\nstatic int num_exts_i = 0;\nstatic char **exts_i = NULL;\n\nstatic int get_exts(void) {\n#ifdef _GLAD_IS_SOME_NEW_VERSION\n  if (max_loaded_major < 3) {\n#endif\n    exts = (const char *)glGetString(GL_EXTENSIONS);\n#ifdef _GLAD_IS_SOME_NEW_VERSION\n  } else {\n    unsigned int index;\n\n    num_exts_i = 0;\n    glGetIntegerv(GL_NUM_EXTENSIONS, &num_exts_i);\n    if (num_exts_i > 0) {\n      exts_i = (char **)malloc((size_t)num_exts_i * (sizeof *exts_i));\n    }\n\n    if (exts_i == NULL) {\n      return 0;\n    }\n\n    for (index = 0; index < (unsigned)num_exts_i; index++) {\n      const char *gl_str_tmp = (const char *)glGetStringi(GL_EXTENSIONS, index);\n      size_t len = strlen(gl_str_tmp);\n\n      char *local_str = (char *)malloc((len + 1) * sizeof(char));\n      if (local_str != NULL) {\n        memcpy(local_str, gl_str_tmp, (len + 1) * sizeof(char));\n      }\n      exts_i[index] = local_str;\n    }\n  }\n#endif\n  return 1;\n}\n\nstatic void free_exts(void) {\n  if (exts_i != NULL) {\n    int index;\n    for (index = 0; index < num_exts_i; index++) {\n      free((char *)exts_i[index]);\n    }\n    free((void *)exts_i);\n    exts_i = NULL;\n  }\n}\n\nstatic int has_ext(const char *ext) {\n#ifdef _GLAD_IS_SOME_NEW_VERSION\n  if (max_loaded_major < 3) {\n#endif\n    const char *extensions;\n    const char *loc;\n    const char *terminator;\n    extensions = exts;\n    if (extensions == NULL || ext == NULL) {\n      return 0;\n    }\n\n    while (1) {\n      loc = strstr(extensions, ext);\n      if (loc == NULL) {\n        return 0;\n      }\n\n      terminator = loc + strlen(ext);\n      if ((loc == extensions || *(loc - 1) == ' ') &&\n          (*terminator == ' ' || *terminator == '\\0')) {\n        return 1;\n      }\n      extensions = terminator;\n    }\n#ifdef _GLAD_IS_SOME_NEW_VERSION\n  } else {\n    int index;\n    if (exts_i == NULL)\n      return 0;\n    for (index = 0; index < num_exts_i; index++) {\n      const char *e = exts_i[index];\n\n      if (exts_i[index] != NULL && strcmp(e, ext) == 0) {\n        return 1;\n      }\n    }\n  }\n#endif\n\n  return 0;\n}\nint GLAD_GL_VERSION_1_0 = 0;\nint GLAD_GL_VERSION_1_1 = 0;\nint GLAD_GL_VERSION_1_2 = 0;\nint GLAD_GL_VERSION_1_3 = 0;\nint GLAD_GL_VERSION_1_4 = 0;\nint GLAD_GL_VERSION_1_5 = 0;\nint GLAD_GL_VERSION_2_0 = 0;\nint GLAD_GL_VERSION_2_1 = 0;\nint GLAD_GL_VERSION_3_0 = 0;\nint GLAD_GL_VERSION_3_1 = 0;\nint GLAD_GL_VERSION_3_2 = 0;\nint GLAD_GL_VERSION_3_3 = 0;\nint GLAD_GL_VERSION_4_0 = 0;\nint GLAD_GL_VERSION_4_1 = 0;\nint GLAD_GL_VERSION_4_2 = 0;\nint GLAD_GL_VERSION_4_3 = 0;\nint GLAD_GL_VERSION_4_4 = 0;\nint GLAD_GL_VERSION_4_5 = 0;\nint GLAD_GL_VERSION_4_6 = 0;\nPFNGLACTIVESHADERPROGRAMPROC glad_glActiveShaderProgram = NULL;\nPFNGLACTIVETEXTUREPROC glad_glActiveTexture = NULL;\nPFNGLATTACHSHADERPROC glad_glAttachShader = NULL;\nPFNGLBEGINCONDITIONALRENDERPROC glad_glBeginConditionalRender = NULL;\nPFNGLBEGINQUERYPROC glad_glBeginQuery = NULL;\nPFNGLBEGINQUERYINDEXEDPROC glad_glBeginQueryIndexed = NULL;\nPFNGLBEGINTRANSFORMFEEDBACKPROC glad_glBeginTransformFeedback = NULL;\nPFNGLBINDATTRIBLOCATIONPROC glad_glBindAttribLocation = NULL;\nPFNGLBINDBUFFERPROC glad_glBindBuffer = NULL;\nPFNGLBINDBUFFERBASEPROC glad_glBindBufferBase = NULL;\nPFNGLBINDBUFFERRANGEPROC glad_glBindBufferRange = NULL;\nPFNGLBINDBUFFERSBASEPROC glad_glBindBuffersBase = NULL;\nPFNGLBINDBUFFERSRANGEPROC glad_glBindBuffersRange = NULL;\nPFNGLBINDFRAGDATALOCATIONPROC glad_glBindFragDataLocation = NULL;\nPFNGLBINDFRAGDATALOCATIONINDEXEDPROC glad_glBindFragDataLocationIndexed = NULL;\nPFNGLBINDFRAMEBUFFERPROC glad_glBindFramebuffer = NULL;\nPFNGLBINDIMAGETEXTUREPROC glad_glBindImageTexture = NULL;\nPFNGLBINDIMAGETEXTURESPROC glad_glBindImageTextures = NULL;\nPFNGLBINDPROGRAMPIPELINEPROC glad_glBindProgramPipeline = NULL;\nPFNGLBINDRENDERBUFFERPROC glad_glBindRenderbuffer = NULL;\nPFNGLBINDSAMPLERPROC glad_glBindSampler = NULL;\nPFNGLBINDSAMPLERSPROC glad_glBindSamplers = NULL;\nPFNGLBINDTEXTUREPROC glad_glBindTexture = NULL;\nPFNGLBINDTEXTUREUNITPROC glad_glBindTextureUnit = NULL;\nPFNGLBINDTEXTURESPROC glad_glBindTextures = NULL;\nPFNGLBINDTRANSFORMFEEDBACKPROC glad_glBindTransformFeedback = NULL;\nPFNGLBINDVERTEXARRAYPROC glad_glBindVertexArray = NULL;\nPFNGLBINDVERTEXBUFFERPROC glad_glBindVertexBuffer = NULL;\nPFNGLBINDVERTEXBUFFERSPROC glad_glBindVertexBuffers = NULL;\nPFNGLBLENDCOLORPROC glad_glBlendColor = NULL;\nPFNGLBLENDEQUATIONPROC glad_glBlendEquation = NULL;\nPFNGLBLENDEQUATIONSEPARATEPROC glad_glBlendEquationSeparate = NULL;\nPFNGLBLENDEQUATIONSEPARATEIPROC glad_glBlendEquationSeparatei = NULL;\nPFNGLBLENDEQUATIONIPROC glad_glBlendEquationi = NULL;\nPFNGLBLENDFUNCPROC glad_glBlendFunc = NULL;\nPFNGLBLENDFUNCSEPARATEPROC glad_glBlendFuncSeparate = NULL;\nPFNGLBLENDFUNCSEPARATEIPROC glad_glBlendFuncSeparatei = NULL;\nPFNGLBLENDFUNCIPROC glad_glBlendFunci = NULL;\nPFNGLBLITFRAMEBUFFERPROC glad_glBlitFramebuffer = NULL;\nPFNGLBLITNAMEDFRAMEBUFFERPROC glad_glBlitNamedFramebuffer = NULL;\nPFNGLBUFFERDATAPROC glad_glBufferData = NULL;\nPFNGLBUFFERSTORAGEPROC glad_glBufferStorage = NULL;\nPFNGLBUFFERSUBDATAPROC glad_glBufferSubData = NULL;\nPFNGLCHECKFRAMEBUFFERSTATUSPROC glad_glCheckFramebufferStatus = NULL;\nPFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC glad_glCheckNamedFramebufferStatus = NULL;\nPFNGLCLAMPCOLORPROC glad_glClampColor = NULL;\nPFNGLCLEARPROC glad_glClear = NULL;\nPFNGLCLEARBUFFERDATAPROC glad_glClearBufferData = NULL;\nPFNGLCLEARBUFFERSUBDATAPROC glad_glClearBufferSubData = NULL;\nPFNGLCLEARBUFFERFIPROC glad_glClearBufferfi = NULL;\nPFNGLCLEARBUFFERFVPROC glad_glClearBufferfv = NULL;\nPFNGLCLEARBUFFERIVPROC glad_glClearBufferiv = NULL;\nPFNGLCLEARBUFFERUIVPROC glad_glClearBufferuiv = NULL;\nPFNGLCLEARCOLORPROC glad_glClearColor = NULL;\nPFNGLCLEARDEPTHPROC glad_glClearDepth = NULL;\nPFNGLCLEARDEPTHFPROC glad_glClearDepthf = NULL;\nPFNGLCLEARNAMEDBUFFERDATAPROC glad_glClearNamedBufferData = NULL;\nPFNGLCLEARNAMEDBUFFERSUBDATAPROC glad_glClearNamedBufferSubData = NULL;\nPFNGLCLEARNAMEDFRAMEBUFFERFIPROC glad_glClearNamedFramebufferfi = NULL;\nPFNGLCLEARNAMEDFRAMEBUFFERFVPROC glad_glClearNamedFramebufferfv = NULL;\nPFNGLCLEARNAMEDFRAMEBUFFERIVPROC glad_glClearNamedFramebufferiv = NULL;\nPFNGLCLEARNAMEDFRAMEBUFFERUIVPROC glad_glClearNamedFramebufferuiv = NULL;\nPFNGLCLEARSTENCILPROC glad_glClearStencil = NULL;\nPFNGLCLEARTEXIMAGEPROC glad_glClearTexImage = NULL;\nPFNGLCLEARTEXSUBIMAGEPROC glad_glClearTexSubImage = NULL;\nPFNGLCLIENTWAITSYNCPROC glad_glClientWaitSync = NULL;\nPFNGLCLIPCONTROLPROC glad_glClipControl = NULL;\nPFNGLCOLORMASKPROC glad_glColorMask = NULL;\nPFNGLCOLORMASKIPROC glad_glColorMaski = NULL;\nPFNGLCOLORP3UIPROC glad_glColorP3ui = NULL;\nPFNGLCOLORP3UIVPROC glad_glColorP3uiv = NULL;\nPFNGLCOLORP4UIPROC glad_glColorP4ui = NULL;\nPFNGLCOLORP4UIVPROC glad_glColorP4uiv = NULL;\nPFNGLCOMPILESHADERPROC glad_glCompileShader = NULL;\nPFNGLCOMPRESSEDTEXIMAGE1DPROC glad_glCompressedTexImage1D = NULL;\nPFNGLCOMPRESSEDTEXIMAGE2DPROC glad_glCompressedTexImage2D = NULL;\nPFNGLCOMPRESSEDTEXIMAGE3DPROC glad_glCompressedTexImage3D = NULL;\nPFNGLCOMPRESSEDTEXSUBIMAGE1DPROC glad_glCompressedTexSubImage1D = NULL;\nPFNGLCOMPRESSEDTEXSUBIMAGE2DPROC glad_glCompressedTexSubImage2D = NULL;\nPFNGLCOMPRESSEDTEXSUBIMAGE3DPROC glad_glCompressedTexSubImage3D = NULL;\nPFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC glad_glCompressedTextureSubImage1D = NULL;\nPFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC glad_glCompressedTextureSubImage2D = NULL;\nPFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC glad_glCompressedTextureSubImage3D = NULL;\nPFNGLCOPYBUFFERSUBDATAPROC glad_glCopyBufferSubData = NULL;\nPFNGLCOPYIMAGESUBDATAPROC glad_glCopyImageSubData = NULL;\nPFNGLCOPYNAMEDBUFFERSUBDATAPROC glad_glCopyNamedBufferSubData = NULL;\nPFNGLCOPYTEXIMAGE1DPROC glad_glCopyTexImage1D = NULL;\nPFNGLCOPYTEXIMAGE2DPROC glad_glCopyTexImage2D = NULL;\nPFNGLCOPYTEXSUBIMAGE1DPROC glad_glCopyTexSubImage1D = NULL;\nPFNGLCOPYTEXSUBIMAGE2DPROC glad_glCopyTexSubImage2D = NULL;\nPFNGLCOPYTEXSUBIMAGE3DPROC glad_glCopyTexSubImage3D = NULL;\nPFNGLCOPYTEXTURESUBIMAGE1DPROC glad_glCopyTextureSubImage1D = NULL;\nPFNGLCOPYTEXTURESUBIMAGE2DPROC glad_glCopyTextureSubImage2D = NULL;\nPFNGLCOPYTEXTURESUBIMAGE3DPROC glad_glCopyTextureSubImage3D = NULL;\nPFNGLCREATEBUFFERSPROC glad_glCreateBuffers = NULL;\nPFNGLCREATEFRAMEBUFFERSPROC glad_glCreateFramebuffers = NULL;\nPFNGLCREATEPROGRAMPROC glad_glCreateProgram = NULL;\nPFNGLCREATEPROGRAMPIPELINESPROC glad_glCreateProgramPipelines = NULL;\nPFNGLCREATEQUERIESPROC glad_glCreateQueries = NULL;\nPFNGLCREATERENDERBUFFERSPROC glad_glCreateRenderbuffers = NULL;\nPFNGLCREATESAMPLERSPROC glad_glCreateSamplers = NULL;\nPFNGLCREATESHADERPROC glad_glCreateShader = NULL;\nPFNGLCREATESHADERPROGRAMVPROC glad_glCreateShaderProgramv = NULL;\nPFNGLCREATETEXTURESPROC glad_glCreateTextures = NULL;\nPFNGLCREATETRANSFORMFEEDBACKSPROC glad_glCreateTransformFeedbacks = NULL;\nPFNGLCREATEVERTEXARRAYSPROC glad_glCreateVertexArrays = NULL;\nPFNGLCULLFACEPROC glad_glCullFace = NULL;\nPFNGLDEBUGMESSAGECALLBACKPROC glad_glDebugMessageCallback = NULL;\nPFNGLDEBUGMESSAGECONTROLPROC glad_glDebugMessageControl = NULL;\nPFNGLDEBUGMESSAGEINSERTPROC glad_glDebugMessageInsert = NULL;\nPFNGLDELETEBUFFERSPROC glad_glDeleteBuffers = NULL;\nPFNGLDELETEFRAMEBUFFERSPROC glad_glDeleteFramebuffers = NULL;\nPFNGLDELETEPROGRAMPROC glad_glDeleteProgram = NULL;\nPFNGLDELETEPROGRAMPIPELINESPROC glad_glDeleteProgramPipelines = NULL;\nPFNGLDELETEQUERIESPROC glad_glDeleteQueries = NULL;\nPFNGLDELETERENDERBUFFERSPROC glad_glDeleteRenderbuffers = NULL;\nPFNGLDELETESAMPLERSPROC glad_glDeleteSamplers = NULL;\nPFNGLDELETESHADERPROC glad_glDeleteShader = NULL;\nPFNGLDELETESYNCPROC glad_glDeleteSync = NULL;\nPFNGLDELETETEXTURESPROC glad_glDeleteTextures = NULL;\nPFNGLDELETETRANSFORMFEEDBACKSPROC glad_glDeleteTransformFeedbacks = NULL;\nPFNGLDELETEVERTEXARRAYSPROC glad_glDeleteVertexArrays = NULL;\nPFNGLDEPTHFUNCPROC glad_glDepthFunc = NULL;\nPFNGLDEPTHMASKPROC glad_glDepthMask = NULL;\nPFNGLDEPTHRANGEPROC glad_glDepthRange = NULL;\nPFNGLDEPTHRANGEARRAYVPROC glad_glDepthRangeArrayv = NULL;\nPFNGLDEPTHRANGEINDEXEDPROC glad_glDepthRangeIndexed = NULL;\nPFNGLDEPTHRANGEFPROC glad_glDepthRangef = NULL;\nPFNGLDETACHSHADERPROC glad_glDetachShader = NULL;\nPFNGLDISABLEPROC glad_glDisable = NULL;\nPFNGLDISABLEVERTEXARRAYATTRIBPROC glad_glDisableVertexArrayAttrib = NULL;\nPFNGLDISABLEVERTEXATTRIBARRAYPROC glad_glDisableVertexAttribArray = NULL;\nPFNGLDISABLEIPROC glad_glDisablei = NULL;\nPFNGLDISPATCHCOMPUTEPROC glad_glDispatchCompute = NULL;\nPFNGLDISPATCHCOMPUTEINDIRECTPROC glad_glDispatchComputeIndirect = NULL;\nPFNGLDRAWARRAYSPROC glad_glDrawArrays = NULL;\nPFNGLDRAWARRAYSINDIRECTPROC glad_glDrawArraysIndirect = NULL;\nPFNGLDRAWARRAYSINSTANCEDPROC glad_glDrawArraysInstanced = NULL;\nPFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC\nglad_glDrawArraysInstancedBaseInstance = NULL;\nPFNGLDRAWBUFFERPROC glad_glDrawBuffer = NULL;\nPFNGLDRAWBUFFERSPROC glad_glDrawBuffers = NULL;\nPFNGLDRAWELEMENTSPROC glad_glDrawElements = NULL;\nPFNGLDRAWELEMENTSBASEVERTEXPROC glad_glDrawElementsBaseVertex = NULL;\nPFNGLDRAWELEMENTSINDIRECTPROC glad_glDrawElementsIndirect = NULL;\nPFNGLDRAWELEMENTSINSTANCEDPROC glad_glDrawElementsInstanced = NULL;\nPFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC\nglad_glDrawElementsInstancedBaseInstance = NULL;\nPFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC\nglad_glDrawElementsInstancedBaseVertex = NULL;\nPFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC\nglad_glDrawElementsInstancedBaseVertexBaseInstance = NULL;\nPFNGLDRAWRANGEELEMENTSPROC glad_glDrawRangeElements = NULL;\nPFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glad_glDrawRangeElementsBaseVertex = NULL;\nPFNGLDRAWTRANSFORMFEEDBACKPROC glad_glDrawTransformFeedback = NULL;\nPFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC glad_glDrawTransformFeedbackInstanced =\n    NULL;\nPFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glad_glDrawTransformFeedbackStream = NULL;\nPFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC\nglad_glDrawTransformFeedbackStreamInstanced = NULL;\nPFNGLENABLEPROC glad_glEnable = NULL;\nPFNGLENABLEVERTEXARRAYATTRIBPROC glad_glEnableVertexArrayAttrib = NULL;\nPFNGLENABLEVERTEXATTRIBARRAYPROC glad_glEnableVertexAttribArray = NULL;\nPFNGLENABLEIPROC glad_glEnablei = NULL;\nPFNGLENDCONDITIONALRENDERPROC glad_glEndConditionalRender = NULL;\nPFNGLENDQUERYPROC glad_glEndQuery = NULL;\nPFNGLENDQUERYINDEXEDPROC glad_glEndQueryIndexed = NULL;\nPFNGLENDTRANSFORMFEEDBACKPROC glad_glEndTransformFeedback = NULL;\nPFNGLFENCESYNCPROC glad_glFenceSync = NULL;\nPFNGLFINISHPROC glad_glFinish = NULL;\nPFNGLFLUSHPROC glad_glFlush = NULL;\nPFNGLFLUSHMAPPEDBUFFERRANGEPROC glad_glFlushMappedBufferRange = NULL;\nPFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC glad_glFlushMappedNamedBufferRange = NULL;\nPFNGLFRAMEBUFFERPARAMETERIPROC glad_glFramebufferParameteri = NULL;\nPFNGLFRAMEBUFFERRENDERBUFFERPROC glad_glFramebufferRenderbuffer = NULL;\nPFNGLFRAMEBUFFERTEXTUREPROC glad_glFramebufferTexture = NULL;\nPFNGLFRAMEBUFFERTEXTURE1DPROC glad_glFramebufferTexture1D = NULL;\nPFNGLFRAMEBUFFERTEXTURE2DPROC glad_glFramebufferTexture2D = NULL;\nPFNGLFRAMEBUFFERTEXTURE3DPROC glad_glFramebufferTexture3D = NULL;\nPFNGLFRAMEBUFFERTEXTURELAYERPROC glad_glFramebufferTextureLayer = NULL;\nPFNGLFRONTFACEPROC glad_glFrontFace = NULL;\nPFNGLGENBUFFERSPROC glad_glGenBuffers = NULL;\nPFNGLGENFRAMEBUFFERSPROC glad_glGenFramebuffers = NULL;\nPFNGLGENPROGRAMPIPELINESPROC glad_glGenProgramPipelines = NULL;\nPFNGLGENQUERIESPROC glad_glGenQueries = NULL;\nPFNGLGENRENDERBUFFERSPROC glad_glGenRenderbuffers = NULL;\nPFNGLGENSAMPLERSPROC glad_glGenSamplers = NULL;\nPFNGLGENTEXTURESPROC glad_glGenTextures = NULL;\nPFNGLGENTRANSFORMFEEDBACKSPROC glad_glGenTransformFeedbacks = NULL;\nPFNGLGENVERTEXARRAYSPROC glad_glGenVertexArrays = NULL;\nPFNGLGENERATEMIPMAPPROC glad_glGenerateMipmap = NULL;\nPFNGLGENERATETEXTUREMIPMAPPROC glad_glGenerateTextureMipmap = NULL;\nPFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC glad_glGetActiveAtomicCounterBufferiv =\n    NULL;\nPFNGLGETACTIVEATTRIBPROC glad_glGetActiveAttrib = NULL;\nPFNGLGETACTIVESUBROUTINENAMEPROC glad_glGetActiveSubroutineName = NULL;\nPFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glad_glGetActiveSubroutineUniformName =\n    NULL;\nPFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glad_glGetActiveSubroutineUniformiv =\n    NULL;\nPFNGLGETACTIVEUNIFORMPROC glad_glGetActiveUniform = NULL;\nPFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glad_glGetActiveUniformBlockName = NULL;\nPFNGLGETACTIVEUNIFORMBLOCKIVPROC glad_glGetActiveUniformBlockiv = NULL;\nPFNGLGETACTIVEUNIFORMNAMEPROC glad_glGetActiveUniformName = NULL;\nPFNGLGETACTIVEUNIFORMSIVPROC glad_glGetActiveUniformsiv = NULL;\nPFNGLGETATTACHEDSHADERSPROC glad_glGetAttachedShaders = NULL;\nPFNGLGETATTRIBLOCATIONPROC glad_glGetAttribLocation = NULL;\nPFNGLGETBOOLEANI_VPROC glad_glGetBooleani_v = NULL;\nPFNGLGETBOOLEANVPROC glad_glGetBooleanv = NULL;\nPFNGLGETBUFFERPARAMETERI64VPROC glad_glGetBufferParameteri64v = NULL;\nPFNGLGETBUFFERPARAMETERIVPROC glad_glGetBufferParameteriv = NULL;\nPFNGLGETBUFFERPOINTERVPROC glad_glGetBufferPointerv = NULL;\nPFNGLGETBUFFERSUBDATAPROC glad_glGetBufferSubData = NULL;\nPFNGLGETCOMPRESSEDTEXIMAGEPROC glad_glGetCompressedTexImage = NULL;\nPFNGLGETCOMPRESSEDTEXTUREIMAGEPROC glad_glGetCompressedTextureImage = NULL;\nPFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC glad_glGetCompressedTextureSubImage =\n    NULL;\nPFNGLGETDEBUGMESSAGELOGPROC glad_glGetDebugMessageLog = NULL;\nPFNGLGETDOUBLEI_VPROC glad_glGetDoublei_v = NULL;\nPFNGLGETDOUBLEVPROC glad_glGetDoublev = NULL;\nPFNGLGETERRORPROC glad_glGetError = NULL;\nPFNGLGETFLOATI_VPROC glad_glGetFloati_v = NULL;\nPFNGLGETFLOATVPROC glad_glGetFloatv = NULL;\nPFNGLGETFRAGDATAINDEXPROC glad_glGetFragDataIndex = NULL;\nPFNGLGETFRAGDATALOCATIONPROC glad_glGetFragDataLocation = NULL;\nPFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC\nglad_glGetFramebufferAttachmentParameteriv = NULL;\nPFNGLGETFRAMEBUFFERPARAMETERIVPROC glad_glGetFramebufferParameteriv = NULL;\nPFNGLGETGRAPHICSRESETSTATUSPROC glad_glGetGraphicsResetStatus = NULL;\nPFNGLGETINTEGER64I_VPROC glad_glGetInteger64i_v = NULL;\nPFNGLGETINTEGER64VPROC glad_glGetInteger64v = NULL;\nPFNGLGETINTEGERI_VPROC glad_glGetIntegeri_v = NULL;\nPFNGLGETINTEGERVPROC glad_glGetIntegerv = NULL;\nPFNGLGETINTERNALFORMATI64VPROC glad_glGetInternalformati64v = NULL;\nPFNGLGETINTERNALFORMATIVPROC glad_glGetInternalformativ = NULL;\nPFNGLGETMULTISAMPLEFVPROC glad_glGetMultisamplefv = NULL;\nPFNGLGETNAMEDBUFFERPARAMETERI64VPROC glad_glGetNamedBufferParameteri64v = NULL;\nPFNGLGETNAMEDBUFFERPARAMETERIVPROC glad_glGetNamedBufferParameteriv = NULL;\nPFNGLGETNAMEDBUFFERPOINTERVPROC glad_glGetNamedBufferPointerv = NULL;\nPFNGLGETNAMEDBUFFERSUBDATAPROC glad_glGetNamedBufferSubData = NULL;\nPFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC\nglad_glGetNamedFramebufferAttachmentParameteriv = NULL;\nPFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC glad_glGetNamedFramebufferParameteriv =\n    NULL;\nPFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC\nglad_glGetNamedRenderbufferParameteriv = NULL;\nPFNGLGETOBJECTLABELPROC glad_glGetObjectLabel = NULL;\nPFNGLGETOBJECTPTRLABELPROC glad_glGetObjectPtrLabel = NULL;\nPFNGLGETPOINTERVPROC glad_glGetPointerv = NULL;\nPFNGLGETPROGRAMBINARYPROC glad_glGetProgramBinary = NULL;\nPFNGLGETPROGRAMINFOLOGPROC glad_glGetProgramInfoLog = NULL;\nPFNGLGETPROGRAMINTERFACEIVPROC glad_glGetProgramInterfaceiv = NULL;\nPFNGLGETPROGRAMPIPELINEINFOLOGPROC glad_glGetProgramPipelineInfoLog = NULL;\nPFNGLGETPROGRAMPIPELINEIVPROC glad_glGetProgramPipelineiv = NULL;\nPFNGLGETPROGRAMRESOURCEINDEXPROC glad_glGetProgramResourceIndex = NULL;\nPFNGLGETPROGRAMRESOURCELOCATIONPROC glad_glGetProgramResourceLocation = NULL;\nPFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC\nglad_glGetProgramResourceLocationIndex = NULL;\nPFNGLGETPROGRAMRESOURCENAMEPROC glad_glGetProgramResourceName = NULL;\nPFNGLGETPROGRAMRESOURCEIVPROC glad_glGetProgramResourceiv = NULL;\nPFNGLGETPROGRAMSTAGEIVPROC glad_glGetProgramStageiv = NULL;\nPFNGLGETPROGRAMIVPROC glad_glGetProgramiv = NULL;\nPFNGLGETQUERYBUFFEROBJECTI64VPROC glad_glGetQueryBufferObjecti64v = NULL;\nPFNGLGETQUERYBUFFEROBJECTIVPROC glad_glGetQueryBufferObjectiv = NULL;\nPFNGLGETQUERYBUFFEROBJECTUI64VPROC glad_glGetQueryBufferObjectui64v = NULL;\nPFNGLGETQUERYBUFFEROBJECTUIVPROC glad_glGetQueryBufferObjectuiv = NULL;\nPFNGLGETQUERYINDEXEDIVPROC glad_glGetQueryIndexediv = NULL;\nPFNGLGETQUERYOBJECTI64VPROC glad_glGetQueryObjecti64v = NULL;\nPFNGLGETQUERYOBJECTIVPROC glad_glGetQueryObjectiv = NULL;\nPFNGLGETQUERYOBJECTUI64VPROC glad_glGetQueryObjectui64v = NULL;\nPFNGLGETQUERYOBJECTUIVPROC glad_glGetQueryObjectuiv = NULL;\nPFNGLGETQUERYIVPROC glad_glGetQueryiv = NULL;\nPFNGLGETRENDERBUFFERPARAMETERIVPROC glad_glGetRenderbufferParameteriv = NULL;\nPFNGLGETSAMPLERPARAMETERIIVPROC glad_glGetSamplerParameterIiv = NULL;\nPFNGLGETSAMPLERPARAMETERIUIVPROC glad_glGetSamplerParameterIuiv = NULL;\nPFNGLGETSAMPLERPARAMETERFVPROC glad_glGetSamplerParameterfv = NULL;\nPFNGLGETSAMPLERPARAMETERIVPROC glad_glGetSamplerParameteriv = NULL;\nPFNGLGETSHADERINFOLOGPROC glad_glGetShaderInfoLog = NULL;\nPFNGLGETSHADERPRECISIONFORMATPROC glad_glGetShaderPrecisionFormat = NULL;\nPFNGLGETSHADERSOURCEPROC glad_glGetShaderSource = NULL;\nPFNGLGETSHADERIVPROC glad_glGetShaderiv = NULL;\nPFNGLGETSTRINGPROC glad_glGetString = NULL;\nPFNGLGETSTRINGIPROC glad_glGetStringi = NULL;\nPFNGLGETSUBROUTINEINDEXPROC glad_glGetSubroutineIndex = NULL;\nPFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glad_glGetSubroutineUniformLocation =\n    NULL;\nPFNGLGETSYNCIVPROC glad_glGetSynciv = NULL;\nPFNGLGETTEXIMAGEPROC glad_glGetTexImage = NULL;\nPFNGLGETTEXLEVELPARAMETERFVPROC glad_glGetTexLevelParameterfv = NULL;\nPFNGLGETTEXLEVELPARAMETERIVPROC glad_glGetTexLevelParameteriv = NULL;\nPFNGLGETTEXPARAMETERIIVPROC glad_glGetTexParameterIiv = NULL;\nPFNGLGETTEXPARAMETERIUIVPROC glad_glGetTexParameterIuiv = NULL;\nPFNGLGETTEXPARAMETERFVPROC glad_glGetTexParameterfv = NULL;\nPFNGLGETTEXPARAMETERIVPROC glad_glGetTexParameteriv = NULL;\nPFNGLGETTEXTUREIMAGEPROC glad_glGetTextureImage = NULL;\nPFNGLGETTEXTURELEVELPARAMETERFVPROC glad_glGetTextureLevelParameterfv = NULL;\nPFNGLGETTEXTURELEVELPARAMETERIVPROC glad_glGetTextureLevelParameteriv = NULL;\nPFNGLGETTEXTUREPARAMETERIIVPROC glad_glGetTextureParameterIiv = NULL;\nPFNGLGETTEXTUREPARAMETERIUIVPROC glad_glGetTextureParameterIuiv = NULL;\nPFNGLGETTEXTUREPARAMETERFVPROC glad_glGetTextureParameterfv = NULL;\nPFNGLGETTEXTUREPARAMETERIVPROC glad_glGetTextureParameteriv = NULL;\nPFNGLGETTEXTURESUBIMAGEPROC glad_glGetTextureSubImage = NULL;\nPFNGLGETTRANSFORMFEEDBACKVARYINGPROC glad_glGetTransformFeedbackVarying = NULL;\nPFNGLGETTRANSFORMFEEDBACKI64_VPROC glad_glGetTransformFeedbacki64_v = NULL;\nPFNGLGETTRANSFORMFEEDBACKI_VPROC glad_glGetTransformFeedbacki_v = NULL;\nPFNGLGETTRANSFORMFEEDBACKIVPROC glad_glGetTransformFeedbackiv = NULL;\nPFNGLGETUNIFORMBLOCKINDEXPROC glad_glGetUniformBlockIndex = NULL;\nPFNGLGETUNIFORMINDICESPROC glad_glGetUniformIndices = NULL;\nPFNGLGETUNIFORMLOCATIONPROC glad_glGetUniformLocation = NULL;\nPFNGLGETUNIFORMSUBROUTINEUIVPROC glad_glGetUniformSubroutineuiv = NULL;\nPFNGLGETUNIFORMDVPROC glad_glGetUniformdv = NULL;\nPFNGLGETUNIFORMFVPROC glad_glGetUniformfv = NULL;\nPFNGLGETUNIFORMIVPROC glad_glGetUniformiv = NULL;\nPFNGLGETUNIFORMUIVPROC glad_glGetUniformuiv = NULL;\nPFNGLGETVERTEXARRAYINDEXED64IVPROC glad_glGetVertexArrayIndexed64iv = NULL;\nPFNGLGETVERTEXARRAYINDEXEDIVPROC glad_glGetVertexArrayIndexediv = NULL;\nPFNGLGETVERTEXARRAYIVPROC glad_glGetVertexArrayiv = NULL;\nPFNGLGETVERTEXATTRIBIIVPROC glad_glGetVertexAttribIiv = NULL;\nPFNGLGETVERTEXATTRIBIUIVPROC glad_glGetVertexAttribIuiv = NULL;\nPFNGLGETVERTEXATTRIBLDVPROC glad_glGetVertexAttribLdv = NULL;\nPFNGLGETVERTEXATTRIBPOINTERVPROC glad_glGetVertexAttribPointerv = NULL;\nPFNGLGETVERTEXATTRIBDVPROC glad_glGetVertexAttribdv = NULL;\nPFNGLGETVERTEXATTRIBFVPROC glad_glGetVertexAttribfv = NULL;\nPFNGLGETVERTEXATTRIBIVPROC glad_glGetVertexAttribiv = NULL;\nPFNGLGETNCOLORTABLEPROC glad_glGetnColorTable = NULL;\nPFNGLGETNCOMPRESSEDTEXIMAGEPROC glad_glGetnCompressedTexImage = NULL;\nPFNGLGETNCONVOLUTIONFILTERPROC glad_glGetnConvolutionFilter = NULL;\nPFNGLGETNHISTOGRAMPROC glad_glGetnHistogram = NULL;\nPFNGLGETNMAPDVPROC glad_glGetnMapdv = NULL;\nPFNGLGETNMAPFVPROC glad_glGetnMapfv = NULL;\nPFNGLGETNMAPIVPROC glad_glGetnMapiv = NULL;\nPFNGLGETNMINMAXPROC glad_glGetnMinmax = NULL;\nPFNGLGETNPIXELMAPFVPROC glad_glGetnPixelMapfv = NULL;\nPFNGLGETNPIXELMAPUIVPROC glad_glGetnPixelMapuiv = NULL;\nPFNGLGETNPIXELMAPUSVPROC glad_glGetnPixelMapusv = NULL;\nPFNGLGETNPOLYGONSTIPPLEPROC glad_glGetnPolygonStipple = NULL;\nPFNGLGETNSEPARABLEFILTERPROC glad_glGetnSeparableFilter = NULL;\nPFNGLGETNTEXIMAGEPROC glad_glGetnTexImage = NULL;\nPFNGLGETNUNIFORMDVPROC glad_glGetnUniformdv = NULL;\nPFNGLGETNUNIFORMFVPROC glad_glGetnUniformfv = NULL;\nPFNGLGETNUNIFORMIVPROC glad_glGetnUniformiv = NULL;\nPFNGLGETNUNIFORMUIVPROC glad_glGetnUniformuiv = NULL;\nPFNGLHINTPROC glad_glHint = NULL;\nPFNGLINVALIDATEBUFFERDATAPROC glad_glInvalidateBufferData = NULL;\nPFNGLINVALIDATEBUFFERSUBDATAPROC glad_glInvalidateBufferSubData = NULL;\nPFNGLINVALIDATEFRAMEBUFFERPROC glad_glInvalidateFramebuffer = NULL;\nPFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC glad_glInvalidateNamedFramebufferData =\n    NULL;\nPFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC\nglad_glInvalidateNamedFramebufferSubData = NULL;\nPFNGLINVALIDATESUBFRAMEBUFFERPROC glad_glInvalidateSubFramebuffer = NULL;\nPFNGLINVALIDATETEXIMAGEPROC glad_glInvalidateTexImage = NULL;\nPFNGLINVALIDATETEXSUBIMAGEPROC glad_glInvalidateTexSubImage = NULL;\nPFNGLISBUFFERPROC glad_glIsBuffer = NULL;\nPFNGLISENABLEDPROC glad_glIsEnabled = NULL;\nPFNGLISENABLEDIPROC glad_glIsEnabledi = NULL;\nPFNGLISFRAMEBUFFERPROC glad_glIsFramebuffer = NULL;\nPFNGLISPROGRAMPROC glad_glIsProgram = NULL;\nPFNGLISPROGRAMPIPELINEPROC glad_glIsProgramPipeline = NULL;\nPFNGLISQUERYPROC glad_glIsQuery = NULL;\nPFNGLISRENDERBUFFERPROC glad_glIsRenderbuffer = NULL;\nPFNGLISSAMPLERPROC glad_glIsSampler = NULL;\nPFNGLISSHADERPROC glad_glIsShader = NULL;\nPFNGLISSYNCPROC glad_glIsSync = NULL;\nPFNGLISTEXTUREPROC glad_glIsTexture = NULL;\nPFNGLISTRANSFORMFEEDBACKPROC glad_glIsTransformFeedback = NULL;\nPFNGLISVERTEXARRAYPROC glad_glIsVertexArray = NULL;\nPFNGLLINEWIDTHPROC glad_glLineWidth = NULL;\nPFNGLLINKPROGRAMPROC glad_glLinkProgram = NULL;\nPFNGLLOGICOPPROC glad_glLogicOp = NULL;\nPFNGLMAPBUFFERPROC glad_glMapBuffer = NULL;\nPFNGLMAPBUFFERRANGEPROC glad_glMapBufferRange = NULL;\nPFNGLMAPNAMEDBUFFERPROC glad_glMapNamedBuffer = NULL;\nPFNGLMAPNAMEDBUFFERRANGEPROC glad_glMapNamedBufferRange = NULL;\nPFNGLMEMORYBARRIERPROC glad_glMemoryBarrier = NULL;\nPFNGLMEMORYBARRIERBYREGIONPROC glad_glMemoryBarrierByRegion = NULL;\nPFNGLMINSAMPLESHADINGPROC glad_glMinSampleShading = NULL;\nPFNGLMULTIDRAWARRAYSPROC glad_glMultiDrawArrays = NULL;\nPFNGLMULTIDRAWARRAYSINDIRECTPROC glad_glMultiDrawArraysIndirect = NULL;\nPFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC glad_glMultiDrawArraysIndirectCount =\n    NULL;\nPFNGLMULTIDRAWELEMENTSPROC glad_glMultiDrawElements = NULL;\nPFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glad_glMultiDrawElementsBaseVertex = NULL;\nPFNGLMULTIDRAWELEMENTSINDIRECTPROC glad_glMultiDrawElementsIndirect = NULL;\nPFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC glad_glMultiDrawElementsIndirectCount =\n    NULL;\nPFNGLMULTITEXCOORDP1UIPROC glad_glMultiTexCoordP1ui = NULL;\nPFNGLMULTITEXCOORDP1UIVPROC glad_glMultiTexCoordP1uiv = NULL;\nPFNGLMULTITEXCOORDP2UIPROC glad_glMultiTexCoordP2ui = NULL;\nPFNGLMULTITEXCOORDP2UIVPROC glad_glMultiTexCoordP2uiv = NULL;\nPFNGLMULTITEXCOORDP3UIPROC glad_glMultiTexCoordP3ui = NULL;\nPFNGLMULTITEXCOORDP3UIVPROC glad_glMultiTexCoordP3uiv = NULL;\nPFNGLMULTITEXCOORDP4UIPROC glad_glMultiTexCoordP4ui = NULL;\nPFNGLMULTITEXCOORDP4UIVPROC glad_glMultiTexCoordP4uiv = NULL;\nPFNGLNAMEDBUFFERDATAPROC glad_glNamedBufferData = NULL;\nPFNGLNAMEDBUFFERSTORAGEPROC glad_glNamedBufferStorage = NULL;\nPFNGLNAMEDBUFFERSUBDATAPROC glad_glNamedBufferSubData = NULL;\nPFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC glad_glNamedFramebufferDrawBuffer = NULL;\nPFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC glad_glNamedFramebufferDrawBuffers = NULL;\nPFNGLNAMEDFRAMEBUFFERPARAMETERIPROC glad_glNamedFramebufferParameteri = NULL;\nPFNGLNAMEDFRAMEBUFFERREADBUFFERPROC glad_glNamedFramebufferReadBuffer = NULL;\nPFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC glad_glNamedFramebufferRenderbuffer =\n    NULL;\nPFNGLNAMEDFRAMEBUFFERTEXTUREPROC glad_glNamedFramebufferTexture = NULL;\nPFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC glad_glNamedFramebufferTextureLayer =\n    NULL;\nPFNGLNAMEDRENDERBUFFERSTORAGEPROC glad_glNamedRenderbufferStorage = NULL;\nPFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC\nglad_glNamedRenderbufferStorageMultisample = NULL;\nPFNGLNORMALP3UIPROC glad_glNormalP3ui = NULL;\nPFNGLNORMALP3UIVPROC glad_glNormalP3uiv = NULL;\nPFNGLOBJECTLABELPROC glad_glObjectLabel = NULL;\nPFNGLOBJECTPTRLABELPROC glad_glObjectPtrLabel = NULL;\nPFNGLPATCHPARAMETERFVPROC glad_glPatchParameterfv = NULL;\nPFNGLPATCHPARAMETERIPROC glad_glPatchParameteri = NULL;\nPFNGLPAUSETRANSFORMFEEDBACKPROC glad_glPauseTransformFeedback = NULL;\nPFNGLPIXELSTOREFPROC glad_glPixelStoref = NULL;\nPFNGLPIXELSTOREIPROC glad_glPixelStorei = NULL;\nPFNGLPOINTPARAMETERFPROC glad_glPointParameterf = NULL;\nPFNGLPOINTPARAMETERFVPROC glad_glPointParameterfv = NULL;\nPFNGLPOINTPARAMETERIPROC glad_glPointParameteri = NULL;\nPFNGLPOINTPARAMETERIVPROC glad_glPointParameteriv = NULL;\nPFNGLPOINTSIZEPROC glad_glPointSize = NULL;\nPFNGLPOLYGONMODEPROC glad_glPolygonMode = NULL;\nPFNGLPOLYGONOFFSETPROC glad_glPolygonOffset = NULL;\nPFNGLPOLYGONOFFSETCLAMPPROC glad_glPolygonOffsetClamp = NULL;\nPFNGLPOPDEBUGGROUPPROC glad_glPopDebugGroup = NULL;\nPFNGLPRIMITIVERESTARTINDEXPROC glad_glPrimitiveRestartIndex = NULL;\nPFNGLPROGRAMBINARYPROC glad_glProgramBinary = NULL;\nPFNGLPROGRAMPARAMETERIPROC glad_glProgramParameteri = NULL;\nPFNGLPROGRAMUNIFORM1DPROC glad_glProgramUniform1d = NULL;\nPFNGLPROGRAMUNIFORM1DVPROC glad_glProgramUniform1dv = NULL;\nPFNGLPROGRAMUNIFORM1FPROC glad_glProgramUniform1f = NULL;\nPFNGLPROGRAMUNIFORM1FVPROC glad_glProgramUniform1fv = NULL;\nPFNGLPROGRAMUNIFORM1IPROC glad_glProgramUniform1i = NULL;\nPFNGLPROGRAMUNIFORM1IVPROC glad_glProgramUniform1iv = NULL;\nPFNGLPROGRAMUNIFORM1UIPROC glad_glProgramUniform1ui = NULL;\nPFNGLPROGRAMUNIFORM1UIVPROC glad_glProgramUniform1uiv = NULL;\nPFNGLPROGRAMUNIFORM2DPROC glad_glProgramUniform2d = NULL;\nPFNGLPROGRAMUNIFORM2DVPROC glad_glProgramUniform2dv = NULL;\nPFNGLPROGRAMUNIFORM2FPROC glad_glProgramUniform2f = NULL;\nPFNGLPROGRAMUNIFORM2FVPROC glad_glProgramUniform2fv = NULL;\nPFNGLPROGRAMUNIFORM2IPROC glad_glProgramUniform2i = NULL;\nPFNGLPROGRAMUNIFORM2IVPROC glad_glProgramUniform2iv = NULL;\nPFNGLPROGRAMUNIFORM2UIPROC glad_glProgramUniform2ui = NULL;\nPFNGLPROGRAMUNIFORM2UIVPROC glad_glProgramUniform2uiv = NULL;\nPFNGLPROGRAMUNIFORM3DPROC glad_glProgramUniform3d = NULL;\nPFNGLPROGRAMUNIFORM3DVPROC glad_glProgramUniform3dv = NULL;\nPFNGLPROGRAMUNIFORM3FPROC glad_glProgramUniform3f = NULL;\nPFNGLPROGRAMUNIFORM3FVPROC glad_glProgramUniform3fv = NULL;\nPFNGLPROGRAMUNIFORM3IPROC glad_glProgramUniform3i = NULL;\nPFNGLPROGRAMUNIFORM3IVPROC glad_glProgramUniform3iv = NULL;\nPFNGLPROGRAMUNIFORM3UIPROC glad_glProgramUniform3ui = NULL;\nPFNGLPROGRAMUNIFORM3UIVPROC glad_glProgramUniform3uiv = NULL;\nPFNGLPROGRAMUNIFORM4DPROC glad_glProgramUniform4d = NULL;\nPFNGLPROGRAMUNIFORM4DVPROC glad_glProgramUniform4dv = NULL;\nPFNGLPROGRAMUNIFORM4FPROC glad_glProgramUniform4f = NULL;\nPFNGLPROGRAMUNIFORM4FVPROC glad_glProgramUniform4fv = NULL;\nPFNGLPROGRAMUNIFORM4IPROC glad_glProgramUniform4i = NULL;\nPFNGLPROGRAMUNIFORM4IVPROC glad_glProgramUniform4iv = NULL;\nPFNGLPROGRAMUNIFORM4UIPROC glad_glProgramUniform4ui = NULL;\nPFNGLPROGRAMUNIFORM4UIVPROC glad_glProgramUniform4uiv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX2DVPROC glad_glProgramUniformMatrix2dv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX2FVPROC glad_glProgramUniformMatrix2fv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glad_glProgramUniformMatrix2x3dv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glad_glProgramUniformMatrix2x3fv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glad_glProgramUniformMatrix2x4dv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glad_glProgramUniformMatrix2x4fv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX3DVPROC glad_glProgramUniformMatrix3dv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX3FVPROC glad_glProgramUniformMatrix3fv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glad_glProgramUniformMatrix3x2dv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glad_glProgramUniformMatrix3x2fv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glad_glProgramUniformMatrix3x4dv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glad_glProgramUniformMatrix3x4fv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX4DVPROC glad_glProgramUniformMatrix4dv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX4FVPROC glad_glProgramUniformMatrix4fv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glad_glProgramUniformMatrix4x2dv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glad_glProgramUniformMatrix4x2fv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glad_glProgramUniformMatrix4x3dv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glad_glProgramUniformMatrix4x3fv = NULL;\nPFNGLPROVOKINGVERTEXPROC glad_glProvokingVertex = NULL;\nPFNGLPUSHDEBUGGROUPPROC glad_glPushDebugGroup = NULL;\nPFNGLQUERYCOUNTERPROC glad_glQueryCounter = NULL;\nPFNGLREADBUFFERPROC glad_glReadBuffer = NULL;\nPFNGLREADPIXELSPROC glad_glReadPixels = NULL;\nPFNGLREADNPIXELSPROC glad_glReadnPixels = NULL;\nPFNGLRELEASESHADERCOMPILERPROC glad_glReleaseShaderCompiler = NULL;\nPFNGLRENDERBUFFERSTORAGEPROC glad_glRenderbufferStorage = NULL;\nPFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC glad_glRenderbufferStorageMultisample =\n    NULL;\nPFNGLRESUMETRANSFORMFEEDBACKPROC glad_glResumeTransformFeedback = NULL;\nPFNGLSAMPLECOVERAGEPROC glad_glSampleCoverage = NULL;\nPFNGLSAMPLEMASKIPROC glad_glSampleMaski = NULL;\nPFNGLSAMPLERPARAMETERIIVPROC glad_glSamplerParameterIiv = NULL;\nPFNGLSAMPLERPARAMETERIUIVPROC glad_glSamplerParameterIuiv = NULL;\nPFNGLSAMPLERPARAMETERFPROC glad_glSamplerParameterf = NULL;\nPFNGLSAMPLERPARAMETERFVPROC glad_glSamplerParameterfv = NULL;\nPFNGLSAMPLERPARAMETERIPROC glad_glSamplerParameteri = NULL;\nPFNGLSAMPLERPARAMETERIVPROC glad_glSamplerParameteriv = NULL;\nPFNGLSCISSORPROC glad_glScissor = NULL;\nPFNGLSCISSORARRAYVPROC glad_glScissorArrayv = NULL;\nPFNGLSCISSORINDEXEDPROC glad_glScissorIndexed = NULL;\nPFNGLSCISSORINDEXEDVPROC glad_glScissorIndexedv = NULL;\nPFNGLSECONDARYCOLORP3UIPROC glad_glSecondaryColorP3ui = NULL;\nPFNGLSECONDARYCOLORP3UIVPROC glad_glSecondaryColorP3uiv = NULL;\nPFNGLSHADERBINARYPROC glad_glShaderBinary = NULL;\nPFNGLSHADERSOURCEPROC glad_glShaderSource = NULL;\nPFNGLSHADERSTORAGEBLOCKBINDINGPROC glad_glShaderStorageBlockBinding = NULL;\nPFNGLSPECIALIZESHADERPROC glad_glSpecializeShader = NULL;\nPFNGLSTENCILFUNCPROC glad_glStencilFunc = NULL;\nPFNGLSTENCILFUNCSEPARATEPROC glad_glStencilFuncSeparate = NULL;\nPFNGLSTENCILMASKPROC glad_glStencilMask = NULL;\nPFNGLSTENCILMASKSEPARATEPROC glad_glStencilMaskSeparate = NULL;\nPFNGLSTENCILOPPROC glad_glStencilOp = NULL;\nPFNGLSTENCILOPSEPARATEPROC glad_glStencilOpSeparate = NULL;\nPFNGLTEXBUFFERPROC glad_glTexBuffer = NULL;\nPFNGLTEXBUFFERRANGEPROC glad_glTexBufferRange = NULL;\nPFNGLTEXCOORDP1UIPROC glad_glTexCoordP1ui = NULL;\nPFNGLTEXCOORDP1UIVPROC glad_glTexCoordP1uiv = NULL;\nPFNGLTEXCOORDP2UIPROC glad_glTexCoordP2ui = NULL;\nPFNGLTEXCOORDP2UIVPROC glad_glTexCoordP2uiv = NULL;\nPFNGLTEXCOORDP3UIPROC glad_glTexCoordP3ui = NULL;\nPFNGLTEXCOORDP3UIVPROC glad_glTexCoordP3uiv = NULL;\nPFNGLTEXCOORDP4UIPROC glad_glTexCoordP4ui = NULL;\nPFNGLTEXCOORDP4UIVPROC glad_glTexCoordP4uiv = NULL;\nPFNGLTEXIMAGE1DPROC glad_glTexImage1D = NULL;\nPFNGLTEXIMAGE2DPROC glad_glTexImage2D = NULL;\nPFNGLTEXIMAGE2DMULTISAMPLEPROC glad_glTexImage2DMultisample = NULL;\nPFNGLTEXIMAGE3DPROC glad_glTexImage3D = NULL;\nPFNGLTEXIMAGE3DMULTISAMPLEPROC glad_glTexImage3DMultisample = NULL;\nPFNGLTEXPARAMETERIIVPROC glad_glTexParameterIiv = NULL;\nPFNGLTEXPARAMETERIUIVPROC glad_glTexParameterIuiv = NULL;\nPFNGLTEXPARAMETERFPROC glad_glTexParameterf = NULL;\nPFNGLTEXPARAMETERFVPROC glad_glTexParameterfv = NULL;\nPFNGLTEXPARAMETERIPROC glad_glTexParameteri = NULL;\nPFNGLTEXPARAMETERIVPROC glad_glTexParameteriv = NULL;\nPFNGLTEXSTORAGE1DPROC glad_glTexStorage1D = NULL;\nPFNGLTEXSTORAGE2DPROC glad_glTexStorage2D = NULL;\nPFNGLTEXSTORAGE2DMULTISAMPLEPROC glad_glTexStorage2DMultisample = NULL;\nPFNGLTEXSTORAGE3DPROC glad_glTexStorage3D = NULL;\nPFNGLTEXSTORAGE3DMULTISAMPLEPROC glad_glTexStorage3DMultisample = NULL;\nPFNGLTEXSUBIMAGE1DPROC glad_glTexSubImage1D = NULL;\nPFNGLTEXSUBIMAGE2DPROC glad_glTexSubImage2D = NULL;\nPFNGLTEXSUBIMAGE3DPROC glad_glTexSubImage3D = NULL;\nPFNGLTEXTUREBARRIERPROC glad_glTextureBarrier = NULL;\nPFNGLTEXTUREBUFFERPROC glad_glTextureBuffer = NULL;\nPFNGLTEXTUREBUFFERRANGEPROC glad_glTextureBufferRange = NULL;\nPFNGLTEXTUREPARAMETERIIVPROC glad_glTextureParameterIiv = NULL;\nPFNGLTEXTUREPARAMETERIUIVPROC glad_glTextureParameterIuiv = NULL;\nPFNGLTEXTUREPARAMETERFPROC glad_glTextureParameterf = NULL;\nPFNGLTEXTUREPARAMETERFVPROC glad_glTextureParameterfv = NULL;\nPFNGLTEXTUREPARAMETERIPROC glad_glTextureParameteri = NULL;\nPFNGLTEXTUREPARAMETERIVPROC glad_glTextureParameteriv = NULL;\nPFNGLTEXTURESTORAGE1DPROC glad_glTextureStorage1D = NULL;\nPFNGLTEXTURESTORAGE2DPROC glad_glTextureStorage2D = NULL;\nPFNGLTEXTURESTORAGE2DMULTISAMPLEPROC glad_glTextureStorage2DMultisample = NULL;\nPFNGLTEXTURESTORAGE3DPROC glad_glTextureStorage3D = NULL;\nPFNGLTEXTURESTORAGE3DMULTISAMPLEPROC glad_glTextureStorage3DMultisample = NULL;\nPFNGLTEXTURESUBIMAGE1DPROC glad_glTextureSubImage1D = NULL;\nPFNGLTEXTURESUBIMAGE2DPROC glad_glTextureSubImage2D = NULL;\nPFNGLTEXTURESUBIMAGE3DPROC glad_glTextureSubImage3D = NULL;\nPFNGLTEXTUREVIEWPROC glad_glTextureView = NULL;\nPFNGLTRANSFORMFEEDBACKBUFFERBASEPROC glad_glTransformFeedbackBufferBase = NULL;\nPFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC glad_glTransformFeedbackBufferRange =\n    NULL;\nPFNGLTRANSFORMFEEDBACKVARYINGSPROC glad_glTransformFeedbackVaryings = NULL;\nPFNGLUNIFORM1DPROC glad_glUniform1d = NULL;\nPFNGLUNIFORM1DVPROC glad_glUniform1dv = NULL;\nPFNGLUNIFORM1FPROC glad_glUniform1f = NULL;\nPFNGLUNIFORM1FVPROC glad_glUniform1fv = NULL;\nPFNGLUNIFORM1IPROC glad_glUniform1i = NULL;\nPFNGLUNIFORM1IVPROC glad_glUniform1iv = NULL;\nPFNGLUNIFORM1UIPROC glad_glUniform1ui = NULL;\nPFNGLUNIFORM1UIVPROC glad_glUniform1uiv = NULL;\nPFNGLUNIFORM2DPROC glad_glUniform2d = NULL;\nPFNGLUNIFORM2DVPROC glad_glUniform2dv = NULL;\nPFNGLUNIFORM2FPROC glad_glUniform2f = NULL;\nPFNGLUNIFORM2FVPROC glad_glUniform2fv = NULL;\nPFNGLUNIFORM2IPROC glad_glUniform2i = NULL;\nPFNGLUNIFORM2IVPROC glad_glUniform2iv = NULL;\nPFNGLUNIFORM2UIPROC glad_glUniform2ui = NULL;\nPFNGLUNIFORM2UIVPROC glad_glUniform2uiv = NULL;\nPFNGLUNIFORM3DPROC glad_glUniform3d = NULL;\nPFNGLUNIFORM3DVPROC glad_glUniform3dv = NULL;\nPFNGLUNIFORM3FPROC glad_glUniform3f = NULL;\nPFNGLUNIFORM3FVPROC glad_glUniform3fv = NULL;\nPFNGLUNIFORM3IPROC glad_glUniform3i = NULL;\nPFNGLUNIFORM3IVPROC glad_glUniform3iv = NULL;\nPFNGLUNIFORM3UIPROC glad_glUniform3ui = NULL;\nPFNGLUNIFORM3UIVPROC glad_glUniform3uiv = NULL;\nPFNGLUNIFORM4DPROC glad_glUniform4d = NULL;\nPFNGLUNIFORM4DVPROC glad_glUniform4dv = NULL;\nPFNGLUNIFORM4FPROC glad_glUniform4f = NULL;\nPFNGLUNIFORM4FVPROC glad_glUniform4fv = NULL;\nPFNGLUNIFORM4IPROC glad_glUniform4i = NULL;\nPFNGLUNIFORM4IVPROC glad_glUniform4iv = NULL;\nPFNGLUNIFORM4UIPROC glad_glUniform4ui = NULL;\nPFNGLUNIFORM4UIVPROC glad_glUniform4uiv = NULL;\nPFNGLUNIFORMBLOCKBINDINGPROC glad_glUniformBlockBinding = NULL;\nPFNGLUNIFORMMATRIX2DVPROC glad_glUniformMatrix2dv = NULL;\nPFNGLUNIFORMMATRIX2FVPROC glad_glUniformMatrix2fv = NULL;\nPFNGLUNIFORMMATRIX2X3DVPROC glad_glUniformMatrix2x3dv = NULL;\nPFNGLUNIFORMMATRIX2X3FVPROC glad_glUniformMatrix2x3fv = NULL;\nPFNGLUNIFORMMATRIX2X4DVPROC glad_glUniformMatrix2x4dv = NULL;\nPFNGLUNIFORMMATRIX2X4FVPROC glad_glUniformMatrix2x4fv = NULL;\nPFNGLUNIFORMMATRIX3DVPROC glad_glUniformMatrix3dv = NULL;\nPFNGLUNIFORMMATRIX3FVPROC glad_glUniformMatrix3fv = NULL;\nPFNGLUNIFORMMATRIX3X2DVPROC glad_glUniformMatrix3x2dv = NULL;\nPFNGLUNIFORMMATRIX3X2FVPROC glad_glUniformMatrix3x2fv = NULL;\nPFNGLUNIFORMMATRIX3X4DVPROC glad_glUniformMatrix3x4dv = NULL;\nPFNGLUNIFORMMATRIX3X4FVPROC glad_glUniformMatrix3x4fv = NULL;\nPFNGLUNIFORMMATRIX4DVPROC glad_glUniformMatrix4dv = NULL;\nPFNGLUNIFORMMATRIX4FVPROC glad_glUniformMatrix4fv = NULL;\nPFNGLUNIFORMMATRIX4X2DVPROC glad_glUniformMatrix4x2dv = NULL;\nPFNGLUNIFORMMATRIX4X2FVPROC glad_glUniformMatrix4x2fv = NULL;\nPFNGLUNIFORMMATRIX4X3DVPROC glad_glUniformMatrix4x3dv = NULL;\nPFNGLUNIFORMMATRIX4X3FVPROC glad_glUniformMatrix4x3fv = NULL;\nPFNGLUNIFORMSUBROUTINESUIVPROC glad_glUniformSubroutinesuiv = NULL;\nPFNGLUNMAPBUFFERPROC glad_glUnmapBuffer = NULL;\nPFNGLUNMAPNAMEDBUFFERPROC glad_glUnmapNamedBuffer = NULL;\nPFNGLUSEPROGRAMPROC glad_glUseProgram = NULL;\nPFNGLUSEPROGRAMSTAGESPROC glad_glUseProgramStages = NULL;\nPFNGLVALIDATEPROGRAMPROC glad_glValidateProgram = NULL;\nPFNGLVALIDATEPROGRAMPIPELINEPROC glad_glValidateProgramPipeline = NULL;\nPFNGLVERTEXARRAYATTRIBBINDINGPROC glad_glVertexArrayAttribBinding = NULL;\nPFNGLVERTEXARRAYATTRIBFORMATPROC glad_glVertexArrayAttribFormat = NULL;\nPFNGLVERTEXARRAYATTRIBIFORMATPROC glad_glVertexArrayAttribIFormat = NULL;\nPFNGLVERTEXARRAYATTRIBLFORMATPROC glad_glVertexArrayAttribLFormat = NULL;\nPFNGLVERTEXARRAYBINDINGDIVISORPROC glad_glVertexArrayBindingDivisor = NULL;\nPFNGLVERTEXARRAYELEMENTBUFFERPROC glad_glVertexArrayElementBuffer = NULL;\nPFNGLVERTEXARRAYVERTEXBUFFERPROC glad_glVertexArrayVertexBuffer = NULL;\nPFNGLVERTEXARRAYVERTEXBUFFERSPROC glad_glVertexArrayVertexBuffers = NULL;\nPFNGLVERTEXATTRIB1DPROC glad_glVertexAttrib1d = NULL;\nPFNGLVERTEXATTRIB1DVPROC glad_glVertexAttrib1dv = NULL;\nPFNGLVERTEXATTRIB1FPROC glad_glVertexAttrib1f = NULL;\nPFNGLVERTEXATTRIB1FVPROC glad_glVertexAttrib1fv = NULL;\nPFNGLVERTEXATTRIB1SPROC glad_glVertexAttrib1s = NULL;\nPFNGLVERTEXATTRIB1SVPROC glad_glVertexAttrib1sv = NULL;\nPFNGLVERTEXATTRIB2DPROC glad_glVertexAttrib2d = NULL;\nPFNGLVERTEXATTRIB2DVPROC glad_glVertexAttrib2dv = NULL;\nPFNGLVERTEXATTRIB2FPROC glad_glVertexAttrib2f = NULL;\nPFNGLVERTEXATTRIB2FVPROC glad_glVertexAttrib2fv = NULL;\nPFNGLVERTEXATTRIB2SPROC glad_glVertexAttrib2s = NULL;\nPFNGLVERTEXATTRIB2SVPROC glad_glVertexAttrib2sv = NULL;\nPFNGLVERTEXATTRIB3DPROC glad_glVertexAttrib3d = NULL;\nPFNGLVERTEXATTRIB3DVPROC glad_glVertexAttrib3dv = NULL;\nPFNGLVERTEXATTRIB3FPROC glad_glVertexAttrib3f = NULL;\nPFNGLVERTEXATTRIB3FVPROC glad_glVertexAttrib3fv = NULL;\nPFNGLVERTEXATTRIB3SPROC glad_glVertexAttrib3s = NULL;\nPFNGLVERTEXATTRIB3SVPROC glad_glVertexAttrib3sv = NULL;\nPFNGLVERTEXATTRIB4NBVPROC glad_glVertexAttrib4Nbv = NULL;\nPFNGLVERTEXATTRIB4NIVPROC glad_glVertexAttrib4Niv = NULL;\nPFNGLVERTEXATTRIB4NSVPROC glad_glVertexAttrib4Nsv = NULL;\nPFNGLVERTEXATTRIB4NUBPROC glad_glVertexAttrib4Nub = NULL;\nPFNGLVERTEXATTRIB4NUBVPROC glad_glVertexAttrib4Nubv = NULL;\nPFNGLVERTEXATTRIB4NUIVPROC glad_glVertexAttrib4Nuiv = NULL;\nPFNGLVERTEXATTRIB4NUSVPROC glad_glVertexAttrib4Nusv = NULL;\nPFNGLVERTEXATTRIB4BVPROC glad_glVertexAttrib4bv = NULL;\nPFNGLVERTEXATTRIB4DPROC glad_glVertexAttrib4d = NULL;\nPFNGLVERTEXATTRIB4DVPROC glad_glVertexAttrib4dv = NULL;\nPFNGLVERTEXATTRIB4FPROC glad_glVertexAttrib4f = NULL;\nPFNGLVERTEXATTRIB4FVPROC glad_glVertexAttrib4fv = NULL;\nPFNGLVERTEXATTRIB4IVPROC glad_glVertexAttrib4iv = NULL;\nPFNGLVERTEXATTRIB4SPROC glad_glVertexAttrib4s = NULL;\nPFNGLVERTEXATTRIB4SVPROC glad_glVertexAttrib4sv = NULL;\nPFNGLVERTEXATTRIB4UBVPROC glad_glVertexAttrib4ubv = NULL;\nPFNGLVERTEXATTRIB4UIVPROC glad_glVertexAttrib4uiv = NULL;\nPFNGLVERTEXATTRIB4USVPROC glad_glVertexAttrib4usv = NULL;\nPFNGLVERTEXATTRIBBINDINGPROC glad_glVertexAttribBinding = NULL;\nPFNGLVERTEXATTRIBDIVISORPROC glad_glVertexAttribDivisor = NULL;\nPFNGLVERTEXATTRIBFORMATPROC glad_glVertexAttribFormat = NULL;\nPFNGLVERTEXATTRIBI1IPROC glad_glVertexAttribI1i = NULL;\nPFNGLVERTEXATTRIBI1IVPROC glad_glVertexAttribI1iv = NULL;\nPFNGLVERTEXATTRIBI1UIPROC glad_glVertexAttribI1ui = NULL;\nPFNGLVERTEXATTRIBI1UIVPROC glad_glVertexAttribI1uiv = NULL;\nPFNGLVERTEXATTRIBI2IPROC glad_glVertexAttribI2i = NULL;\nPFNGLVERTEXATTRIBI2IVPROC glad_glVertexAttribI2iv = NULL;\nPFNGLVERTEXATTRIBI2UIPROC glad_glVertexAttribI2ui = NULL;\nPFNGLVERTEXATTRIBI2UIVPROC glad_glVertexAttribI2uiv = NULL;\nPFNGLVERTEXATTRIBI3IPROC glad_glVertexAttribI3i = NULL;\nPFNGLVERTEXATTRIBI3IVPROC glad_glVertexAttribI3iv = NULL;\nPFNGLVERTEXATTRIBI3UIPROC glad_glVertexAttribI3ui = NULL;\nPFNGLVERTEXATTRIBI3UIVPROC glad_glVertexAttribI3uiv = NULL;\nPFNGLVERTEXATTRIBI4BVPROC glad_glVertexAttribI4bv = NULL;\nPFNGLVERTEXATTRIBI4IPROC glad_glVertexAttribI4i = NULL;\nPFNGLVERTEXATTRIBI4IVPROC glad_glVertexAttribI4iv = NULL;\nPFNGLVERTEXATTRIBI4SVPROC glad_glVertexAttribI4sv = NULL;\nPFNGLVERTEXATTRIBI4UBVPROC glad_glVertexAttribI4ubv = NULL;\nPFNGLVERTEXATTRIBI4UIPROC glad_glVertexAttribI4ui = NULL;\nPFNGLVERTEXATTRIBI4UIVPROC glad_glVertexAttribI4uiv = NULL;\nPFNGLVERTEXATTRIBI4USVPROC glad_glVertexAttribI4usv = NULL;\nPFNGLVERTEXATTRIBIFORMATPROC glad_glVertexAttribIFormat = NULL;\nPFNGLVERTEXATTRIBIPOINTERPROC glad_glVertexAttribIPointer = NULL;\nPFNGLVERTEXATTRIBL1DPROC glad_glVertexAttribL1d = NULL;\nPFNGLVERTEXATTRIBL1DVPROC glad_glVertexAttribL1dv = NULL;\nPFNGLVERTEXATTRIBL2DPROC glad_glVertexAttribL2d = NULL;\nPFNGLVERTEXATTRIBL2DVPROC glad_glVertexAttribL2dv = NULL;\nPFNGLVERTEXATTRIBL3DPROC glad_glVertexAttribL3d = NULL;\nPFNGLVERTEXATTRIBL3DVPROC glad_glVertexAttribL3dv = NULL;\nPFNGLVERTEXATTRIBL4DPROC glad_glVertexAttribL4d = NULL;\nPFNGLVERTEXATTRIBL4DVPROC glad_glVertexAttribL4dv = NULL;\nPFNGLVERTEXATTRIBLFORMATPROC glad_glVertexAttribLFormat = NULL;\nPFNGLVERTEXATTRIBLPOINTERPROC glad_glVertexAttribLPointer = NULL;\nPFNGLVERTEXATTRIBP1UIPROC glad_glVertexAttribP1ui = NULL;\nPFNGLVERTEXATTRIBP1UIVPROC glad_glVertexAttribP1uiv = NULL;\nPFNGLVERTEXATTRIBP2UIPROC glad_glVertexAttribP2ui = NULL;\nPFNGLVERTEXATTRIBP2UIVPROC glad_glVertexAttribP2uiv = NULL;\nPFNGLVERTEXATTRIBP3UIPROC glad_glVertexAttribP3ui = NULL;\nPFNGLVERTEXATTRIBP3UIVPROC glad_glVertexAttribP3uiv = NULL;\nPFNGLVERTEXATTRIBP4UIPROC glad_glVertexAttribP4ui = NULL;\nPFNGLVERTEXATTRIBP4UIVPROC glad_glVertexAttribP4uiv = NULL;\nPFNGLVERTEXATTRIBPOINTERPROC glad_glVertexAttribPointer = NULL;\nPFNGLVERTEXBINDINGDIVISORPROC glad_glVertexBindingDivisor = NULL;\nPFNGLVERTEXP2UIPROC glad_glVertexP2ui = NULL;\nPFNGLVERTEXP2UIVPROC glad_glVertexP2uiv = NULL;\nPFNGLVERTEXP3UIPROC glad_glVertexP3ui = NULL;\nPFNGLVERTEXP3UIVPROC glad_glVertexP3uiv = NULL;\nPFNGLVERTEXP4UIPROC glad_glVertexP4ui = NULL;\nPFNGLVERTEXP4UIVPROC glad_glVertexP4uiv = NULL;\nPFNGLVIEWPORTPROC glad_glViewport = NULL;\nPFNGLVIEWPORTARRAYVPROC glad_glViewportArrayv = NULL;\nPFNGLVIEWPORTINDEXEDFPROC glad_glViewportIndexedf = NULL;\nPFNGLVIEWPORTINDEXEDFVPROC glad_glViewportIndexedfv = NULL;\nPFNGLWAITSYNCPROC glad_glWaitSync = NULL;\nstatic void load_GL_VERSION_1_0(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_1_0)\n    return;\n  glad_glCullFace = (PFNGLCULLFACEPROC)load(\"glCullFace\");\n  glad_glFrontFace = (PFNGLFRONTFACEPROC)load(\"glFrontFace\");\n  glad_glHint = (PFNGLHINTPROC)load(\"glHint\");\n  glad_glLineWidth = (PFNGLLINEWIDTHPROC)load(\"glLineWidth\");\n  glad_glPointSize = (PFNGLPOINTSIZEPROC)load(\"glPointSize\");\n  glad_glPolygonMode = (PFNGLPOLYGONMODEPROC)load(\"glPolygonMode\");\n  glad_glScissor = (PFNGLSCISSORPROC)load(\"glScissor\");\n  glad_glTexParameterf = (PFNGLTEXPARAMETERFPROC)load(\"glTexParameterf\");\n  glad_glTexParameterfv = (PFNGLTEXPARAMETERFVPROC)load(\"glTexParameterfv\");\n  glad_glTexParameteri = (PFNGLTEXPARAMETERIPROC)load(\"glTexParameteri\");\n  glad_glTexParameteriv = (PFNGLTEXPARAMETERIVPROC)load(\"glTexParameteriv\");\n  glad_glTexImage1D = (PFNGLTEXIMAGE1DPROC)load(\"glTexImage1D\");\n  glad_glTexImage2D = (PFNGLTEXIMAGE2DPROC)load(\"glTexImage2D\");\n  glad_glDrawBuffer = (PFNGLDRAWBUFFERPROC)load(\"glDrawBuffer\");\n  glad_glClear = (PFNGLCLEARPROC)load(\"glClear\");\n  glad_glClearColor = (PFNGLCLEARCOLORPROC)load(\"glClearColor\");\n  glad_glClearStencil = (PFNGLCLEARSTENCILPROC)load(\"glClearStencil\");\n  glad_glClearDepth = (PFNGLCLEARDEPTHPROC)load(\"glClearDepth\");\n  glad_glStencilMask = (PFNGLSTENCILMASKPROC)load(\"glStencilMask\");\n  glad_glColorMask = (PFNGLCOLORMASKPROC)load(\"glColorMask\");\n  glad_glDepthMask = (PFNGLDEPTHMASKPROC)load(\"glDepthMask\");\n  glad_glDisable = (PFNGLDISABLEPROC)load(\"glDisable\");\n  glad_glEnable = (PFNGLENABLEPROC)load(\"glEnable\");\n  glad_glFinish = (PFNGLFINISHPROC)load(\"glFinish\");\n  glad_glFlush = (PFNGLFLUSHPROC)load(\"glFlush\");\n  glad_glBlendFunc = (PFNGLBLENDFUNCPROC)load(\"glBlendFunc\");\n  glad_glLogicOp = (PFNGLLOGICOPPROC)load(\"glLogicOp\");\n  glad_glStencilFunc = (PFNGLSTENCILFUNCPROC)load(\"glStencilFunc\");\n  glad_glStencilOp = (PFNGLSTENCILOPPROC)load(\"glStencilOp\");\n  glad_glDepthFunc = (PFNGLDEPTHFUNCPROC)load(\"glDepthFunc\");\n  glad_glPixelStoref = (PFNGLPIXELSTOREFPROC)load(\"glPixelStoref\");\n  glad_glPixelStorei = (PFNGLPIXELSTOREIPROC)load(\"glPixelStorei\");\n  glad_glReadBuffer = (PFNGLREADBUFFERPROC)load(\"glReadBuffer\");\n  glad_glReadPixels = (PFNGLREADPIXELSPROC)load(\"glReadPixels\");\n  glad_glGetBooleanv = (PFNGLGETBOOLEANVPROC)load(\"glGetBooleanv\");\n  glad_glGetDoublev = (PFNGLGETDOUBLEVPROC)load(\"glGetDoublev\");\n  glad_glGetError = (PFNGLGETERRORPROC)load(\"glGetError\");\n  glad_glGetFloatv = (PFNGLGETFLOATVPROC)load(\"glGetFloatv\");\n  glad_glGetIntegerv = (PFNGLGETINTEGERVPROC)load(\"glGetIntegerv\");\n  glad_glGetString = (PFNGLGETSTRINGPROC)load(\"glGetString\");\n  glad_glGetTexImage = (PFNGLGETTEXIMAGEPROC)load(\"glGetTexImage\");\n  glad_glGetTexParameterfv =\n      (PFNGLGETTEXPARAMETERFVPROC)load(\"glGetTexParameterfv\");\n  glad_glGetTexParameteriv =\n      (PFNGLGETTEXPARAMETERIVPROC)load(\"glGetTexParameteriv\");\n  glad_glGetTexLevelParameterfv =\n      (PFNGLGETTEXLEVELPARAMETERFVPROC)load(\"glGetTexLevelParameterfv\");\n  glad_glGetTexLevelParameteriv =\n      (PFNGLGETTEXLEVELPARAMETERIVPROC)load(\"glGetTexLevelParameteriv\");\n  glad_glIsEnabled = (PFNGLISENABLEDPROC)load(\"glIsEnabled\");\n  glad_glDepthRange = (PFNGLDEPTHRANGEPROC)load(\"glDepthRange\");\n  glad_glViewport = (PFNGLVIEWPORTPROC)load(\"glViewport\");\n}\nstatic void load_GL_VERSION_1_1(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_1_1)\n    return;\n  glad_glDrawArrays = (PFNGLDRAWARRAYSPROC)load(\"glDrawArrays\");\n  glad_glDrawElements = (PFNGLDRAWELEMENTSPROC)load(\"glDrawElements\");\n  glad_glPolygonOffset = (PFNGLPOLYGONOFFSETPROC)load(\"glPolygonOffset\");\n  glad_glCopyTexImage1D = (PFNGLCOPYTEXIMAGE1DPROC)load(\"glCopyTexImage1D\");\n  glad_glCopyTexImage2D = (PFNGLCOPYTEXIMAGE2DPROC)load(\"glCopyTexImage2D\");\n  glad_glCopyTexSubImage1D =\n      (PFNGLCOPYTEXSUBIMAGE1DPROC)load(\"glCopyTexSubImage1D\");\n  glad_glCopyTexSubImage2D =\n      (PFNGLCOPYTEXSUBIMAGE2DPROC)load(\"glCopyTexSubImage2D\");\n  glad_glTexSubImage1D = (PFNGLTEXSUBIMAGE1DPROC)load(\"glTexSubImage1D\");\n  glad_glTexSubImage2D = (PFNGLTEXSUBIMAGE2DPROC)load(\"glTexSubImage2D\");\n  glad_glBindTexture = (PFNGLBINDTEXTUREPROC)load(\"glBindTexture\");\n  glad_glDeleteTextures = (PFNGLDELETETEXTURESPROC)load(\"glDeleteTextures\");\n  glad_glGenTextures = (PFNGLGENTEXTURESPROC)load(\"glGenTextures\");\n  glad_glIsTexture = (PFNGLISTEXTUREPROC)load(\"glIsTexture\");\n}\nstatic void load_GL_VERSION_1_2(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_1_2)\n    return;\n  glad_glDrawRangeElements =\n      (PFNGLDRAWRANGEELEMENTSPROC)load(\"glDrawRangeElements\");\n  glad_glTexImage3D = (PFNGLTEXIMAGE3DPROC)load(\"glTexImage3D\");\n  glad_glTexSubImage3D = (PFNGLTEXSUBIMAGE3DPROC)load(\"glTexSubImage3D\");\n  glad_glCopyTexSubImage3D =\n      (PFNGLCOPYTEXSUBIMAGE3DPROC)load(\"glCopyTexSubImage3D\");\n}\nstatic void load_GL_VERSION_1_3(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_1_3)\n    return;\n  glad_glActiveTexture = (PFNGLACTIVETEXTUREPROC)load(\"glActiveTexture\");\n  glad_glSampleCoverage = (PFNGLSAMPLECOVERAGEPROC)load(\"glSampleCoverage\");\n  glad_glCompressedTexImage3D =\n      (PFNGLCOMPRESSEDTEXIMAGE3DPROC)load(\"glCompressedTexImage3D\");\n  glad_glCompressedTexImage2D =\n      (PFNGLCOMPRESSEDTEXIMAGE2DPROC)load(\"glCompressedTexImage2D\");\n  glad_glCompressedTexImage1D =\n      (PFNGLCOMPRESSEDTEXIMAGE1DPROC)load(\"glCompressedTexImage1D\");\n  glad_glCompressedTexSubImage3D =\n      (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)load(\"glCompressedTexSubImage3D\");\n  glad_glCompressedTexSubImage2D =\n      (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)load(\"glCompressedTexSubImage2D\");\n  glad_glCompressedTexSubImage1D =\n      (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)load(\"glCompressedTexSubImage1D\");\n  glad_glGetCompressedTexImage =\n      (PFNGLGETCOMPRESSEDTEXIMAGEPROC)load(\"glGetCompressedTexImage\");\n}\nstatic void load_GL_VERSION_1_4(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_1_4)\n    return;\n  glad_glBlendFuncSeparate =\n      (PFNGLBLENDFUNCSEPARATEPROC)load(\"glBlendFuncSeparate\");\n  glad_glMultiDrawArrays = (PFNGLMULTIDRAWARRAYSPROC)load(\"glMultiDrawArrays\");\n  glad_glMultiDrawElements =\n      (PFNGLMULTIDRAWELEMENTSPROC)load(\"glMultiDrawElements\");\n  glad_glPointParameterf = (PFNGLPOINTPARAMETERFPROC)load(\"glPointParameterf\");\n  glad_glPointParameterfv =\n      (PFNGLPOINTPARAMETERFVPROC)load(\"glPointParameterfv\");\n  glad_glPointParameteri = (PFNGLPOINTPARAMETERIPROC)load(\"glPointParameteri\");\n  glad_glPointParameteriv =\n      (PFNGLPOINTPARAMETERIVPROC)load(\"glPointParameteriv\");\n  glad_glBlendColor = (PFNGLBLENDCOLORPROC)load(\"glBlendColor\");\n  glad_glBlendEquation = (PFNGLBLENDEQUATIONPROC)load(\"glBlendEquation\");\n}\nstatic void load_GL_VERSION_1_5(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_1_5)\n    return;\n  glad_glGenQueries = (PFNGLGENQUERIESPROC)load(\"glGenQueries\");\n  glad_glDeleteQueries = (PFNGLDELETEQUERIESPROC)load(\"glDeleteQueries\");\n  glad_glIsQuery = (PFNGLISQUERYPROC)load(\"glIsQuery\");\n  glad_glBeginQuery = (PFNGLBEGINQUERYPROC)load(\"glBeginQuery\");\n  glad_glEndQuery = (PFNGLENDQUERYPROC)load(\"glEndQuery\");\n  glad_glGetQueryiv = (PFNGLGETQUERYIVPROC)load(\"glGetQueryiv\");\n  glad_glGetQueryObjectiv =\n      (PFNGLGETQUERYOBJECTIVPROC)load(\"glGetQueryObjectiv\");\n  glad_glGetQueryObjectuiv =\n      (PFNGLGETQUERYOBJECTUIVPROC)load(\"glGetQueryObjectuiv\");\n  glad_glBindBuffer = (PFNGLBINDBUFFERPROC)load(\"glBindBuffer\");\n  glad_glDeleteBuffers = (PFNGLDELETEBUFFERSPROC)load(\"glDeleteBuffers\");\n  glad_glGenBuffers = (PFNGLGENBUFFERSPROC)load(\"glGenBuffers\");\n  glad_glIsBuffer = (PFNGLISBUFFERPROC)load(\"glIsBuffer\");\n  glad_glBufferData = (PFNGLBUFFERDATAPROC)load(\"glBufferData\");\n  glad_glBufferSubData = (PFNGLBUFFERSUBDATAPROC)load(\"glBufferSubData\");\n  glad_glGetBufferSubData =\n      (PFNGLGETBUFFERSUBDATAPROC)load(\"glGetBufferSubData\");\n  glad_glMapBuffer = (PFNGLMAPBUFFERPROC)load(\"glMapBuffer\");\n  glad_glUnmapBuffer = (PFNGLUNMAPBUFFERPROC)load(\"glUnmapBuffer\");\n  glad_glGetBufferParameteriv =\n      (PFNGLGETBUFFERPARAMETERIVPROC)load(\"glGetBufferParameteriv\");\n  glad_glGetBufferPointerv =\n      (PFNGLGETBUFFERPOINTERVPROC)load(\"glGetBufferPointerv\");\n}\nstatic void load_GL_VERSION_2_0(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_2_0)\n    return;\n  glad_glBlendEquationSeparate =\n      (PFNGLBLENDEQUATIONSEPARATEPROC)load(\"glBlendEquationSeparate\");\n  glad_glDrawBuffers = (PFNGLDRAWBUFFERSPROC)load(\"glDrawBuffers\");\n  glad_glStencilOpSeparate =\n      (PFNGLSTENCILOPSEPARATEPROC)load(\"glStencilOpSeparate\");\n  glad_glStencilFuncSeparate =\n      (PFNGLSTENCILFUNCSEPARATEPROC)load(\"glStencilFuncSeparate\");\n  glad_glStencilMaskSeparate =\n      (PFNGLSTENCILMASKSEPARATEPROC)load(\"glStencilMaskSeparate\");\n  glad_glAttachShader = (PFNGLATTACHSHADERPROC)load(\"glAttachShader\");\n  glad_glBindAttribLocation =\n      (PFNGLBINDATTRIBLOCATIONPROC)load(\"glBindAttribLocation\");\n  glad_glCompileShader = (PFNGLCOMPILESHADERPROC)load(\"glCompileShader\");\n  glad_glCreateProgram = (PFNGLCREATEPROGRAMPROC)load(\"glCreateProgram\");\n  glad_glCreateShader = (PFNGLCREATESHADERPROC)load(\"glCreateShader\");\n  glad_glDeleteProgram = (PFNGLDELETEPROGRAMPROC)load(\"glDeleteProgram\");\n  glad_glDeleteShader = (PFNGLDELETESHADERPROC)load(\"glDeleteShader\");\n  glad_glDetachShader = (PFNGLDETACHSHADERPROC)load(\"glDetachShader\");\n  glad_glDisableVertexAttribArray =\n      (PFNGLDISABLEVERTEXATTRIBARRAYPROC)load(\"glDisableVertexAttribArray\");\n  glad_glEnableVertexAttribArray =\n      (PFNGLENABLEVERTEXATTRIBARRAYPROC)load(\"glEnableVertexAttribArray\");\n  glad_glGetActiveAttrib = (PFNGLGETACTIVEATTRIBPROC)load(\"glGetActiveAttrib\");\n  glad_glGetActiveUniform =\n      (PFNGLGETACTIVEUNIFORMPROC)load(\"glGetActiveUniform\");\n  glad_glGetAttachedShaders =\n      (PFNGLGETATTACHEDSHADERSPROC)load(\"glGetAttachedShaders\");\n  glad_glGetAttribLocation =\n      (PFNGLGETATTRIBLOCATIONPROC)load(\"glGetAttribLocation\");\n  glad_glGetProgramiv = (PFNGLGETPROGRAMIVPROC)load(\"glGetProgramiv\");\n  glad_glGetProgramInfoLog =\n      (PFNGLGETPROGRAMINFOLOGPROC)load(\"glGetProgramInfoLog\");\n  glad_glGetShaderiv = (PFNGLGETSHADERIVPROC)load(\"glGetShaderiv\");\n  glad_glGetShaderInfoLog =\n      (PFNGLGETSHADERINFOLOGPROC)load(\"glGetShaderInfoLog\");\n  glad_glGetShaderSource = (PFNGLGETSHADERSOURCEPROC)load(\"glGetShaderSource\");\n  glad_glGetUniformLocation =\n      (PFNGLGETUNIFORMLOCATIONPROC)load(\"glGetUniformLocation\");\n  glad_glGetUniformfv = (PFNGLGETUNIFORMFVPROC)load(\"glGetUniformfv\");\n  glad_glGetUniformiv = (PFNGLGETUNIFORMIVPROC)load(\"glGetUniformiv\");\n  glad_glGetVertexAttribdv =\n      (PFNGLGETVERTEXATTRIBDVPROC)load(\"glGetVertexAttribdv\");\n  glad_glGetVertexAttribfv =\n      (PFNGLGETVERTEXATTRIBFVPROC)load(\"glGetVertexAttribfv\");\n  glad_glGetVertexAttribiv =\n      (PFNGLGETVERTEXATTRIBIVPROC)load(\"glGetVertexAttribiv\");\n  glad_glGetVertexAttribPointerv =\n      (PFNGLGETVERTEXATTRIBPOINTERVPROC)load(\"glGetVertexAttribPointerv\");\n  glad_glIsProgram = (PFNGLISPROGRAMPROC)load(\"glIsProgram\");\n  glad_glIsShader = (PFNGLISSHADERPROC)load(\"glIsShader\");\n  glad_glLinkProgram = (PFNGLLINKPROGRAMPROC)load(\"glLinkProgram\");\n  glad_glShaderSource = (PFNGLSHADERSOURCEPROC)load(\"glShaderSource\");\n  glad_glUseProgram = (PFNGLUSEPROGRAMPROC)load(\"glUseProgram\");\n  glad_glUniform1f = (PFNGLUNIFORM1FPROC)load(\"glUniform1f\");\n  glad_glUniform2f = (PFNGLUNIFORM2FPROC)load(\"glUniform2f\");\n  glad_glUniform3f = (PFNGLUNIFORM3FPROC)load(\"glUniform3f\");\n  glad_glUniform4f = (PFNGLUNIFORM4FPROC)load(\"glUniform4f\");\n  glad_glUniform1i = (PFNGLUNIFORM1IPROC)load(\"glUniform1i\");\n  glad_glUniform2i = (PFNGLUNIFORM2IPROC)load(\"glUniform2i\");\n  glad_glUniform3i = (PFNGLUNIFORM3IPROC)load(\"glUniform3i\");\n  glad_glUniform4i = (PFNGLUNIFORM4IPROC)load(\"glUniform4i\");\n  glad_glUniform1fv = (PFNGLUNIFORM1FVPROC)load(\"glUniform1fv\");\n  glad_glUniform2fv = (PFNGLUNIFORM2FVPROC)load(\"glUniform2fv\");\n  glad_glUniform3fv = (PFNGLUNIFORM3FVPROC)load(\"glUniform3fv\");\n  glad_glUniform4fv = (PFNGLUNIFORM4FVPROC)load(\"glUniform4fv\");\n  glad_glUniform1iv = (PFNGLUNIFORM1IVPROC)load(\"glUniform1iv\");\n  glad_glUniform2iv = (PFNGLUNIFORM2IVPROC)load(\"glUniform2iv\");\n  glad_glUniform3iv = (PFNGLUNIFORM3IVPROC)load(\"glUniform3iv\");\n  glad_glUniform4iv = (PFNGLUNIFORM4IVPROC)load(\"glUniform4iv\");\n  glad_glUniformMatrix2fv =\n      (PFNGLUNIFORMMATRIX2FVPROC)load(\"glUniformMatrix2fv\");\n  glad_glUniformMatrix3fv =\n      (PFNGLUNIFORMMATRIX3FVPROC)load(\"glUniformMatrix3fv\");\n  glad_glUniformMatrix4fv =\n      (PFNGLUNIFORMMATRIX4FVPROC)load(\"glUniformMatrix4fv\");\n  glad_glValidateProgram = (PFNGLVALIDATEPROGRAMPROC)load(\"glValidateProgram\");\n  glad_glVertexAttrib1d = (PFNGLVERTEXATTRIB1DPROC)load(\"glVertexAttrib1d\");\n  glad_glVertexAttrib1dv = (PFNGLVERTEXATTRIB1DVPROC)load(\"glVertexAttrib1dv\");\n  glad_glVertexAttrib1f = (PFNGLVERTEXATTRIB1FPROC)load(\"glVertexAttrib1f\");\n  glad_glVertexAttrib1fv = (PFNGLVERTEXATTRIB1FVPROC)load(\"glVertexAttrib1fv\");\n  glad_glVertexAttrib1s = (PFNGLVERTEXATTRIB1SPROC)load(\"glVertexAttrib1s\");\n  glad_glVertexAttrib1sv = (PFNGLVERTEXATTRIB1SVPROC)load(\"glVertexAttrib1sv\");\n  glad_glVertexAttrib2d = (PFNGLVERTEXATTRIB2DPROC)load(\"glVertexAttrib2d\");\n  glad_glVertexAttrib2dv = (PFNGLVERTEXATTRIB2DVPROC)load(\"glVertexAttrib2dv\");\n  glad_glVertexAttrib2f = (PFNGLVERTEXATTRIB2FPROC)load(\"glVertexAttrib2f\");\n  glad_glVertexAttrib2fv = (PFNGLVERTEXATTRIB2FVPROC)load(\"glVertexAttrib2fv\");\n  glad_glVertexAttrib2s = (PFNGLVERTEXATTRIB2SPROC)load(\"glVertexAttrib2s\");\n  glad_glVertexAttrib2sv = (PFNGLVERTEXATTRIB2SVPROC)load(\"glVertexAttrib2sv\");\n  glad_glVertexAttrib3d = (PFNGLVERTEXATTRIB3DPROC)load(\"glVertexAttrib3d\");\n  glad_glVertexAttrib3dv = (PFNGLVERTEXATTRIB3DVPROC)load(\"glVertexAttrib3dv\");\n  glad_glVertexAttrib3f = (PFNGLVERTEXATTRIB3FPROC)load(\"glVertexAttrib3f\");\n  glad_glVertexAttrib3fv = (PFNGLVERTEXATTRIB3FVPROC)load(\"glVertexAttrib3fv\");\n  glad_glVertexAttrib3s = (PFNGLVERTEXATTRIB3SPROC)load(\"glVertexAttrib3s\");\n  glad_glVertexAttrib3sv = (PFNGLVERTEXATTRIB3SVPROC)load(\"glVertexAttrib3sv\");\n  glad_glVertexAttrib4Nbv =\n      (PFNGLVERTEXATTRIB4NBVPROC)load(\"glVertexAttrib4Nbv\");\n  glad_glVertexAttrib4Niv =\n      (PFNGLVERTEXATTRIB4NIVPROC)load(\"glVertexAttrib4Niv\");\n  glad_glVertexAttrib4Nsv =\n      (PFNGLVERTEXATTRIB4NSVPROC)load(\"glVertexAttrib4Nsv\");\n  glad_glVertexAttrib4Nub =\n      (PFNGLVERTEXATTRIB4NUBPROC)load(\"glVertexAttrib4Nub\");\n  glad_glVertexAttrib4Nubv =\n      (PFNGLVERTEXATTRIB4NUBVPROC)load(\"glVertexAttrib4Nubv\");\n  glad_glVertexAttrib4Nuiv =\n      (PFNGLVERTEXATTRIB4NUIVPROC)load(\"glVertexAttrib4Nuiv\");\n  glad_glVertexAttrib4Nusv =\n      (PFNGLVERTEXATTRIB4NUSVPROC)load(\"glVertexAttrib4Nusv\");\n  glad_glVertexAttrib4bv = (PFNGLVERTEXATTRIB4BVPROC)load(\"glVertexAttrib4bv\");\n  glad_glVertexAttrib4d = (PFNGLVERTEXATTRIB4DPROC)load(\"glVertexAttrib4d\");\n  glad_glVertexAttrib4dv = (PFNGLVERTEXATTRIB4DVPROC)load(\"glVertexAttrib4dv\");\n  glad_glVertexAttrib4f = (PFNGLVERTEXATTRIB4FPROC)load(\"glVertexAttrib4f\");\n  glad_glVertexAttrib4fv = (PFNGLVERTEXATTRIB4FVPROC)load(\"glVertexAttrib4fv\");\n  glad_glVertexAttrib4iv = (PFNGLVERTEXATTRIB4IVPROC)load(\"glVertexAttrib4iv\");\n  glad_glVertexAttrib4s = (PFNGLVERTEXATTRIB4SPROC)load(\"glVertexAttrib4s\");\n  glad_glVertexAttrib4sv = (PFNGLVERTEXATTRIB4SVPROC)load(\"glVertexAttrib4sv\");\n  glad_glVertexAttrib4ubv =\n      (PFNGLVERTEXATTRIB4UBVPROC)load(\"glVertexAttrib4ubv\");\n  glad_glVertexAttrib4uiv =\n      (PFNGLVERTEXATTRIB4UIVPROC)load(\"glVertexAttrib4uiv\");\n  glad_glVertexAttrib4usv =\n      (PFNGLVERTEXATTRIB4USVPROC)load(\"glVertexAttrib4usv\");\n  glad_glVertexAttribPointer =\n      (PFNGLVERTEXATTRIBPOINTERPROC)load(\"glVertexAttribPointer\");\n}\nstatic void load_GL_VERSION_2_1(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_2_1)\n    return;\n  glad_glUniformMatrix2x3fv =\n      (PFNGLUNIFORMMATRIX2X3FVPROC)load(\"glUniformMatrix2x3fv\");\n  glad_glUniformMatrix3x2fv =\n      (PFNGLUNIFORMMATRIX3X2FVPROC)load(\"glUniformMatrix3x2fv\");\n  glad_glUniformMatrix2x4fv =\n      (PFNGLUNIFORMMATRIX2X4FVPROC)load(\"glUniformMatrix2x4fv\");\n  glad_glUniformMatrix4x2fv =\n      (PFNGLUNIFORMMATRIX4X2FVPROC)load(\"glUniformMatrix4x2fv\");\n  glad_glUniformMatrix3x4fv =\n      (PFNGLUNIFORMMATRIX3X4FVPROC)load(\"glUniformMatrix3x4fv\");\n  glad_glUniformMatrix4x3fv =\n      (PFNGLUNIFORMMATRIX4X3FVPROC)load(\"glUniformMatrix4x3fv\");\n}\nstatic void load_GL_VERSION_3_0(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_3_0)\n    return;\n  glad_glColorMaski = (PFNGLCOLORMASKIPROC)load(\"glColorMaski\");\n  glad_glGetBooleani_v = (PFNGLGETBOOLEANI_VPROC)load(\"glGetBooleani_v\");\n  glad_glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)load(\"glGetIntegeri_v\");\n  glad_glEnablei = (PFNGLENABLEIPROC)load(\"glEnablei\");\n  glad_glDisablei = (PFNGLDISABLEIPROC)load(\"glDisablei\");\n  glad_glIsEnabledi = (PFNGLISENABLEDIPROC)load(\"glIsEnabledi\");\n  glad_glBeginTransformFeedback =\n      (PFNGLBEGINTRANSFORMFEEDBACKPROC)load(\"glBeginTransformFeedback\");\n  glad_glEndTransformFeedback =\n      (PFNGLENDTRANSFORMFEEDBACKPROC)load(\"glEndTransformFeedback\");\n  glad_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)load(\"glBindBufferRange\");\n  glad_glBindBufferBase = (PFNGLBINDBUFFERBASEPROC)load(\"glBindBufferBase\");\n  glad_glTransformFeedbackVaryings =\n      (PFNGLTRANSFORMFEEDBACKVARYINGSPROC)load(\"glTransformFeedbackVaryings\");\n  glad_glGetTransformFeedbackVarying =\n      (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)load(\n          \"glGetTransformFeedbackVarying\");\n  glad_glClampColor = (PFNGLCLAMPCOLORPROC)load(\"glClampColor\");\n  glad_glBeginConditionalRender =\n      (PFNGLBEGINCONDITIONALRENDERPROC)load(\"glBeginConditionalRender\");\n  glad_glEndConditionalRender =\n      (PFNGLENDCONDITIONALRENDERPROC)load(\"glEndConditionalRender\");\n  glad_glVertexAttribIPointer =\n      (PFNGLVERTEXATTRIBIPOINTERPROC)load(\"glVertexAttribIPointer\");\n  glad_glGetVertexAttribIiv =\n      (PFNGLGETVERTEXATTRIBIIVPROC)load(\"glGetVertexAttribIiv\");\n  glad_glGetVertexAttribIuiv =\n      (PFNGLGETVERTEXATTRIBIUIVPROC)load(\"glGetVertexAttribIuiv\");\n  glad_glVertexAttribI1i = (PFNGLVERTEXATTRIBI1IPROC)load(\"glVertexAttribI1i\");\n  glad_glVertexAttribI2i = (PFNGLVERTEXATTRIBI2IPROC)load(\"glVertexAttribI2i\");\n  glad_glVertexAttribI3i = (PFNGLVERTEXATTRIBI3IPROC)load(\"glVertexAttribI3i\");\n  glad_glVertexAttribI4i = (PFNGLVERTEXATTRIBI4IPROC)load(\"glVertexAttribI4i\");\n  glad_glVertexAttribI1ui =\n      (PFNGLVERTEXATTRIBI1UIPROC)load(\"glVertexAttribI1ui\");\n  glad_glVertexAttribI2ui =\n      (PFNGLVERTEXATTRIBI2UIPROC)load(\"glVertexAttribI2ui\");\n  glad_glVertexAttribI3ui =\n      (PFNGLVERTEXATTRIBI3UIPROC)load(\"glVertexAttribI3ui\");\n  glad_glVertexAttribI4ui =\n      (PFNGLVERTEXATTRIBI4UIPROC)load(\"glVertexAttribI4ui\");\n  glad_glVertexAttribI1iv =\n      (PFNGLVERTEXATTRIBI1IVPROC)load(\"glVertexAttribI1iv\");\n  glad_glVertexAttribI2iv =\n      (PFNGLVERTEXATTRIBI2IVPROC)load(\"glVertexAttribI2iv\");\n  glad_glVertexAttribI3iv =\n      (PFNGLVERTEXATTRIBI3IVPROC)load(\"glVertexAttribI3iv\");\n  glad_glVertexAttribI4iv =\n      (PFNGLVERTEXATTRIBI4IVPROC)load(\"glVertexAttribI4iv\");\n  glad_glVertexAttribI1uiv =\n      (PFNGLVERTEXATTRIBI1UIVPROC)load(\"glVertexAttribI1uiv\");\n  glad_glVertexAttribI2uiv =\n      (PFNGLVERTEXATTRIBI2UIVPROC)load(\"glVertexAttribI2uiv\");\n  glad_glVertexAttribI3uiv =\n      (PFNGLVERTEXATTRIBI3UIVPROC)load(\"glVertexAttribI3uiv\");\n  glad_glVertexAttribI4uiv =\n      (PFNGLVERTEXATTRIBI4UIVPROC)load(\"glVertexAttribI4uiv\");\n  glad_glVertexAttribI4bv =\n      (PFNGLVERTEXATTRIBI4BVPROC)load(\"glVertexAttribI4bv\");\n  glad_glVertexAttribI4sv =\n      (PFNGLVERTEXATTRIBI4SVPROC)load(\"glVertexAttribI4sv\");\n  glad_glVertexAttribI4ubv =\n      (PFNGLVERTEXATTRIBI4UBVPROC)load(\"glVertexAttribI4ubv\");\n  glad_glVertexAttribI4usv =\n      (PFNGLVERTEXATTRIBI4USVPROC)load(\"glVertexAttribI4usv\");\n  glad_glGetUniformuiv = (PFNGLGETUNIFORMUIVPROC)load(\"glGetUniformuiv\");\n  glad_glBindFragDataLocation =\n      (PFNGLBINDFRAGDATALOCATIONPROC)load(\"glBindFragDataLocation\");\n  glad_glGetFragDataLocation =\n      (PFNGLGETFRAGDATALOCATIONPROC)load(\"glGetFragDataLocation\");\n  glad_glUniform1ui = (PFNGLUNIFORM1UIPROC)load(\"glUniform1ui\");\n  glad_glUniform2ui = (PFNGLUNIFORM2UIPROC)load(\"glUniform2ui\");\n  glad_glUniform3ui = (PFNGLUNIFORM3UIPROC)load(\"glUniform3ui\");\n  glad_glUniform4ui = (PFNGLUNIFORM4UIPROC)load(\"glUniform4ui\");\n  glad_glUniform1uiv = (PFNGLUNIFORM1UIVPROC)load(\"glUniform1uiv\");\n  glad_glUniform2uiv = (PFNGLUNIFORM2UIVPROC)load(\"glUniform2uiv\");\n  glad_glUniform3uiv = (PFNGLUNIFORM3UIVPROC)load(\"glUniform3uiv\");\n  glad_glUniform4uiv = (PFNGLUNIFORM4UIVPROC)load(\"glUniform4uiv\");\n  glad_glTexParameterIiv = (PFNGLTEXPARAMETERIIVPROC)load(\"glTexParameterIiv\");\n  glad_glTexParameterIuiv =\n      (PFNGLTEXPARAMETERIUIVPROC)load(\"glTexParameterIuiv\");\n  glad_glGetTexParameterIiv =\n      (PFNGLGETTEXPARAMETERIIVPROC)load(\"glGetTexParameterIiv\");\n  glad_glGetTexParameterIuiv =\n      (PFNGLGETTEXPARAMETERIUIVPROC)load(\"glGetTexParameterIuiv\");\n  glad_glClearBufferiv = (PFNGLCLEARBUFFERIVPROC)load(\"glClearBufferiv\");\n  glad_glClearBufferuiv = (PFNGLCLEARBUFFERUIVPROC)load(\"glClearBufferuiv\");\n  glad_glClearBufferfv = (PFNGLCLEARBUFFERFVPROC)load(\"glClearBufferfv\");\n  glad_glClearBufferfi = (PFNGLCLEARBUFFERFIPROC)load(\"glClearBufferfi\");\n  glad_glGetStringi = (PFNGLGETSTRINGIPROC)load(\"glGetStringi\");\n  glad_glIsRenderbuffer = (PFNGLISRENDERBUFFERPROC)load(\"glIsRenderbuffer\");\n  glad_glBindRenderbuffer =\n      (PFNGLBINDRENDERBUFFERPROC)load(\"glBindRenderbuffer\");\n  glad_glDeleteRenderbuffers =\n      (PFNGLDELETERENDERBUFFERSPROC)load(\"glDeleteRenderbuffers\");\n  glad_glGenRenderbuffers =\n      (PFNGLGENRENDERBUFFERSPROC)load(\"glGenRenderbuffers\");\n  glad_glRenderbufferStorage =\n      (PFNGLRENDERBUFFERSTORAGEPROC)load(\"glRenderbufferStorage\");\n  glad_glGetRenderbufferParameteriv =\n      (PFNGLGETRENDERBUFFERPARAMETERIVPROC)load(\"glGetRenderbufferParameteriv\");\n  glad_glIsFramebuffer = (PFNGLISFRAMEBUFFERPROC)load(\"glIsFramebuffer\");\n  glad_glBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC)load(\"glBindFramebuffer\");\n  glad_glDeleteFramebuffers =\n      (PFNGLDELETEFRAMEBUFFERSPROC)load(\"glDeleteFramebuffers\");\n  glad_glGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC)load(\"glGenFramebuffers\");\n  glad_glCheckFramebufferStatus =\n      (PFNGLCHECKFRAMEBUFFERSTATUSPROC)load(\"glCheckFramebufferStatus\");\n  glad_glFramebufferTexture1D =\n      (PFNGLFRAMEBUFFERTEXTURE1DPROC)load(\"glFramebufferTexture1D\");\n  glad_glFramebufferTexture2D =\n      (PFNGLFRAMEBUFFERTEXTURE2DPROC)load(\"glFramebufferTexture2D\");\n  glad_glFramebufferTexture3D =\n      (PFNGLFRAMEBUFFERTEXTURE3DPROC)load(\"glFramebufferTexture3D\");\n  glad_glFramebufferRenderbuffer =\n      (PFNGLFRAMEBUFFERRENDERBUFFERPROC)load(\"glFramebufferRenderbuffer\");\n  glad_glGetFramebufferAttachmentParameteriv =\n      (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)load(\n          \"glGetFramebufferAttachmentParameteriv\");\n  glad_glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC)load(\"glGenerateMipmap\");\n  glad_glBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC)load(\"glBlitFramebuffer\");\n  glad_glRenderbufferStorageMultisample =\n      (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)load(\n          \"glRenderbufferStorageMultisample\");\n  glad_glFramebufferTextureLayer =\n      (PFNGLFRAMEBUFFERTEXTURELAYERPROC)load(\"glFramebufferTextureLayer\");\n  glad_glMapBufferRange = (PFNGLMAPBUFFERRANGEPROC)load(\"glMapBufferRange\");\n  glad_glFlushMappedBufferRange =\n      (PFNGLFLUSHMAPPEDBUFFERRANGEPROC)load(\"glFlushMappedBufferRange\");\n  glad_glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC)load(\"glBindVertexArray\");\n  glad_glDeleteVertexArrays =\n      (PFNGLDELETEVERTEXARRAYSPROC)load(\"glDeleteVertexArrays\");\n  glad_glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC)load(\"glGenVertexArrays\");\n  glad_glIsVertexArray = (PFNGLISVERTEXARRAYPROC)load(\"glIsVertexArray\");\n}\nstatic void load_GL_VERSION_3_1(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_3_1)\n    return;\n  glad_glDrawArraysInstanced =\n      (PFNGLDRAWARRAYSINSTANCEDPROC)load(\"glDrawArraysInstanced\");\n  glad_glDrawElementsInstanced =\n      (PFNGLDRAWELEMENTSINSTANCEDPROC)load(\"glDrawElementsInstanced\");\n  glad_glTexBuffer = (PFNGLTEXBUFFERPROC)load(\"glTexBuffer\");\n  glad_glPrimitiveRestartIndex =\n      (PFNGLPRIMITIVERESTARTINDEXPROC)load(\"glPrimitiveRestartIndex\");\n  glad_glCopyBufferSubData =\n      (PFNGLCOPYBUFFERSUBDATAPROC)load(\"glCopyBufferSubData\");\n  glad_glGetUniformIndices =\n      (PFNGLGETUNIFORMINDICESPROC)load(\"glGetUniformIndices\");\n  glad_glGetActiveUniformsiv =\n      (PFNGLGETACTIVEUNIFORMSIVPROC)load(\"glGetActiveUniformsiv\");\n  glad_glGetActiveUniformName =\n      (PFNGLGETACTIVEUNIFORMNAMEPROC)load(\"glGetActiveUniformName\");\n  glad_glGetUniformBlockIndex =\n      (PFNGLGETUNIFORMBLOCKINDEXPROC)load(\"glGetUniformBlockIndex\");\n  glad_glGetActiveUniformBlockiv =\n      (PFNGLGETACTIVEUNIFORMBLOCKIVPROC)load(\"glGetActiveUniformBlockiv\");\n  glad_glGetActiveUniformBlockName =\n      (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)load(\"glGetActiveUniformBlockName\");\n  glad_glUniformBlockBinding =\n      (PFNGLUNIFORMBLOCKBINDINGPROC)load(\"glUniformBlockBinding\");\n  glad_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)load(\"glBindBufferRange\");\n  glad_glBindBufferBase = (PFNGLBINDBUFFERBASEPROC)load(\"glBindBufferBase\");\n  glad_glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)load(\"glGetIntegeri_v\");\n}\nstatic void load_GL_VERSION_3_2(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_3_2)\n    return;\n  glad_glDrawElementsBaseVertex =\n      (PFNGLDRAWELEMENTSBASEVERTEXPROC)load(\"glDrawElementsBaseVertex\");\n  glad_glDrawRangeElementsBaseVertex =\n      (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)load(\n          \"glDrawRangeElementsBaseVertex\");\n  glad_glDrawElementsInstancedBaseVertex =\n      (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)load(\n          \"glDrawElementsInstancedBaseVertex\");\n  glad_glMultiDrawElementsBaseVertex =\n      (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)load(\n          \"glMultiDrawElementsBaseVertex\");\n  glad_glProvokingVertex = (PFNGLPROVOKINGVERTEXPROC)load(\"glProvokingVertex\");\n  glad_glFenceSync = (PFNGLFENCESYNCPROC)load(\"glFenceSync\");\n  glad_glIsSync = (PFNGLISSYNCPROC)load(\"glIsSync\");\n  glad_glDeleteSync = (PFNGLDELETESYNCPROC)load(\"glDeleteSync\");\n  glad_glClientWaitSync = (PFNGLCLIENTWAITSYNCPROC)load(\"glClientWaitSync\");\n  glad_glWaitSync = (PFNGLWAITSYNCPROC)load(\"glWaitSync\");\n  glad_glGetInteger64v = (PFNGLGETINTEGER64VPROC)load(\"glGetInteger64v\");\n  glad_glGetSynciv = (PFNGLGETSYNCIVPROC)load(\"glGetSynciv\");\n  glad_glGetInteger64i_v = (PFNGLGETINTEGER64I_VPROC)load(\"glGetInteger64i_v\");\n  glad_glGetBufferParameteri64v =\n      (PFNGLGETBUFFERPARAMETERI64VPROC)load(\"glGetBufferParameteri64v\");\n  glad_glFramebufferTexture =\n      (PFNGLFRAMEBUFFERTEXTUREPROC)load(\"glFramebufferTexture\");\n  glad_glTexImage2DMultisample =\n      (PFNGLTEXIMAGE2DMULTISAMPLEPROC)load(\"glTexImage2DMultisample\");\n  glad_glTexImage3DMultisample =\n      (PFNGLTEXIMAGE3DMULTISAMPLEPROC)load(\"glTexImage3DMultisample\");\n  glad_glGetMultisamplefv =\n      (PFNGLGETMULTISAMPLEFVPROC)load(\"glGetMultisamplefv\");\n  glad_glSampleMaski = (PFNGLSAMPLEMASKIPROC)load(\"glSampleMaski\");\n}\nstatic void load_GL_VERSION_3_3(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_3_3)\n    return;\n  glad_glBindFragDataLocationIndexed =\n      (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)load(\n          \"glBindFragDataLocationIndexed\");\n  glad_glGetFragDataIndex =\n      (PFNGLGETFRAGDATAINDEXPROC)load(\"glGetFragDataIndex\");\n  glad_glGenSamplers = (PFNGLGENSAMPLERSPROC)load(\"glGenSamplers\");\n  glad_glDeleteSamplers = (PFNGLDELETESAMPLERSPROC)load(\"glDeleteSamplers\");\n  glad_glIsSampler = (PFNGLISSAMPLERPROC)load(\"glIsSampler\");\n  glad_glBindSampler = (PFNGLBINDSAMPLERPROC)load(\"glBindSampler\");\n  glad_glSamplerParameteri =\n      (PFNGLSAMPLERPARAMETERIPROC)load(\"glSamplerParameteri\");\n  glad_glSamplerParameteriv =\n      (PFNGLSAMPLERPARAMETERIVPROC)load(\"glSamplerParameteriv\");\n  glad_glSamplerParameterf =\n      (PFNGLSAMPLERPARAMETERFPROC)load(\"glSamplerParameterf\");\n  glad_glSamplerParameterfv =\n      (PFNGLSAMPLERPARAMETERFVPROC)load(\"glSamplerParameterfv\");\n  glad_glSamplerParameterIiv =\n      (PFNGLSAMPLERPARAMETERIIVPROC)load(\"glSamplerParameterIiv\");\n  glad_glSamplerParameterIuiv =\n      (PFNGLSAMPLERPARAMETERIUIVPROC)load(\"glSamplerParameterIuiv\");\n  glad_glGetSamplerParameteriv =\n      (PFNGLGETSAMPLERPARAMETERIVPROC)load(\"glGetSamplerParameteriv\");\n  glad_glGetSamplerParameterIiv =\n      (PFNGLGETSAMPLERPARAMETERIIVPROC)load(\"glGetSamplerParameterIiv\");\n  glad_glGetSamplerParameterfv =\n      (PFNGLGETSAMPLERPARAMETERFVPROC)load(\"glGetSamplerParameterfv\");\n  glad_glGetSamplerParameterIuiv =\n      (PFNGLGETSAMPLERPARAMETERIUIVPROC)load(\"glGetSamplerParameterIuiv\");\n  glad_glQueryCounter = (PFNGLQUERYCOUNTERPROC)load(\"glQueryCounter\");\n  glad_glGetQueryObjecti64v =\n      (PFNGLGETQUERYOBJECTI64VPROC)load(\"glGetQueryObjecti64v\");\n  glad_glGetQueryObjectui64v =\n      (PFNGLGETQUERYOBJECTUI64VPROC)load(\"glGetQueryObjectui64v\");\n  glad_glVertexAttribDivisor =\n      (PFNGLVERTEXATTRIBDIVISORPROC)load(\"glVertexAttribDivisor\");\n  glad_glVertexAttribP1ui =\n      (PFNGLVERTEXATTRIBP1UIPROC)load(\"glVertexAttribP1ui\");\n  glad_glVertexAttribP1uiv =\n      (PFNGLVERTEXATTRIBP1UIVPROC)load(\"glVertexAttribP1uiv\");\n  glad_glVertexAttribP2ui =\n      (PFNGLVERTEXATTRIBP2UIPROC)load(\"glVertexAttribP2ui\");\n  glad_glVertexAttribP2uiv =\n      (PFNGLVERTEXATTRIBP2UIVPROC)load(\"glVertexAttribP2uiv\");\n  glad_glVertexAttribP3ui =\n      (PFNGLVERTEXATTRIBP3UIPROC)load(\"glVertexAttribP3ui\");\n  glad_glVertexAttribP3uiv =\n      (PFNGLVERTEXATTRIBP3UIVPROC)load(\"glVertexAttribP3uiv\");\n  glad_glVertexAttribP4ui =\n      (PFNGLVERTEXATTRIBP4UIPROC)load(\"glVertexAttribP4ui\");\n  glad_glVertexAttribP4uiv =\n      (PFNGLVERTEXATTRIBP4UIVPROC)load(\"glVertexAttribP4uiv\");\n  glad_glVertexP2ui = (PFNGLVERTEXP2UIPROC)load(\"glVertexP2ui\");\n  glad_glVertexP2uiv = (PFNGLVERTEXP2UIVPROC)load(\"glVertexP2uiv\");\n  glad_glVertexP3ui = (PFNGLVERTEXP3UIPROC)load(\"glVertexP3ui\");\n  glad_glVertexP3uiv = (PFNGLVERTEXP3UIVPROC)load(\"glVertexP3uiv\");\n  glad_glVertexP4ui = (PFNGLVERTEXP4UIPROC)load(\"glVertexP4ui\");\n  glad_glVertexP4uiv = (PFNGLVERTEXP4UIVPROC)load(\"glVertexP4uiv\");\n  glad_glTexCoordP1ui = (PFNGLTEXCOORDP1UIPROC)load(\"glTexCoordP1ui\");\n  glad_glTexCoordP1uiv = (PFNGLTEXCOORDP1UIVPROC)load(\"glTexCoordP1uiv\");\n  glad_glTexCoordP2ui = (PFNGLTEXCOORDP2UIPROC)load(\"glTexCoordP2ui\");\n  glad_glTexCoordP2uiv = (PFNGLTEXCOORDP2UIVPROC)load(\"glTexCoordP2uiv\");\n  glad_glTexCoordP3ui = (PFNGLTEXCOORDP3UIPROC)load(\"glTexCoordP3ui\");\n  glad_glTexCoordP3uiv = (PFNGLTEXCOORDP3UIVPROC)load(\"glTexCoordP3uiv\");\n  glad_glTexCoordP4ui = (PFNGLTEXCOORDP4UIPROC)load(\"glTexCoordP4ui\");\n  glad_glTexCoordP4uiv = (PFNGLTEXCOORDP4UIVPROC)load(\"glTexCoordP4uiv\");\n  glad_glMultiTexCoordP1ui =\n      (PFNGLMULTITEXCOORDP1UIPROC)load(\"glMultiTexCoordP1ui\");\n  glad_glMultiTexCoordP1uiv =\n      (PFNGLMULTITEXCOORDP1UIVPROC)load(\"glMultiTexCoordP1uiv\");\n  glad_glMultiTexCoordP2ui =\n      (PFNGLMULTITEXCOORDP2UIPROC)load(\"glMultiTexCoordP2ui\");\n  glad_glMultiTexCoordP2uiv =\n      (PFNGLMULTITEXCOORDP2UIVPROC)load(\"glMultiTexCoordP2uiv\");\n  glad_glMultiTexCoordP3ui =\n      (PFNGLMULTITEXCOORDP3UIPROC)load(\"glMultiTexCoordP3ui\");\n  glad_glMultiTexCoordP3uiv =\n      (PFNGLMULTITEXCOORDP3UIVPROC)load(\"glMultiTexCoordP3uiv\");\n  glad_glMultiTexCoordP4ui =\n      (PFNGLMULTITEXCOORDP4UIPROC)load(\"glMultiTexCoordP4ui\");\n  glad_glMultiTexCoordP4uiv =\n      (PFNGLMULTITEXCOORDP4UIVPROC)load(\"glMultiTexCoordP4uiv\");\n  glad_glNormalP3ui = (PFNGLNORMALP3UIPROC)load(\"glNormalP3ui\");\n  glad_glNormalP3uiv = (PFNGLNORMALP3UIVPROC)load(\"glNormalP3uiv\");\n  glad_glColorP3ui = (PFNGLCOLORP3UIPROC)load(\"glColorP3ui\");\n  glad_glColorP3uiv = (PFNGLCOLORP3UIVPROC)load(\"glColorP3uiv\");\n  glad_glColorP4ui = (PFNGLCOLORP4UIPROC)load(\"glColorP4ui\");\n  glad_glColorP4uiv = (PFNGLCOLORP4UIVPROC)load(\"glColorP4uiv\");\n  glad_glSecondaryColorP3ui =\n      (PFNGLSECONDARYCOLORP3UIPROC)load(\"glSecondaryColorP3ui\");\n  glad_glSecondaryColorP3uiv =\n      (PFNGLSECONDARYCOLORP3UIVPROC)load(\"glSecondaryColorP3uiv\");\n}\nstatic void load_GL_VERSION_4_0(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_4_0)\n    return;\n  glad_glMinSampleShading =\n      (PFNGLMINSAMPLESHADINGPROC)load(\"glMinSampleShading\");\n  glad_glBlendEquationi = (PFNGLBLENDEQUATIONIPROC)load(\"glBlendEquationi\");\n  glad_glBlendEquationSeparatei =\n      (PFNGLBLENDEQUATIONSEPARATEIPROC)load(\"glBlendEquationSeparatei\");\n  glad_glBlendFunci = (PFNGLBLENDFUNCIPROC)load(\"glBlendFunci\");\n  glad_glBlendFuncSeparatei =\n      (PFNGLBLENDFUNCSEPARATEIPROC)load(\"glBlendFuncSeparatei\");\n  glad_glDrawArraysIndirect =\n      (PFNGLDRAWARRAYSINDIRECTPROC)load(\"glDrawArraysIndirect\");\n  glad_glDrawElementsIndirect =\n      (PFNGLDRAWELEMENTSINDIRECTPROC)load(\"glDrawElementsIndirect\");\n  glad_glUniform1d = (PFNGLUNIFORM1DPROC)load(\"glUniform1d\");\n  glad_glUniform2d = (PFNGLUNIFORM2DPROC)load(\"glUniform2d\");\n  glad_glUniform3d = (PFNGLUNIFORM3DPROC)load(\"glUniform3d\");\n  glad_glUniform4d = (PFNGLUNIFORM4DPROC)load(\"glUniform4d\");\n  glad_glUniform1dv = (PFNGLUNIFORM1DVPROC)load(\"glUniform1dv\");\n  glad_glUniform2dv = (PFNGLUNIFORM2DVPROC)load(\"glUniform2dv\");\n  glad_glUniform3dv = (PFNGLUNIFORM3DVPROC)load(\"glUniform3dv\");\n  glad_glUniform4dv = (PFNGLUNIFORM4DVPROC)load(\"glUniform4dv\");\n  glad_glUniformMatrix2dv =\n      (PFNGLUNIFORMMATRIX2DVPROC)load(\"glUniformMatrix2dv\");\n  glad_glUniformMatrix3dv =\n      (PFNGLUNIFORMMATRIX3DVPROC)load(\"glUniformMatrix3dv\");\n  glad_glUniformMatrix4dv =\n      (PFNGLUNIFORMMATRIX4DVPROC)load(\"glUniformMatrix4dv\");\n  glad_glUniformMatrix2x3dv =\n      (PFNGLUNIFORMMATRIX2X3DVPROC)load(\"glUniformMatrix2x3dv\");\n  glad_glUniformMatrix2x4dv =\n      (PFNGLUNIFORMMATRIX2X4DVPROC)load(\"glUniformMatrix2x4dv\");\n  glad_glUniformMatrix3x2dv =\n      (PFNGLUNIFORMMATRIX3X2DVPROC)load(\"glUniformMatrix3x2dv\");\n  glad_glUniformMatrix3x4dv =\n      (PFNGLUNIFORMMATRIX3X4DVPROC)load(\"glUniformMatrix3x4dv\");\n  glad_glUniformMatrix4x2dv =\n      (PFNGLUNIFORMMATRIX4X2DVPROC)load(\"glUniformMatrix4x2dv\");\n  glad_glUniformMatrix4x3dv =\n      (PFNGLUNIFORMMATRIX4X3DVPROC)load(\"glUniformMatrix4x3dv\");\n  glad_glGetUniformdv = (PFNGLGETUNIFORMDVPROC)load(\"glGetUniformdv\");\n  glad_glGetSubroutineUniformLocation =\n      (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)load(\n          \"glGetSubroutineUniformLocation\");\n  glad_glGetSubroutineIndex =\n      (PFNGLGETSUBROUTINEINDEXPROC)load(\"glGetSubroutineIndex\");\n  glad_glGetActiveSubroutineUniformiv =\n      (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)load(\n          \"glGetActiveSubroutineUniformiv\");\n  glad_glGetActiveSubroutineUniformName =\n      (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)load(\n          \"glGetActiveSubroutineUniformName\");\n  glad_glGetActiveSubroutineName =\n      (PFNGLGETACTIVESUBROUTINENAMEPROC)load(\"glGetActiveSubroutineName\");\n  glad_glUniformSubroutinesuiv =\n      (PFNGLUNIFORMSUBROUTINESUIVPROC)load(\"glUniformSubroutinesuiv\");\n  glad_glGetUniformSubroutineuiv =\n      (PFNGLGETUNIFORMSUBROUTINEUIVPROC)load(\"glGetUniformSubroutineuiv\");\n  glad_glGetProgramStageiv =\n      (PFNGLGETPROGRAMSTAGEIVPROC)load(\"glGetProgramStageiv\");\n  glad_glPatchParameteri = (PFNGLPATCHPARAMETERIPROC)load(\"glPatchParameteri\");\n  glad_glPatchParameterfv =\n      (PFNGLPATCHPARAMETERFVPROC)load(\"glPatchParameterfv\");\n  glad_glBindTransformFeedback =\n      (PFNGLBINDTRANSFORMFEEDBACKPROC)load(\"glBindTransformFeedback\");\n  glad_glDeleteTransformFeedbacks =\n      (PFNGLDELETETRANSFORMFEEDBACKSPROC)load(\"glDeleteTransformFeedbacks\");\n  glad_glGenTransformFeedbacks =\n      (PFNGLGENTRANSFORMFEEDBACKSPROC)load(\"glGenTransformFeedbacks\");\n  glad_glIsTransformFeedback =\n      (PFNGLISTRANSFORMFEEDBACKPROC)load(\"glIsTransformFeedback\");\n  glad_glPauseTransformFeedback =\n      (PFNGLPAUSETRANSFORMFEEDBACKPROC)load(\"glPauseTransformFeedback\");\n  glad_glResumeTransformFeedback =\n      (PFNGLRESUMETRANSFORMFEEDBACKPROC)load(\"glResumeTransformFeedback\");\n  glad_glDrawTransformFeedback =\n      (PFNGLDRAWTRANSFORMFEEDBACKPROC)load(\"glDrawTransformFeedback\");\n  glad_glDrawTransformFeedbackStream =\n      (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)load(\n          \"glDrawTransformFeedbackStream\");\n  glad_glBeginQueryIndexed =\n      (PFNGLBEGINQUERYINDEXEDPROC)load(\"glBeginQueryIndexed\");\n  glad_glEndQueryIndexed = (PFNGLENDQUERYINDEXEDPROC)load(\"glEndQueryIndexed\");\n  glad_glGetQueryIndexediv =\n      (PFNGLGETQUERYINDEXEDIVPROC)load(\"glGetQueryIndexediv\");\n}\nstatic void load_GL_VERSION_4_1(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_4_1)\n    return;\n  glad_glReleaseShaderCompiler =\n      (PFNGLRELEASESHADERCOMPILERPROC)load(\"glReleaseShaderCompiler\");\n  glad_glShaderBinary = (PFNGLSHADERBINARYPROC)load(\"glShaderBinary\");\n  glad_glGetShaderPrecisionFormat =\n      (PFNGLGETSHADERPRECISIONFORMATPROC)load(\"glGetShaderPrecisionFormat\");\n  glad_glDepthRangef = (PFNGLDEPTHRANGEFPROC)load(\"glDepthRangef\");\n  glad_glClearDepthf = (PFNGLCLEARDEPTHFPROC)load(\"glClearDepthf\");\n  glad_glGetProgramBinary =\n      (PFNGLGETPROGRAMBINARYPROC)load(\"glGetProgramBinary\");\n  glad_glProgramBinary = (PFNGLPROGRAMBINARYPROC)load(\"glProgramBinary\");\n  glad_glProgramParameteri =\n      (PFNGLPROGRAMPARAMETERIPROC)load(\"glProgramParameteri\");\n  glad_glUseProgramStages =\n      (PFNGLUSEPROGRAMSTAGESPROC)load(\"glUseProgramStages\");\n  glad_glActiveShaderProgram =\n      (PFNGLACTIVESHADERPROGRAMPROC)load(\"glActiveShaderProgram\");\n  glad_glCreateShaderProgramv =\n      (PFNGLCREATESHADERPROGRAMVPROC)load(\"glCreateShaderProgramv\");\n  glad_glBindProgramPipeline =\n      (PFNGLBINDPROGRAMPIPELINEPROC)load(\"glBindProgramPipeline\");\n  glad_glDeleteProgramPipelines =\n      (PFNGLDELETEPROGRAMPIPELINESPROC)load(\"glDeleteProgramPipelines\");\n  glad_glGenProgramPipelines =\n      (PFNGLGENPROGRAMPIPELINESPROC)load(\"glGenProgramPipelines\");\n  glad_glIsProgramPipeline =\n      (PFNGLISPROGRAMPIPELINEPROC)load(\"glIsProgramPipeline\");\n  glad_glGetProgramPipelineiv =\n      (PFNGLGETPROGRAMPIPELINEIVPROC)load(\"glGetProgramPipelineiv\");\n  glad_glProgramParameteri =\n      (PFNGLPROGRAMPARAMETERIPROC)load(\"glProgramParameteri\");\n  glad_glProgramUniform1i =\n      (PFNGLPROGRAMUNIFORM1IPROC)load(\"glProgramUniform1i\");\n  glad_glProgramUniform1iv =\n      (PFNGLPROGRAMUNIFORM1IVPROC)load(\"glProgramUniform1iv\");\n  glad_glProgramUniform1f =\n      (PFNGLPROGRAMUNIFORM1FPROC)load(\"glProgramUniform1f\");\n  glad_glProgramUniform1fv =\n      (PFNGLPROGRAMUNIFORM1FVPROC)load(\"glProgramUniform1fv\");\n  glad_glProgramUniform1d =\n      (PFNGLPROGRAMUNIFORM1DPROC)load(\"glProgramUniform1d\");\n  glad_glProgramUniform1dv =\n      (PFNGLPROGRAMUNIFORM1DVPROC)load(\"glProgramUniform1dv\");\n  glad_glProgramUniform1ui =\n      (PFNGLPROGRAMUNIFORM1UIPROC)load(\"glProgramUniform1ui\");\n  glad_glProgramUniform1uiv =\n      (PFNGLPROGRAMUNIFORM1UIVPROC)load(\"glProgramUniform1uiv\");\n  glad_glProgramUniform2i =\n      (PFNGLPROGRAMUNIFORM2IPROC)load(\"glProgramUniform2i\");\n  glad_glProgramUniform2iv =\n      (PFNGLPROGRAMUNIFORM2IVPROC)load(\"glProgramUniform2iv\");\n  glad_glProgramUniform2f =\n      (PFNGLPROGRAMUNIFORM2FPROC)load(\"glProgramUniform2f\");\n  glad_glProgramUniform2fv =\n      (PFNGLPROGRAMUNIFORM2FVPROC)load(\"glProgramUniform2fv\");\n  glad_glProgramUniform2d =\n      (PFNGLPROGRAMUNIFORM2DPROC)load(\"glProgramUniform2d\");\n  glad_glProgramUniform2dv =\n      (PFNGLPROGRAMUNIFORM2DVPROC)load(\"glProgramUniform2dv\");\n  glad_glProgramUniform2ui =\n      (PFNGLPROGRAMUNIFORM2UIPROC)load(\"glProgramUniform2ui\");\n  glad_glProgramUniform2uiv =\n      (PFNGLPROGRAMUNIFORM2UIVPROC)load(\"glProgramUniform2uiv\");\n  glad_glProgramUniform3i =\n      (PFNGLPROGRAMUNIFORM3IPROC)load(\"glProgramUniform3i\");\n  glad_glProgramUniform3iv =\n      (PFNGLPROGRAMUNIFORM3IVPROC)load(\"glProgramUniform3iv\");\n  glad_glProgramUniform3f =\n      (PFNGLPROGRAMUNIFORM3FPROC)load(\"glProgramUniform3f\");\n  glad_glProgramUniform3fv =\n      (PFNGLPROGRAMUNIFORM3FVPROC)load(\"glProgramUniform3fv\");\n  glad_glProgramUniform3d =\n      (PFNGLPROGRAMUNIFORM3DPROC)load(\"glProgramUniform3d\");\n  glad_glProgramUniform3dv =\n      (PFNGLPROGRAMUNIFORM3DVPROC)load(\"glProgramUniform3dv\");\n  glad_glProgramUniform3ui =\n      (PFNGLPROGRAMUNIFORM3UIPROC)load(\"glProgramUniform3ui\");\n  glad_glProgramUniform3uiv =\n      (PFNGLPROGRAMUNIFORM3UIVPROC)load(\"glProgramUniform3uiv\");\n  glad_glProgramUniform4i =\n      (PFNGLPROGRAMUNIFORM4IPROC)load(\"glProgramUniform4i\");\n  glad_glProgramUniform4iv =\n      (PFNGLPROGRAMUNIFORM4IVPROC)load(\"glProgramUniform4iv\");\n  glad_glProgramUniform4f =\n      (PFNGLPROGRAMUNIFORM4FPROC)load(\"glProgramUniform4f\");\n  glad_glProgramUniform4fv =\n      (PFNGLPROGRAMUNIFORM4FVPROC)load(\"glProgramUniform4fv\");\n  glad_glProgramUniform4d =\n      (PFNGLPROGRAMUNIFORM4DPROC)load(\"glProgramUniform4d\");\n  glad_glProgramUniform4dv =\n      (PFNGLPROGRAMUNIFORM4DVPROC)load(\"glProgramUniform4dv\");\n  glad_glProgramUniform4ui =\n      (PFNGLPROGRAMUNIFORM4UIPROC)load(\"glProgramUniform4ui\");\n  glad_glProgramUniform4uiv =\n      (PFNGLPROGRAMUNIFORM4UIVPROC)load(\"glProgramUniform4uiv\");\n  glad_glProgramUniformMatrix2fv =\n      (PFNGLPROGRAMUNIFORMMATRIX2FVPROC)load(\"glProgramUniformMatrix2fv\");\n  glad_glProgramUniformMatrix3fv =\n      (PFNGLPROGRAMUNIFORMMATRIX3FVPROC)load(\"glProgramUniformMatrix3fv\");\n  glad_glProgramUniformMatrix4fv =\n      (PFNGLPROGRAMUNIFORMMATRIX4FVPROC)load(\"glProgramUniformMatrix4fv\");\n  glad_glProgramUniformMatrix2dv =\n      (PFNGLPROGRAMUNIFORMMATRIX2DVPROC)load(\"glProgramUniformMatrix2dv\");\n  glad_glProgramUniformMatrix3dv =\n      (PFNGLPROGRAMUNIFORMMATRIX3DVPROC)load(\"glProgramUniformMatrix3dv\");\n  glad_glProgramUniformMatrix4dv =\n      (PFNGLPROGRAMUNIFORMMATRIX4DVPROC)load(\"glProgramUniformMatrix4dv\");\n  glad_glProgramUniformMatrix2x3fv =\n      (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)load(\"glProgramUniformMatrix2x3fv\");\n  glad_glProgramUniformMatrix3x2fv =\n      (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)load(\"glProgramUniformMatrix3x2fv\");\n  glad_glProgramUniformMatrix2x4fv =\n      (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)load(\"glProgramUniformMatrix2x4fv\");\n  glad_glProgramUniformMatrix4x2fv =\n      (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)load(\"glProgramUniformMatrix4x2fv\");\n  glad_glProgramUniformMatrix3x4fv =\n      (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)load(\"glProgramUniformMatrix3x4fv\");\n  glad_glProgramUniformMatrix4x3fv =\n      (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)load(\"glProgramUniformMatrix4x3fv\");\n  glad_glProgramUniformMatrix2x3dv =\n      (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)load(\"glProgramUniformMatrix2x3dv\");\n  glad_glProgramUniformMatrix3x2dv =\n      (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)load(\"glProgramUniformMatrix3x2dv\");\n  glad_glProgramUniformMatrix2x4dv =\n      (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)load(\"glProgramUniformMatrix2x4dv\");\n  glad_glProgramUniformMatrix4x2dv =\n      (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)load(\"glProgramUniformMatrix4x2dv\");\n  glad_glProgramUniformMatrix3x4dv =\n      (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)load(\"glProgramUniformMatrix3x4dv\");\n  glad_glProgramUniformMatrix4x3dv =\n      (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)load(\"glProgramUniformMatrix4x3dv\");\n  glad_glValidateProgramPipeline =\n      (PFNGLVALIDATEPROGRAMPIPELINEPROC)load(\"glValidateProgramPipeline\");\n  glad_glGetProgramPipelineInfoLog =\n      (PFNGLGETPROGRAMPIPELINEINFOLOGPROC)load(\"glGetProgramPipelineInfoLog\");\n  glad_glVertexAttribL1d = (PFNGLVERTEXATTRIBL1DPROC)load(\"glVertexAttribL1d\");\n  glad_glVertexAttribL2d = (PFNGLVERTEXATTRIBL2DPROC)load(\"glVertexAttribL2d\");\n  glad_glVertexAttribL3d = (PFNGLVERTEXATTRIBL3DPROC)load(\"glVertexAttribL3d\");\n  glad_glVertexAttribL4d = (PFNGLVERTEXATTRIBL4DPROC)load(\"glVertexAttribL4d\");\n  glad_glVertexAttribL1dv =\n      (PFNGLVERTEXATTRIBL1DVPROC)load(\"glVertexAttribL1dv\");\n  glad_glVertexAttribL2dv =\n      (PFNGLVERTEXATTRIBL2DVPROC)load(\"glVertexAttribL2dv\");\n  glad_glVertexAttribL3dv =\n      (PFNGLVERTEXATTRIBL3DVPROC)load(\"glVertexAttribL3dv\");\n  glad_glVertexAttribL4dv =\n      (PFNGLVERTEXATTRIBL4DVPROC)load(\"glVertexAttribL4dv\");\n  glad_glVertexAttribLPointer =\n      (PFNGLVERTEXATTRIBLPOINTERPROC)load(\"glVertexAttribLPointer\");\n  glad_glGetVertexAttribLdv =\n      (PFNGLGETVERTEXATTRIBLDVPROC)load(\"glGetVertexAttribLdv\");\n  glad_glViewportArrayv = (PFNGLVIEWPORTARRAYVPROC)load(\"glViewportArrayv\");\n  glad_glViewportIndexedf =\n      (PFNGLVIEWPORTINDEXEDFPROC)load(\"glViewportIndexedf\");\n  glad_glViewportIndexedfv =\n      (PFNGLVIEWPORTINDEXEDFVPROC)load(\"glViewportIndexedfv\");\n  glad_glScissorArrayv = (PFNGLSCISSORARRAYVPROC)load(\"glScissorArrayv\");\n  glad_glScissorIndexed = (PFNGLSCISSORINDEXEDPROC)load(\"glScissorIndexed\");\n  glad_glScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC)load(\"glScissorIndexedv\");\n  glad_glDepthRangeArrayv =\n      (PFNGLDEPTHRANGEARRAYVPROC)load(\"glDepthRangeArrayv\");\n  glad_glDepthRangeIndexed =\n      (PFNGLDEPTHRANGEINDEXEDPROC)load(\"glDepthRangeIndexed\");\n  glad_glGetFloati_v = (PFNGLGETFLOATI_VPROC)load(\"glGetFloati_v\");\n  glad_glGetDoublei_v = (PFNGLGETDOUBLEI_VPROC)load(\"glGetDoublei_v\");\n}\nstatic void load_GL_VERSION_4_2(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_4_2)\n    return;\n  glad_glDrawArraysInstancedBaseInstance =\n      (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)load(\n          \"glDrawArraysInstancedBaseInstance\");\n  glad_glDrawElementsInstancedBaseInstance =\n      (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)load(\n          \"glDrawElementsInstancedBaseInstance\");\n  glad_glDrawElementsInstancedBaseVertexBaseInstance =\n      (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)load(\n          \"glDrawElementsInstancedBaseVertexBaseInstance\");\n  glad_glGetInternalformativ =\n      (PFNGLGETINTERNALFORMATIVPROC)load(\"glGetInternalformativ\");\n  glad_glGetActiveAtomicCounterBufferiv =\n      (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)load(\n          \"glGetActiveAtomicCounterBufferiv\");\n  glad_glBindImageTexture =\n      (PFNGLBINDIMAGETEXTUREPROC)load(\"glBindImageTexture\");\n  glad_glMemoryBarrier = (PFNGLMEMORYBARRIERPROC)load(\"glMemoryBarrier\");\n  glad_glTexStorage1D = (PFNGLTEXSTORAGE1DPROC)load(\"glTexStorage1D\");\n  glad_glTexStorage2D = (PFNGLTEXSTORAGE2DPROC)load(\"glTexStorage2D\");\n  glad_glTexStorage3D = (PFNGLTEXSTORAGE3DPROC)load(\"glTexStorage3D\");\n  glad_glDrawTransformFeedbackInstanced =\n      (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)load(\n          \"glDrawTransformFeedbackInstanced\");\n  glad_glDrawTransformFeedbackStreamInstanced =\n      (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)load(\n          \"glDrawTransformFeedbackStreamInstanced\");\n}\nstatic void load_GL_VERSION_4_3(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_4_3)\n    return;\n  glad_glClearBufferData = (PFNGLCLEARBUFFERDATAPROC)load(\"glClearBufferData\");\n  glad_glClearBufferSubData =\n      (PFNGLCLEARBUFFERSUBDATAPROC)load(\"glClearBufferSubData\");\n  glad_glDispatchCompute = (PFNGLDISPATCHCOMPUTEPROC)load(\"glDispatchCompute\");\n  glad_glDispatchComputeIndirect =\n      (PFNGLDISPATCHCOMPUTEINDIRECTPROC)load(\"glDispatchComputeIndirect\");\n  glad_glCopyImageSubData =\n      (PFNGLCOPYIMAGESUBDATAPROC)load(\"glCopyImageSubData\");\n  glad_glFramebufferParameteri =\n      (PFNGLFRAMEBUFFERPARAMETERIPROC)load(\"glFramebufferParameteri\");\n  glad_glGetFramebufferParameteriv =\n      (PFNGLGETFRAMEBUFFERPARAMETERIVPROC)load(\"glGetFramebufferParameteriv\");\n  glad_glGetInternalformati64v =\n      (PFNGLGETINTERNALFORMATI64VPROC)load(\"glGetInternalformati64v\");\n  glad_glInvalidateTexSubImage =\n      (PFNGLINVALIDATETEXSUBIMAGEPROC)load(\"glInvalidateTexSubImage\");\n  glad_glInvalidateTexImage =\n      (PFNGLINVALIDATETEXIMAGEPROC)load(\"glInvalidateTexImage\");\n  glad_glInvalidateBufferSubData =\n      (PFNGLINVALIDATEBUFFERSUBDATAPROC)load(\"glInvalidateBufferSubData\");\n  glad_glInvalidateBufferData =\n      (PFNGLINVALIDATEBUFFERDATAPROC)load(\"glInvalidateBufferData\");\n  glad_glInvalidateFramebuffer =\n      (PFNGLINVALIDATEFRAMEBUFFERPROC)load(\"glInvalidateFramebuffer\");\n  glad_glInvalidateSubFramebuffer =\n      (PFNGLINVALIDATESUBFRAMEBUFFERPROC)load(\"glInvalidateSubFramebuffer\");\n  glad_glMultiDrawArraysIndirect =\n      (PFNGLMULTIDRAWARRAYSINDIRECTPROC)load(\"glMultiDrawArraysIndirect\");\n  glad_glMultiDrawElementsIndirect =\n      (PFNGLMULTIDRAWELEMENTSINDIRECTPROC)load(\"glMultiDrawElementsIndirect\");\n  glad_glGetProgramInterfaceiv =\n      (PFNGLGETPROGRAMINTERFACEIVPROC)load(\"glGetProgramInterfaceiv\");\n  glad_glGetProgramResourceIndex =\n      (PFNGLGETPROGRAMRESOURCEINDEXPROC)load(\"glGetProgramResourceIndex\");\n  glad_glGetProgramResourceName =\n      (PFNGLGETPROGRAMRESOURCENAMEPROC)load(\"glGetProgramResourceName\");\n  glad_glGetProgramResourceiv =\n      (PFNGLGETPROGRAMRESOURCEIVPROC)load(\"glGetProgramResourceiv\");\n  glad_glGetProgramResourceLocation =\n      (PFNGLGETPROGRAMRESOURCELOCATIONPROC)load(\"glGetProgramResourceLocation\");\n  glad_glGetProgramResourceLocationIndex =\n      (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)load(\n          \"glGetProgramResourceLocationIndex\");\n  glad_glShaderStorageBlockBinding =\n      (PFNGLSHADERSTORAGEBLOCKBINDINGPROC)load(\"glShaderStorageBlockBinding\");\n  glad_glTexBufferRange = (PFNGLTEXBUFFERRANGEPROC)load(\"glTexBufferRange\");\n  glad_glTexStorage2DMultisample =\n      (PFNGLTEXSTORAGE2DMULTISAMPLEPROC)load(\"glTexStorage2DMultisample\");\n  glad_glTexStorage3DMultisample =\n      (PFNGLTEXSTORAGE3DMULTISAMPLEPROC)load(\"glTexStorage3DMultisample\");\n  glad_glTextureView = (PFNGLTEXTUREVIEWPROC)load(\"glTextureView\");\n  glad_glBindVertexBuffer =\n      (PFNGLBINDVERTEXBUFFERPROC)load(\"glBindVertexBuffer\");\n  glad_glVertexAttribFormat =\n      (PFNGLVERTEXATTRIBFORMATPROC)load(\"glVertexAttribFormat\");\n  glad_glVertexAttribIFormat =\n      (PFNGLVERTEXATTRIBIFORMATPROC)load(\"glVertexAttribIFormat\");\n  glad_glVertexAttribLFormat =\n      (PFNGLVERTEXATTRIBLFORMATPROC)load(\"glVertexAttribLFormat\");\n  glad_glVertexAttribBinding =\n      (PFNGLVERTEXATTRIBBINDINGPROC)load(\"glVertexAttribBinding\");\n  glad_glVertexBindingDivisor =\n      (PFNGLVERTEXBINDINGDIVISORPROC)load(\"glVertexBindingDivisor\");\n  glad_glDebugMessageControl =\n      (PFNGLDEBUGMESSAGECONTROLPROC)load(\"glDebugMessageControl\");\n  glad_glDebugMessageInsert =\n      (PFNGLDEBUGMESSAGEINSERTPROC)load(\"glDebugMessageInsert\");\n  glad_glDebugMessageCallback =\n      (PFNGLDEBUGMESSAGECALLBACKPROC)load(\"glDebugMessageCallback\");\n  glad_glGetDebugMessageLog =\n      (PFNGLGETDEBUGMESSAGELOGPROC)load(\"glGetDebugMessageLog\");\n  glad_glPushDebugGroup = (PFNGLPUSHDEBUGGROUPPROC)load(\"glPushDebugGroup\");\n  glad_glPopDebugGroup = (PFNGLPOPDEBUGGROUPPROC)load(\"glPopDebugGroup\");\n  glad_glObjectLabel = (PFNGLOBJECTLABELPROC)load(\"glObjectLabel\");\n  glad_glGetObjectLabel = (PFNGLGETOBJECTLABELPROC)load(\"glGetObjectLabel\");\n  glad_glObjectPtrLabel = (PFNGLOBJECTPTRLABELPROC)load(\"glObjectPtrLabel\");\n  glad_glGetObjectPtrLabel =\n      (PFNGLGETOBJECTPTRLABELPROC)load(\"glGetObjectPtrLabel\");\n  glad_glGetPointerv = (PFNGLGETPOINTERVPROC)load(\"glGetPointerv\");\n}\nstatic void load_GL_VERSION_4_4(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_4_4)\n    return;\n  glad_glBufferStorage = (PFNGLBUFFERSTORAGEPROC)load(\"glBufferStorage\");\n  glad_glClearTexImage = (PFNGLCLEARTEXIMAGEPROC)load(\"glClearTexImage\");\n  glad_glClearTexSubImage =\n      (PFNGLCLEARTEXSUBIMAGEPROC)load(\"glClearTexSubImage\");\n  glad_glBindBuffersBase = (PFNGLBINDBUFFERSBASEPROC)load(\"glBindBuffersBase\");\n  glad_glBindBuffersRange =\n      (PFNGLBINDBUFFERSRANGEPROC)load(\"glBindBuffersRange\");\n  glad_glBindTextures = (PFNGLBINDTEXTURESPROC)load(\"glBindTextures\");\n  glad_glBindSamplers = (PFNGLBINDSAMPLERSPROC)load(\"glBindSamplers\");\n  glad_glBindImageTextures =\n      (PFNGLBINDIMAGETEXTURESPROC)load(\"glBindImageTextures\");\n  glad_glBindVertexBuffers =\n      (PFNGLBINDVERTEXBUFFERSPROC)load(\"glBindVertexBuffers\");\n}\nstatic void load_GL_VERSION_4_5(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_4_5)\n    return;\n  glad_glClipControl = (PFNGLCLIPCONTROLPROC)load(\"glClipControl\");\n  glad_glCreateTransformFeedbacks =\n      (PFNGLCREATETRANSFORMFEEDBACKSPROC)load(\"glCreateTransformFeedbacks\");\n  glad_glTransformFeedbackBufferBase =\n      (PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC)load(\n          \"glTransformFeedbackBufferBase\");\n  glad_glTransformFeedbackBufferRange =\n      (PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC)load(\n          \"glTransformFeedbackBufferRange\");\n  glad_glGetTransformFeedbackiv =\n      (PFNGLGETTRANSFORMFEEDBACKIVPROC)load(\"glGetTransformFeedbackiv\");\n  glad_glGetTransformFeedbacki_v =\n      (PFNGLGETTRANSFORMFEEDBACKI_VPROC)load(\"glGetTransformFeedbacki_v\");\n  glad_glGetTransformFeedbacki64_v =\n      (PFNGLGETTRANSFORMFEEDBACKI64_VPROC)load(\"glGetTransformFeedbacki64_v\");\n  glad_glCreateBuffers = (PFNGLCREATEBUFFERSPROC)load(\"glCreateBuffers\");\n  glad_glNamedBufferStorage =\n      (PFNGLNAMEDBUFFERSTORAGEPROC)load(\"glNamedBufferStorage\");\n  glad_glNamedBufferData = (PFNGLNAMEDBUFFERDATAPROC)load(\"glNamedBufferData\");\n  glad_glNamedBufferSubData =\n      (PFNGLNAMEDBUFFERSUBDATAPROC)load(\"glNamedBufferSubData\");\n  glad_glCopyNamedBufferSubData =\n      (PFNGLCOPYNAMEDBUFFERSUBDATAPROC)load(\"glCopyNamedBufferSubData\");\n  glad_glClearNamedBufferData =\n      (PFNGLCLEARNAMEDBUFFERDATAPROC)load(\"glClearNamedBufferData\");\n  glad_glClearNamedBufferSubData =\n      (PFNGLCLEARNAMEDBUFFERSUBDATAPROC)load(\"glClearNamedBufferSubData\");\n  glad_glMapNamedBuffer = (PFNGLMAPNAMEDBUFFERPROC)load(\"glMapNamedBuffer\");\n  glad_glMapNamedBufferRange =\n      (PFNGLMAPNAMEDBUFFERRANGEPROC)load(\"glMapNamedBufferRange\");\n  glad_glUnmapNamedBuffer =\n      (PFNGLUNMAPNAMEDBUFFERPROC)load(\"glUnmapNamedBuffer\");\n  glad_glFlushMappedNamedBufferRange =\n      (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC)load(\n          \"glFlushMappedNamedBufferRange\");\n  glad_glGetNamedBufferParameteriv =\n      (PFNGLGETNAMEDBUFFERPARAMETERIVPROC)load(\"glGetNamedBufferParameteriv\");\n  glad_glGetNamedBufferParameteri64v =\n      (PFNGLGETNAMEDBUFFERPARAMETERI64VPROC)load(\n          \"glGetNamedBufferParameteri64v\");\n  glad_glGetNamedBufferPointerv =\n      (PFNGLGETNAMEDBUFFERPOINTERVPROC)load(\"glGetNamedBufferPointerv\");\n  glad_glGetNamedBufferSubData =\n      (PFNGLGETNAMEDBUFFERSUBDATAPROC)load(\"glGetNamedBufferSubData\");\n  glad_glCreateFramebuffers =\n      (PFNGLCREATEFRAMEBUFFERSPROC)load(\"glCreateFramebuffers\");\n  glad_glNamedFramebufferRenderbuffer =\n      (PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC)load(\n          \"glNamedFramebufferRenderbuffer\");\n  glad_glNamedFramebufferParameteri =\n      (PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC)load(\"glNamedFramebufferParameteri\");\n  glad_glNamedFramebufferTexture =\n      (PFNGLNAMEDFRAMEBUFFERTEXTUREPROC)load(\"glNamedFramebufferTexture\");\n  glad_glNamedFramebufferTextureLayer =\n      (PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC)load(\n          \"glNamedFramebufferTextureLayer\");\n  glad_glNamedFramebufferDrawBuffer =\n      (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC)load(\"glNamedFramebufferDrawBuffer\");\n  glad_glNamedFramebufferDrawBuffers =\n      (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC)load(\n          \"glNamedFramebufferDrawBuffers\");\n  glad_glNamedFramebufferReadBuffer =\n      (PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC)load(\"glNamedFramebufferReadBuffer\");\n  glad_glInvalidateNamedFramebufferData =\n      (PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC)load(\n          \"glInvalidateNamedFramebufferData\");\n  glad_glInvalidateNamedFramebufferSubData =\n      (PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC)load(\n          \"glInvalidateNamedFramebufferSubData\");\n  glad_glClearNamedFramebufferiv =\n      (PFNGLCLEARNAMEDFRAMEBUFFERIVPROC)load(\"glClearNamedFramebufferiv\");\n  glad_glClearNamedFramebufferuiv =\n      (PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC)load(\"glClearNamedFramebufferuiv\");\n  glad_glClearNamedFramebufferfv =\n      (PFNGLCLEARNAMEDFRAMEBUFFERFVPROC)load(\"glClearNamedFramebufferfv\");\n  glad_glClearNamedFramebufferfi =\n      (PFNGLCLEARNAMEDFRAMEBUFFERFIPROC)load(\"glClearNamedFramebufferfi\");\n  glad_glBlitNamedFramebuffer =\n      (PFNGLBLITNAMEDFRAMEBUFFERPROC)load(\"glBlitNamedFramebuffer\");\n  glad_glCheckNamedFramebufferStatus =\n      (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC)load(\n          \"glCheckNamedFramebufferStatus\");\n  glad_glGetNamedFramebufferParameteriv =\n      (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC)load(\n          \"glGetNamedFramebufferParameteriv\");\n  glad_glGetNamedFramebufferAttachmentParameteriv =\n      (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC)load(\n          \"glGetNamedFramebufferAttachmentParameteriv\");\n  glad_glCreateRenderbuffers =\n      (PFNGLCREATERENDERBUFFERSPROC)load(\"glCreateRenderbuffers\");\n  glad_glNamedRenderbufferStorage =\n      (PFNGLNAMEDRENDERBUFFERSTORAGEPROC)load(\"glNamedRenderbufferStorage\");\n  glad_glNamedRenderbufferStorageMultisample =\n      (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC)load(\n          \"glNamedRenderbufferStorageMultisample\");\n  glad_glGetNamedRenderbufferParameteriv =\n      (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC)load(\n          \"glGetNamedRenderbufferParameteriv\");\n  glad_glCreateTextures = (PFNGLCREATETEXTURESPROC)load(\"glCreateTextures\");\n  glad_glTextureBuffer = (PFNGLTEXTUREBUFFERPROC)load(\"glTextureBuffer\");\n  glad_glTextureBufferRange =\n      (PFNGLTEXTUREBUFFERRANGEPROC)load(\"glTextureBufferRange\");\n  glad_glTextureStorage1D =\n      (PFNGLTEXTURESTORAGE1DPROC)load(\"glTextureStorage1D\");\n  glad_glTextureStorage2D =\n      (PFNGLTEXTURESTORAGE2DPROC)load(\"glTextureStorage2D\");\n  glad_glTextureStorage3D =\n      (PFNGLTEXTURESTORAGE3DPROC)load(\"glTextureStorage3D\");\n  glad_glTextureStorage2DMultisample =\n      (PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC)load(\n          \"glTextureStorage2DMultisample\");\n  glad_glTextureStorage3DMultisample =\n      (PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC)load(\n          \"glTextureStorage3DMultisample\");\n  glad_glTextureSubImage1D =\n      (PFNGLTEXTURESUBIMAGE1DPROC)load(\"glTextureSubImage1D\");\n  glad_glTextureSubImage2D =\n      (PFNGLTEXTURESUBIMAGE2DPROC)load(\"glTextureSubImage2D\");\n  glad_glTextureSubImage3D =\n      (PFNGLTEXTURESUBIMAGE3DPROC)load(\"glTextureSubImage3D\");\n  glad_glCompressedTextureSubImage1D =\n      (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC)load(\n          \"glCompressedTextureSubImage1D\");\n  glad_glCompressedTextureSubImage2D =\n      (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC)load(\n          \"glCompressedTextureSubImage2D\");\n  glad_glCompressedTextureSubImage3D =\n      (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC)load(\n          \"glCompressedTextureSubImage3D\");\n  glad_glCopyTextureSubImage1D =\n      (PFNGLCOPYTEXTURESUBIMAGE1DPROC)load(\"glCopyTextureSubImage1D\");\n  glad_glCopyTextureSubImage2D =\n      (PFNGLCOPYTEXTURESUBIMAGE2DPROC)load(\"glCopyTextureSubImage2D\");\n  glad_glCopyTextureSubImage3D =\n      (PFNGLCOPYTEXTURESUBIMAGE3DPROC)load(\"glCopyTextureSubImage3D\");\n  glad_glTextureParameterf =\n      (PFNGLTEXTUREPARAMETERFPROC)load(\"glTextureParameterf\");\n  glad_glTextureParameterfv =\n      (PFNGLTEXTUREPARAMETERFVPROC)load(\"glTextureParameterfv\");\n  glad_glTextureParameteri =\n      (PFNGLTEXTUREPARAMETERIPROC)load(\"glTextureParameteri\");\n  glad_glTextureParameterIiv =\n      (PFNGLTEXTUREPARAMETERIIVPROC)load(\"glTextureParameterIiv\");\n  glad_glTextureParameterIuiv =\n      (PFNGLTEXTUREPARAMETERIUIVPROC)load(\"glTextureParameterIuiv\");\n  glad_glTextureParameteriv =\n      (PFNGLTEXTUREPARAMETERIVPROC)load(\"glTextureParameteriv\");\n  glad_glGenerateTextureMipmap =\n      (PFNGLGENERATETEXTUREMIPMAPPROC)load(\"glGenerateTextureMipmap\");\n  glad_glBindTextureUnit = (PFNGLBINDTEXTUREUNITPROC)load(\"glBindTextureUnit\");\n  glad_glGetTextureImage = (PFNGLGETTEXTUREIMAGEPROC)load(\"glGetTextureImage\");\n  glad_glGetCompressedTextureImage =\n      (PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC)load(\"glGetCompressedTextureImage\");\n  glad_glGetTextureLevelParameterfv =\n      (PFNGLGETTEXTURELEVELPARAMETERFVPROC)load(\"glGetTextureLevelParameterfv\");\n  glad_glGetTextureLevelParameteriv =\n      (PFNGLGETTEXTURELEVELPARAMETERIVPROC)load(\"glGetTextureLevelParameteriv\");\n  glad_glGetTextureParameterfv =\n      (PFNGLGETTEXTUREPARAMETERFVPROC)load(\"glGetTextureParameterfv\");\n  glad_glGetTextureParameterIiv =\n      (PFNGLGETTEXTUREPARAMETERIIVPROC)load(\"glGetTextureParameterIiv\");\n  glad_glGetTextureParameterIuiv =\n      (PFNGLGETTEXTUREPARAMETERIUIVPROC)load(\"glGetTextureParameterIuiv\");\n  glad_glGetTextureParameteriv =\n      (PFNGLGETTEXTUREPARAMETERIVPROC)load(\"glGetTextureParameteriv\");\n  glad_glCreateVertexArrays =\n      (PFNGLCREATEVERTEXARRAYSPROC)load(\"glCreateVertexArrays\");\n  glad_glDisableVertexArrayAttrib =\n      (PFNGLDISABLEVERTEXARRAYATTRIBPROC)load(\"glDisableVertexArrayAttrib\");\n  glad_glEnableVertexArrayAttrib =\n      (PFNGLENABLEVERTEXARRAYATTRIBPROC)load(\"glEnableVertexArrayAttrib\");\n  glad_glVertexArrayElementBuffer =\n      (PFNGLVERTEXARRAYELEMENTBUFFERPROC)load(\"glVertexArrayElementBuffer\");\n  glad_glVertexArrayVertexBuffer =\n      (PFNGLVERTEXARRAYVERTEXBUFFERPROC)load(\"glVertexArrayVertexBuffer\");\n  glad_glVertexArrayVertexBuffers =\n      (PFNGLVERTEXARRAYVERTEXBUFFERSPROC)load(\"glVertexArrayVertexBuffers\");\n  glad_glVertexArrayAttribBinding =\n      (PFNGLVERTEXARRAYATTRIBBINDINGPROC)load(\"glVertexArrayAttribBinding\");\n  glad_glVertexArrayAttribFormat =\n      (PFNGLVERTEXARRAYATTRIBFORMATPROC)load(\"glVertexArrayAttribFormat\");\n  glad_glVertexArrayAttribIFormat =\n      (PFNGLVERTEXARRAYATTRIBIFORMATPROC)load(\"glVertexArrayAttribIFormat\");\n  glad_glVertexArrayAttribLFormat =\n      (PFNGLVERTEXARRAYATTRIBLFORMATPROC)load(\"glVertexArrayAttribLFormat\");\n  glad_glVertexArrayBindingDivisor =\n      (PFNGLVERTEXARRAYBINDINGDIVISORPROC)load(\"glVertexArrayBindingDivisor\");\n  glad_glGetVertexArrayiv =\n      (PFNGLGETVERTEXARRAYIVPROC)load(\"glGetVertexArrayiv\");\n  glad_glGetVertexArrayIndexediv =\n      (PFNGLGETVERTEXARRAYINDEXEDIVPROC)load(\"glGetVertexArrayIndexediv\");\n  glad_glGetVertexArrayIndexed64iv =\n      (PFNGLGETVERTEXARRAYINDEXED64IVPROC)load(\"glGetVertexArrayIndexed64iv\");\n  glad_glCreateSamplers = (PFNGLCREATESAMPLERSPROC)load(\"glCreateSamplers\");\n  glad_glCreateProgramPipelines =\n      (PFNGLCREATEPROGRAMPIPELINESPROC)load(\"glCreateProgramPipelines\");\n  glad_glCreateQueries = (PFNGLCREATEQUERIESPROC)load(\"glCreateQueries\");\n  glad_glGetQueryBufferObjecti64v =\n      (PFNGLGETQUERYBUFFEROBJECTI64VPROC)load(\"glGetQueryBufferObjecti64v\");\n  glad_glGetQueryBufferObjectiv =\n      (PFNGLGETQUERYBUFFEROBJECTIVPROC)load(\"glGetQueryBufferObjectiv\");\n  glad_glGetQueryBufferObjectui64v =\n      (PFNGLGETQUERYBUFFEROBJECTUI64VPROC)load(\"glGetQueryBufferObjectui64v\");\n  glad_glGetQueryBufferObjectuiv =\n      (PFNGLGETQUERYBUFFEROBJECTUIVPROC)load(\"glGetQueryBufferObjectuiv\");\n  glad_glMemoryBarrierByRegion =\n      (PFNGLMEMORYBARRIERBYREGIONPROC)load(\"glMemoryBarrierByRegion\");\n  glad_glGetTextureSubImage =\n      (PFNGLGETTEXTURESUBIMAGEPROC)load(\"glGetTextureSubImage\");\n  glad_glGetCompressedTextureSubImage =\n      (PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC)load(\n          \"glGetCompressedTextureSubImage\");\n  glad_glGetGraphicsResetStatus =\n      (PFNGLGETGRAPHICSRESETSTATUSPROC)load(\"glGetGraphicsResetStatus\");\n  glad_glGetnCompressedTexImage =\n      (PFNGLGETNCOMPRESSEDTEXIMAGEPROC)load(\"glGetnCompressedTexImage\");\n  glad_glGetnTexImage = (PFNGLGETNTEXIMAGEPROC)load(\"glGetnTexImage\");\n  glad_glGetnUniformdv = (PFNGLGETNUNIFORMDVPROC)load(\"glGetnUniformdv\");\n  glad_glGetnUniformfv = (PFNGLGETNUNIFORMFVPROC)load(\"glGetnUniformfv\");\n  glad_glGetnUniformiv = (PFNGLGETNUNIFORMIVPROC)load(\"glGetnUniformiv\");\n  glad_glGetnUniformuiv = (PFNGLGETNUNIFORMUIVPROC)load(\"glGetnUniformuiv\");\n  glad_glReadnPixels = (PFNGLREADNPIXELSPROC)load(\"glReadnPixels\");\n  glad_glGetnMapdv = (PFNGLGETNMAPDVPROC)load(\"glGetnMapdv\");\n  glad_glGetnMapfv = (PFNGLGETNMAPFVPROC)load(\"glGetnMapfv\");\n  glad_glGetnMapiv = (PFNGLGETNMAPIVPROC)load(\"glGetnMapiv\");\n  glad_glGetnPixelMapfv = (PFNGLGETNPIXELMAPFVPROC)load(\"glGetnPixelMapfv\");\n  glad_glGetnPixelMapuiv = (PFNGLGETNPIXELMAPUIVPROC)load(\"glGetnPixelMapuiv\");\n  glad_glGetnPixelMapusv = (PFNGLGETNPIXELMAPUSVPROC)load(\"glGetnPixelMapusv\");\n  glad_glGetnPolygonStipple =\n      (PFNGLGETNPOLYGONSTIPPLEPROC)load(\"glGetnPolygonStipple\");\n  glad_glGetnColorTable = (PFNGLGETNCOLORTABLEPROC)load(\"glGetnColorTable\");\n  glad_glGetnConvolutionFilter =\n      (PFNGLGETNCONVOLUTIONFILTERPROC)load(\"glGetnConvolutionFilter\");\n  glad_glGetnSeparableFilter =\n      (PFNGLGETNSEPARABLEFILTERPROC)load(\"glGetnSeparableFilter\");\n  glad_glGetnHistogram = (PFNGLGETNHISTOGRAMPROC)load(\"glGetnHistogram\");\n  glad_glGetnMinmax = (PFNGLGETNMINMAXPROC)load(\"glGetnMinmax\");\n  glad_glTextureBarrier = (PFNGLTEXTUREBARRIERPROC)load(\"glTextureBarrier\");\n}\nstatic void load_GL_VERSION_4_6(GLADloadproc load) {\n  if (!GLAD_GL_VERSION_4_6)\n    return;\n  glad_glSpecializeShader =\n      (PFNGLSPECIALIZESHADERPROC)load(\"glSpecializeShader\");\n  glad_glMultiDrawArraysIndirectCount =\n      (PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC)load(\n          \"glMultiDrawArraysIndirectCount\");\n  glad_glMultiDrawElementsIndirectCount =\n      (PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC)load(\n          \"glMultiDrawElementsIndirectCount\");\n  glad_glPolygonOffsetClamp =\n      (PFNGLPOLYGONOFFSETCLAMPPROC)load(\"glPolygonOffsetClamp\");\n}\nstatic int find_extensionsGL(void) {\n  if (!get_exts())\n    return 0;\n  (void)&has_ext;\n  free_exts();\n  return 1;\n}\n\nstatic void find_coreGL(void) {\n\n  /* Thank you @elmindreda\n   * https://github.com/elmindreda/greg/blob/master/templates/greg.c.in#L176\n   * https://github.com/glfw/glfw/blob/master/src/context.c#L36\n   */\n  int i, major, minor;\n\n  const char *version;\n  const char *prefixes[] = {\"OpenGL ES-CM \", \"OpenGL ES-CL \", \"OpenGL ES \",\n                            NULL};\n\n  version = (const char *)glGetString(GL_VERSION);\n  if (!version)\n    return;\n\n  for (i = 0; prefixes[i]; i++) {\n    const size_t length = strlen(prefixes[i]);\n    if (strncmp(version, prefixes[i], length) == 0) {\n      version += length;\n      break;\n    }\n  }\n\n/* PR #18 */\n#ifdef _MSC_VER\n  sscanf_s(version, \"%d.%d\", &major, &minor);\n#else\n  sscanf(version, \"%d.%d\", &major, &minor);\n#endif\n\n  GLVersion.major = major;\n  GLVersion.minor = minor;\n  max_loaded_major = major;\n  max_loaded_minor = minor;\n  GLAD_GL_VERSION_1_0 = (major == 1 && minor >= 0) || major > 1;\n  GLAD_GL_VERSION_1_1 = (major == 1 && minor >= 1) || major > 1;\n  GLAD_GL_VERSION_1_2 = (major == 1 && minor >= 2) || major > 1;\n  GLAD_GL_VERSION_1_3 = (major == 1 && minor >= 3) || major > 1;\n  GLAD_GL_VERSION_1_4 = (major == 1 && minor >= 4) || major > 1;\n  GLAD_GL_VERSION_1_5 = (major == 1 && minor >= 5) || major > 1;\n  GLAD_GL_VERSION_2_0 = (major == 2 && minor >= 0) || major > 2;\n  GLAD_GL_VERSION_2_1 = (major == 2 && minor >= 1) || major > 2;\n  GLAD_GL_VERSION_3_0 = (major == 3 && minor >= 0) || major > 3;\n  GLAD_GL_VERSION_3_1 = (major == 3 && minor >= 1) || major > 3;\n  GLAD_GL_VERSION_3_2 = (major == 3 && minor >= 2) || major > 3;\n  GLAD_GL_VERSION_3_3 = (major == 3 && minor >= 3) || major > 3;\n  GLAD_GL_VERSION_4_0 = (major == 4 && minor >= 0) || major > 4;\n  GLAD_GL_VERSION_4_1 = (major == 4 && minor >= 1) || major > 4;\n  GLAD_GL_VERSION_4_2 = (major == 4 && minor >= 2) || major > 4;\n  GLAD_GL_VERSION_4_3 = (major == 4 && minor >= 3) || major > 4;\n  GLAD_GL_VERSION_4_4 = (major == 4 && minor >= 4) || major > 4;\n  GLAD_GL_VERSION_4_5 = (major == 4 && minor >= 5) || major > 4;\n  GLAD_GL_VERSION_4_6 = (major == 4 && minor >= 6) || major > 4;\n  if (GLVersion.major > 4 || (GLVersion.major >= 4 && GLVersion.minor >= 6)) {\n    max_loaded_major = 4;\n    max_loaded_minor = 6;\n  }\n}\n\nint gladLoadGLLoader(GLADloadproc load) {\n  GLVersion.major = 0;\n  GLVersion.minor = 0;\n  glGetString = (PFNGLGETSTRINGPROC)load(\"glGetString\");\n  if (glGetString == NULL)\n    return 0;\n  if (glGetString(GL_VERSION) == NULL)\n    return 0;\n  find_coreGL();\n  load_GL_VERSION_1_0(load);\n  load_GL_VERSION_1_1(load);\n  load_GL_VERSION_1_2(load);\n  load_GL_VERSION_1_3(load);\n  load_GL_VERSION_1_4(load);\n  load_GL_VERSION_1_5(load);\n  load_GL_VERSION_2_0(load);\n  load_GL_VERSION_2_1(load);\n  load_GL_VERSION_3_0(load);\n  load_GL_VERSION_3_1(load);\n  load_GL_VERSION_3_2(load);\n  load_GL_VERSION_3_3(load);\n  load_GL_VERSION_4_0(load);\n  load_GL_VERSION_4_1(load);\n  load_GL_VERSION_4_2(load);\n  load_GL_VERSION_4_3(load);\n  load_GL_VERSION_4_4(load);\n  load_GL_VERSION_4_5(load);\n  load_GL_VERSION_4_6(load);\n\n  if (!find_extensionsGL())\n    return 0;\n  return GLVersion.major != 0 || GLVersion.minor != 0;\n}\n"
              }
            }
          },
          "main.cpp": {
            "type": "text_file",
            "content": "#include <glad/glad.h>\n\n#include <GLFW/glfw3.h>\n\n#include <iostream>\n\nvoid framebuffer_size_callback(GLFWwindow *window, int width, int height);\nvoid processInput(GLFWwindow *window);\n\n// settings\nconst unsigned int SCR_WIDTH = 800;\nconst unsigned int SCR_HEIGHT = 600;\n\nint main() {\n  // glfw: initialize and configure\n  // ------------------------------\n  glfwInit();\n  glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);\n  glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);\n  glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);\n\n#ifdef __APPLE__\n  glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);\n#endif\n\n  // glfw window creation\n  // --------------------\n  GLFWwindow *window =\n      glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, \"LearnOpenGL\", NULL, NULL);\n  if (window == NULL) {\n    std::cout << \"Failed to create GLFW window\" << std::endl;\n    glfwTerminate();\n    return -1;\n  }\n  glfwMakeContextCurrent(window);\n  glfwSetFramebufferSizeCallback(window, framebuffer_size_callback);\n\n  // glad: load all OpenGL function pointers\n  // ---------------------------------------\n  if (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress)) {\n    std::cout << \"Failed to initialize GLAD\" << std::endl;\n    return -1;\n  }\n\n  // render loop\n  // -----------\n  while (!glfwWindowShouldClose(window)) {\n    // input\n    // -----\n    processInput(window);\n\n    // glfw: swap buffers and poll IO events (keys pressed/released, mouse moved\n    // etc.)\n    // -------------------------------------------------------------------------------\n    glfwSwapBuffers(window);\n    glfwPollEvents();\n  }\n\n  // glfw: terminate, clearing all previously allocated GLFW resources.\n  // ------------------------------------------------------------------\n  glfwTerminate();\n  return 0;\n}\n\n// process all input: query GLFW whether relevant keys are pressed/released this\n// frame and react accordingly\n// ---------------------------------------------------------------------------------------------------------\nvoid processInput(GLFWwindow *window) {\n  if (glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS)\n    glfwSetWindowShouldClose(window, true);\n}\n\n// glfw: whenever the window size changed (by OS or user resize) this callback\n// function executes\n// ---------------------------------------------------------------------------------------------\nvoid framebuffer_size_callback(GLFWwindow *window, int width, int height) {\n  // make sure the viewport matches the new window dimensions; note that width\n  // and height will be significantly larger than specified on retina displays.\n  glViewport(0, 0, width, height);\n}"
          }
        }
      }
    }
  }
}